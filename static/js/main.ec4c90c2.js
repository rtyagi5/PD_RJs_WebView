/*! For license information please see main.ec4c90c2.js.LICENSE.txt */
(()=>{var e={879:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var a="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e};var r=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var a=e[t];if(a&&a.Math==Math)return a}throw Error("Cannot find global object")}(this);function o(e,t){if(t)e:{var n=r;e=e.split(".");for(var o=0;o<e.length-1;o++){var s=e[o];if(!(s in n))break e;n=n[s]}(t=t(o=n[e=e[e.length-1]]))!=o&&null!=t&&a(n,e,{configurable:!0,writable:!0,value:t})}}function s(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function c(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}o("Symbol",(function(e){function t(e,t){this.h=e,a(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function e(a){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(a||"")+"_"+r++,a)}})),o("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),o=0;o<n.length;o++){var i=r[n[o]];"function"===typeof i&&"function"!=typeof i.prototype[e]&&a(i.prototype,e,{configurable:!0,writable:!0,value:function(){return s(t(this))}})}return e}));var l="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e};o("Object.assign",(function(e){return e||l}));var u,h="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)u=Object.setPrototypeOf;else{var d;e:{var p={};try{p.__proto__={a:!0},d=p.a;break e}catch(vn){}d=!1}u=d?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var f=u;function m(e,t){if(e.prototype=h(t.prototype),e.prototype.constructor=e,f)f(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var a=Object.getOwnPropertyDescriptor(t,n);a&&Object.defineProperty(e,n,a)}else e[n]=t[n];e.za=t.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function y(e){if(e.m)throw new TypeError("Generator is already running");e.m=!0}function b(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function x(e,t,n){return e.h=n,{value:t}}function v(e){this.h=new g,this.i=e}function w(e,t,n,a){try{var r=t.call(e.h.j,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return e.h.m=!1,r;var o=r.value}catch(s){return e.h.j=null,b(e.h,s),k(e)}return e.h.j=null,a.call(e.h,o),k(e)}function k(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(n){e.h.i=void 0,b(e.h,n)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=k(e)),t},this.throw=function(t){return y(e.h),e.h.j?t=w(e,e.h.j.throw,t,e.h.u):(b(e.h,t),t=k(e)),t},this.return=function(t){return function(e,t){y(e.h);var n=e.h.j;return n?w(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),k(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function I(e){return function(e){function t(t){return e.next(t)}function n(t){return e.throw(t)}return new Promise((function(a,r){!function e(o){o.done?a(o.value):Promise.resolve(o.value).then(t,n).then(e,r)}(e.next())}))}(new S(new v(e)))}function C(e){return e||Array.prototype.fill}g.prototype.u=function(e){this.i=e},g.prototype.return=function(e){this.l={return:e},this.h=this.v},o("Promise",(function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(n){t.reject(n)}}function n(){this.h=null}function a(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j((function(){t.m()}))}this.h.push(e)};var o=r.setTimeout;n.prototype.j=function(e){o(e,0)},n.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(a){this.l(a)}}}this.h=null},n.prototype.l=function(e){this.j((function(){throw e}))},t.prototype.l=function(){function e(e){return function(a){n||(n=!0,e.call(t,a))}}var t=this,n=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(n){return void this.m(n)}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;o((function(){if(e.D()){var t=r.console;"undefined"!==typeof t&&t.error(e.j)}}),1)},t.prototype.D=function(){if(this.u)return!1;var e=r.CustomEvent,t=r.Event,n=r.dispatchEvent;return"undefined"===typeof n||("function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,n(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)s.i(this.h[e]);this.h=null}};var s=new n;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var n=this.l();try{e.call(t,n.resolve,n.reject)}catch(a){n.reject(a)}},t.prototype.then=function(e,n){function a(e,t){return"function"==typeof e?function(t){try{r(e(t))}catch(n){o(n)}}:t}var r,o,s=new t((function(e,t){r=e,o=t}));return this.T(a(e,r),a(n,o)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function n(){switch(a.i){case 1:e(a.j);break;case 2:t(a.j);break;default:throw Error("Unexpected state: "+a.i)}}var a=this;null==this.h?s.i(n):this.h.push(n),this.u=!0},t.resolve=a,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var r=i(e),o=r.next();!o.done;o=r.next())a(o.value).T(t,n)}))},t.all=function(e){var n=i(e),r=n.next();return r.done?a([]):new t((function(e,t){function o(t){return function(n){s[t]=n,0==--i&&e(s)}}var s=[],i=0;do{s.push(void 0),i++,a(r.value).T(o(s.length-1),t),r=n.next()}while(!r.done)}))},t})),o("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,a=!1,r={next:function(){if(!a&&n<e.length){var r=n++;return{value:t(r,e[r]),done:!1}}return a=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(e){return e}))}})),o("Array.prototype.fill",(function(e){return e||function(e,t,n){var a=this.length||0;for(0>t&&(t=Math.max(0,a+t)),(null==n||n>a)&&(n=a),0>(n=Number(n))&&(n=Math.max(0,a+n)),t=Number(t||0);t<n;t++)this[t]=e;return this}})),o("Int8Array.prototype.fill",C),o("Uint8Array.prototype.fill",C),o("Uint8ClampedArray.prototype.fill",C),o("Int16Array.prototype.fill",C),o("Uint16Array.prototype.fill",C),o("Int32Array.prototype.fill",C),o("Uint32Array.prototype.fill",C),o("Float32Array.prototype.fill",C),o("Float64Array.prototype.fill",C),o("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t}})),o("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var a=n.length;for(0>(t=t||0)&&(t=Math.max(t+a,0));t<a;t++){var r=n[t];if(r===e||Object.is(r,e))return!0}return!1}})),o("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}}));var N=this||self;function T(e,t){e=e.split(".");var n,a=N;e[0]in a||"undefined"==typeof a.execScript||a.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?a=a[n]&&a[n]!==Object.prototype[n]?a[n]:a[n]={}:a[n]=t}function E(e){var t;return(t=N.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var R=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var n=e.length,a=Array(n),r="string"===typeof e?e.split(""):e,o=0;o<n;o++)o in r&&(a[o]=t.call(void 0,r[o],o,e));return a},A={},_=null;function F(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var a=new Uint8Array(n),r=0;return function(e,t){function n(t){for(;a<e.length;){var n=e.charAt(a++),r=_[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}O();for(var a=0;;){var r=n(-1),o=n(0),s=n(64),i=n(64);if(64===i&&-1===r)break;t(r<<2|o>>4),64!=s&&(t(o<<4&240|s>>2),64!=i&&t(s<<6&192|i))}}(e,(function(e){a[r++]=e})),r!==n?a.subarray(0,r):a}function O(){if(!_){_={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var a=e.concat(t[n].split(""));A[n]=a;for(var r=0;r<a.length;r++){var o=a[r];void 0===_[o]&&(_[o]=r)}}}}var D="undefined"!==typeof Uint8Array,M=!(E("Trident")||E("MSIE"))&&"function"===typeof N.btoa;function z(e){if(!M){var t;void 0===t&&(t=0),O(),t=A[t];for(var n=Array(Math.floor(e.length/3)),a=t[64]||"",r=0,o=0;r<e.length-2;r+=3){var s=e[r],i=e[r+1],c=e[r+2],l=t[s>>2];s=t[(3&s)<<4|i>>4],i=t[(15&i)<<2|c>>6],c=t[63&c],n[o++]=l+s+i+c}switch(l=0,c=a,e.length-r){case 2:c=t[(15&(l=e[r+1]))<<2]||a;case 1:e=e[r],n[o]=t[e>>2]+t[(3&e)<<4|l>>4]+c+a}return n.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return t+=String.fromCharCode.apply(null,e),btoa(t)}var L,P=RegExp("[-_.]","g");function B(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function W(e){if(!M)return F(e);P.test(e)&&(e=e.replace(P,B)),e=atob(e);for(var t=new Uint8Array(e.length),n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}function U(){return L||(L=new Uint8Array(0))}var V={},G="function"===typeof Uint8Array.prototype.slice,H=0,j=0;function K(e){var t=0>e,n=(e=Math.abs(e))>>>0;e=Math.floor((e-n)/4294967296),t&&(t=(n=i(Y(n,e))).next().value,e=n.next().value,n=t),H=n>>>0,j=e>>>0}var q,X="function"===typeof BigInt;function Y(e,t){return t=~t,e?e=1+~e:t+=1,[e,t]}function Q(e,t){this.i=e>>>0,this.h=t>>>0}function Z(e){if(!e)return q||(q=new Q(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)K(Number(e));else if(X)e=BigInt(e),H=Number(e&BigInt(4294967295))>>>0,j=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);j=H=0;for(var n=e.length,a=t,r=(n-t)%6+t;r<=n;a=r,r+=6)a=Number(e.slice(a,r)),j*=1e6,4294967296<=(H=1e6*H+a)&&(j+=H/4294967296|0,H%=4294967296);t&&(e=(t=i(Y(H,j))).next().value,t=t.next().value,H=e,j=t)}return new Q(H,j)}function J(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function $(){return Error("Failed to read varint, encoding is invalid.")}function ee(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function te(){throw Error("Invalid UTF8")}function ne(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var ae,re,oe,se=void 0,ie="undefined"!==typeof TextDecoder,ce="undefined"!==typeof TextEncoder;function le(e){if(e!==V)throw Error("illegal external caller")}function ue(e,t){if(le(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function he(){return oe||(oe=new ue(null,V))}function de(e){le(V);var t=e.V;return null==(t=null==t||D&&null!=t&&t instanceof Uint8Array?t:"string"===typeof t?W(t):null)?t:e.V=t}function pe(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,fe(this,e,t)}function fe(e,t,n){n=void 0===n?{}:n,e.S=void 0!==n.S&&n.S,t&&(t=function(e){if("string"===typeof e)return{buffer:W(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===ue)return{buffer:de(e)||U(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function me(e,t){if(e.h=t,t>e.j)throw ee(e.j,t)}function ge(e){var t=e.i,n=e.h,a=t[n++],r=127&a;if(128&a&&(r|=(127&(a=t[n++]))<<7,128&a&&(r|=(127&(a=t[n++]))<<14,128&a&&(r|=(127&(a=t[n++]))<<21,128&a&&(r|=(a=t[n++])<<28,128&a&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++]&&128&t[n++])))))throw $();return me(e,n),r}function ye(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var n=e.h,a=n+t;if(a>e.j)throw ee(t,e.j-n);return e.h=a,n}pe.prototype.reset=function(){this.h=this.l};var be=[];function xe(){this.h=[]}function ve(e,t,n){for(;0<n||127<t;)e.h.push(127&t|128),t=(t>>>7|n<<25)>>>0,n>>>=7;e.h.push(t)}function we(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ke(e,t){if(be.length){var n=be.pop();fe(n,e,t),e=n}else e=new pe(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function Se(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var n=ge(e.h)>>>0;if(t=n>>>3,!(0<=(n&=7)&&5>=n))throw J(n,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=n,!0}function Ie(e){switch(e.i){case 0:if(0!=e.i)Ie(e);else e:{for(var t=(e=e.h).h,n=t+10,a=e.i;t<n;)if(0===(128&a[t++])){me(e,t);break e}throw $()}break;case 1:me(e=e.h,e.h+8);break;case 2:2!=e.i?Ie(e):(t=ge(e.h)>>>0,me(e=e.h,e.h+t));break;case 5:me(e=e.h,e.h+4);break;case 3:for(t=e.l;;){if(!Se(e))throw Error("Unmatched start-group tag: stream EOF");if(4==e.i){if(e.l!=t)throw Error("Unmatched end-group tag");break}Ie(e)}break;default:throw J(e.i,e.j)}}xe.prototype.length=function(){return this.h.length},xe.prototype.end=function(){var e=this.h;return this.h=[],e},ke.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ke.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var Ce=[];function Ne(){this.j=[],this.i=0,this.h=new xe}function Te(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var Ee="function"===typeof Symbol&&"symbol"===typeof Symbol()?Symbol():void 0;function Re(e,t){return Ee?e[Ee]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function Ae(e,t){Ee?e[Ee]&&(e[Ee]&=~t):void 0!==e.A&&(e.A&=~t)}function _e(e){var t;return null==(t=Ee?e[Ee]:e.A)?0:t}function Fe(e,t){Ee?e[Ee]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function Oe(e){return Re(e,1),e}function De(e,t){Fe(t,-51&e)}function Me(e,t){Fe(t,-41&e|18)}var ze={};function Le(e){return null!==e&&"object"===typeof e&&!Array.isArray(e)&&e.constructor===Object}var Pe,Be,We=[];function Ue(e){if(2&_e(e.o))throw Error("Cannot mutate an immutable Message")}function Ve(e){var t=e.length;(t=t?e[t-1]:void 0)&&Le(t)?t.g=1:(t={},e.push((t.g=1,t)))}function Ge(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function He(e,t){return-1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function je(e,t,n,a){Ue(e),Ke(e,t,n,a)}function Ke(e,t,n,a){e.j&&(e.j=void 0),t>=e.i||a?Ge(e)[t]=n:(e.o[t+e.G]=n,(e=e.B)&&t in e&&delete e[t])}function qe(e,t,n,a){var r=He(e,t);Array.isArray(r)||(r=Pe);var o=_e(r);if(1&o||Oe(r),a)2&o||Re(r,2),1&n||Object.freeze(r);else{a=!(2&n);var s=2&o;1&n||!s?a&&16&o&&!s&&Ae(r,16):Ke(e,t,r=Oe(Array.prototype.slice.call(r)))}return r}function Xe(e,t){var n=He(e,t),a=null==n?n:"number"===typeof n||"NaN"===n||"Infinity"===n||"-Infinity"===n?Number(n):void 0;return null!=a&&a!==n&&Ke(e,t,a),a}function Ye(e,t,n,a,r){e.h||(e.h={});var o=e.h[n],s=qe(e,n,3,r);if(!o){var i=s;o=[];var c=!!(16&_e(e.o));s=!!(2&_e(i));var l=i;!r&&s&&(i=Array.prototype.slice.call(i));for(var u=s,h=0;h<i.length;h++){var d=i[h],p=t,f=!1;if(f=void 0!==f&&f,void 0!==(d=Array.isArray(d)?new p(d):f?new p:void 0)){var m=f=_e(p=d.o);s&&(m|=2),c&&(m|=16),m!=f&&Fe(p,m),p=m,u=u||!!(2&p),o.push(d)}}return e.h[n]=o,t=33|(c=_e(i)),c!=(t=u?-9&t:8|t)&&(u=i,Object.isFrozen(u)&&(u=Array.prototype.slice.call(u)),Fe(u,t),i=u),l!==i&&Ke(e,n,i),(r||a&&s)&&Re(o,2),a&&Object.freeze(o),o}return r||(r=Object.isFrozen(o),a&&!r?Object.freeze(o):!a&&r&&(o=Array.prototype.slice.call(o),e.h[n]=o)),o}function Qe(e,t,n){var a=!!(2&_e(e.o));if(t=Ye(e,t,n,a,a),e=qe(e,n,3,a),!(a||8&_e(e))){for(a=0;a<t.length;a++){if(2&_e((n=t[a]).o)){var r=ct(n,!1);r.j=n}else r=n;n!==r&&(t[a]=r,e[a]=r.o)}Re(e,8)}return t}function Ze(e,t,n){if(null!=n&&"number"!==typeof n)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof n+": "+n);je(e,t,n)}function Je(e,t,n,a,r){Ue(e);var o=Ye(e,n,t,!1,!1);return n=null!=a?a:new n,e=qe(e,t,2,!1),void 0!=r?(o.splice(r,0,n),e.splice(r,0,n.o)):(o.push(n),e.push(n.o)),n.C()&&Ae(e,8),n}function $e(e,t){return null==e?t:e}function et(e,t,n){return n=void 0===n?0:n,$e(Xe(e,t),n)}function tt(e,t,n,a){if(null!=e){if(Array.isArray(e))e=nt(e,t,n,void 0!==a);else if(Le(e)){var r,o={};for(r in e)o[r]=tt(e[r],t,n,a);e=o}else e=t(e,a);return e}}function nt(e,t,n,a){var r=_e(e);a=a?!!(16&r):void 0,e=Array.prototype.slice.call(e);for(var o=0;o<e.length;o++)e[o]=tt(e[o],t,n,a);return n(r,e),e}function at(e){return e.ja===ze?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e)if(Array.isArray(e)){if(0!==(128&_e(e)))return Ve(e=Array.prototype.slice.call(e)),e}else{if(D&&null!=e&&e instanceof Uint8Array)return z(e);if(e instanceof ue){var t=e.V;return null==t?"":"string"===typeof t?t:e.V=z(t)}}}return e}(e)}function rt(e,t){128&e&&Ve(t)}function ot(e,t,n){if(n=void 0===n?Me:n,null!=e){if(D&&e instanceof Uint8Array)return e.length?new ue(new Uint8Array(e),V):he();if(Array.isArray(e)){var a=_e(e);return 2&a?e:!t||32&a||!(16&a||0===a)?(4&(t=_e(e=nt(e,ot,4&a?Me:n,!0)))&&2&t&&Object.freeze(e),e):(Fe(e,2|a),e)}return e.ja===ze?it(e):e}}function st(e,t,n,a,r,o,s){if(e=e.h&&e.h[n]){if(2&(a=_e(e))?a=e:(Me(a,o=R(e,it)),Object.freeze(o),a=o),Ue(t),s=null==a?Pe:Oe([]),null!=a){for(o=!!a.length,e=0;e<a.length;e++){var i=a[e];o=o&&!(2&_e(i.o)),s[e]=i.o}o=1|(o?8:0),((e=_e(s))&o)!==o&&(Object.isFrozen(s)&&(s=Array.prototype.slice.call(s)),Fe(s,e|o)),t.h||(t.h={}),t.h[n]=a}else t.h&&(t.h[n]=void 0);Ke(t,n,s,r)}else je(t,n,ot(a,o,s),r)}function it(e){return 2&_e(e.o)||Re((e=ct(e,!0)).o,2),e}function ct(e,t){var n=e.o,a=[];Re(a,16);var r=e.constructor.h;if(r&&a.push(r),r=e.B){a.length=n.length,a.fill(void 0,a.length,n.length);var o={};a[a.length-1]=o}0!==(128&_e(n))&&Ve(a),t=t||e.C()?Me:De,o=e.constructor,Be=a,a=new o(a),Be=void 0,e.R&&(a.R=e.R.slice()),o=!!(16&_e(n));for(var s=r?n.length-1:n.length,i=0;i<s;i++)st(e,a,i-e.G,n[i],!1,o,t);if(r)for(var c in r)st(e,a,+c,r[c],!0,o,t);return a}function lt(e,t,n){null==e&&(e=Be),Be=void 0;var a,r=this.constructor.i||0,o=0<r,s=this.constructor.h,i=!1;if(null==e){var c=48,l=!0;o&&(r=0,c|=128),Fe(e=s?[s]:[],c)}else{if(!Array.isArray(e))throw Error();if(s&&s!==e[0])throw Error();var u=c=Re(e,0);if((l=0!==(16&u))&&((i=0!==(32&u))||(u|=32)),o){if(128&u)r=0;else if(0<e.length){var h=e[e.length-1];if(Le(h)&&"g"in h){r=0,u|=128,delete h.g;var d,p=!0;for(d in h){p=!1;break}p&&e.pop()}}}else if(128&u)throw Error();c!==u&&Fe(e,u)}if(this.G=(s?0:-1)-r,this.h=void 0,this.o=e,r=(s=this.o.length)-1,s&&Le(s=this.o[r])?(this.B=s,this.i=r-this.G):void 0!==t&&-1<t?(this.i=Math.max(t,r+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE,!o&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(t=l&&!i&&!0,o=this.i,l=0;l<n.length;l++)(i=n[l])<o?(r=e[i+=this.G])?ut(r,t):e[i]=Pe:(a||(a=Ge(this)),(r=a[i])?ut(r,t):a[i]=Pe)}function ut(e,t){if(Array.isArray(e)){var n=_e(e),a=1;!t||2&n||(a|=16),(n&a)!==a&&Fe(e,n|a)}}function ht(e,t,n){if(n){var a,r={};for(a in n){var o=n[a],s=o.ra;s||(r.J=o.xa||o.oa.W,o.ia?(r.aa=xt(o.ia),s=function(e){return function(t,n,a){return e.J(t,n,a,e.aa)}}(r)):o.ka?(r.Z=vt(o.da.P,o.ka),s=function(e){return function(t,n,a){return e.J(t,n,a,e.Z)}}(r)):s=r.J,o.ra=s),s(t,e,o.da),r={J:r.J,aa:r.aa,Z:r.Z}}}!function(e,t){if(t=t.R){Te(e,e.h.end());for(var n=0;n<t.length;n++)Te(e,de(t[n])||U())}}(t,e)}Fe(We,23),Pe=Object.freeze(We),lt.prototype.toJSON=function(){return nt(this.o,at,rt)},lt.prototype.C=function(){return!!(2&_e(this.o))},lt.prototype.ja=ze,lt.prototype.toString=function(){return this.o.toString()};var dt=Symbol();function pt(e,t,n){return e[dt]||(e[dt]=function(e,a){return t(e,a,n)})}function ft(e){var t=e[dt];if(!t){var n=Ft(e);t=function(e,t){return Ot(e,t,n)},e[dt]=t}return t}function mt(e){var t=function(e){var t=e.ia;return t?ft(t):(t=e.wa)?pt(e.da.P,t,e.ka):void 0}(e),n=e.da,a=e.oa.U;return t?function(e,r){return a(e,r,n,t)}:function(e,t){return a(e,t,n)}}function gt(e,t){var n=e[t];return"function"==typeof n&&0===n.length&&(n=n(),e[t]=n),Array.isArray(n)&&(Tt in n||wt in n||0<n.length&&"function"==typeof n[0])?n:void 0}function yt(e,t,n,a,r,o){t.P=e[0];var s=1;if(e.length>s&&"number"!==typeof e[s]){var i=e[s++];n(t,i)}for(;s<e.length;){n=e[s++];for(var c=s+1;c<e.length&&"number"!==typeof e[c];)c++;switch(i=e[s++],c-=s){case 0:a(t,n,i);break;case 1:(c=gt(e,s))?(s++,r(t,n,i,c)):a(t,n,i,e[s++]);break;case 2:r(t,n,i,c=gt(e,c=s++),e[s++]);break;case 3:o(t,n,i,e[s++],e[s++],e[s++]);break;case 4:o(t,n,i,e[s++],e[s++],e[s++],e[s++]);break;default:throw Error("unexpected number of binary field arguments: "+c)}}return t}var bt=Symbol();function xt(e){var t=e[bt];if(!t){var n=Nt(e);t=function(e,t){return Dt(e,t,n)},e[bt]=t}return t}function vt(e,t){var n=e[bt];return n||(n=function(e,n){return ht(e,n,t)},e[bt]=n),n}var wt=Symbol();function kt(e,t){e.push(t)}function St(e,t,n){e.push(t,n.W)}function It(e,t,n,a){var r=xt(a),o=Nt(a).P,s=n.W;e.push(t,(function(e,t,n){return s(e,t,n,o,r)}))}function Ct(e,t,n,a,r,o){var s=vt(a,o),i=n.W;e.push(t,(function(e,t,n){return i(e,t,n,a,s)}))}function Nt(e){var t=e[wt];return t||(t=yt(e,e[wt]=[],kt,St,It,Ct),Tt in e&&wt in e&&(e.length=0),t)}var Tt=Symbol();function Et(e,t){e[0]=t}function Rt(e,t,n,a){var r=n.U;e[t]=a?function(e,t,n){return r(e,t,n,a)}:r}function At(e,t,n,a,r){var o=n.U,s=ft(a),i=Ft(a).P;e[t]=function(e,t,n){return o(e,t,n,i,s,r)}}function _t(e,t,n,a,r,o,s){var i=n.U,c=pt(a,r,o);e[t]=function(e,t,n){return i(e,t,n,a,c,s)}}function Ft(e){var t=e[Tt];return t||(t=yt(e,e[Tt]={},Et,Rt,At,_t),Tt in e&&wt in e&&(e.length=0),t)}function Ot(e,t,n){for(;Se(t)&&4!=t.i;){var a=t.l,r=n[a];if(!r){var o=n[0];o&&(o=o[a])&&(r=n[a]=mt(o))}if(!r||!r(t,e,a)){a=e,o=(r=t).j,Ie(r);var s=r;if(!s.ca){if(r=s.h.h-o,s.h.h=o,s=s.h,0==r)r=he();else{if(o=ye(s,r),s.S&&s.m)r=s.i.subarray(o,o+r);else{s=s.i;var i=o;r=i===(r=o+r)?U():G?s.slice(i,r):new Uint8Array(s.subarray(i,r))}r=0==r.length?he():new ue(r,V)}(o=a.R)?o.push(r):a.R=[r]}}}return e}function Dt(e,t,n){for(var a=n.length,r=1==a%2,o=r?1:0;o<a;o+=2)(0,n[o+1])(t,e,n[o]);ht(e,t,r?n[0]:void 0)}function Mt(e,t){return{U:e,W:t}}var zt=Mt((function(e,t,n){if(5!==e.i)return!1;var a=(e=e.h).i,r=e.h,o=a[r],s=a[r+1],i=a[r+2];return a=a[r+3],me(e,e.h+4),e=2*((s=(o|s<<8|i<<16|a<<24)>>>0)>>31)+1,o=s>>>23&255,s&=8388607,je(t,n,255==o?s?NaN:1/0*e:0==o?e*Math.pow(2,-149)*s:e*Math.pow(2,o-150)*(s+Math.pow(2,23))),!0}),(function(e,t,n){if(null!=(t=Xe(t,n))){we(e.h,8*n+5),e=e.h;var a=+t;0===a?0<1/a?H=j=0:(j=0,H=2147483648):isNaN(a)?(j=0,H=2147483647):34028234663852886e22<(a=(n=0>a?-2147483648:0)?-a:a)?(j=0,H=(2139095040|n)>>>0):11754943508222875e-54>a?(a=Math.round(a/Math.pow(2,-149)),j=0,H=(n|a)>>>0):(t=Math.floor(Math.log(a)/Math.LN2),a*=Math.pow(2,-t),16777216<=(a=Math.round(8388608*a))&&++t,j=0,H=(n|t+127<<23|8388607&a)>>>0),n=H,e.h.push(n>>>0&255),e.h.push(n>>>8&255),e.h.push(n>>>16&255),e.h.push(n>>>24&255)}})),Lt=Mt((function(e,t,n){if(0!==e.i)return!1;var a=e.h,r=0,o=e=0,s=a.i,i=a.h;do{var c=s[i++];r|=(127&c)<<o,o+=7}while(32>o&&128&c);for(32<o&&(e|=(127&c)>>4),o=3;32>o&&128&c;o+=7)e|=(127&(c=s[i++]))<<o;if(me(a,i),!(128>c))throw $();return a=r>>>0,(e=2147483648&(c=e>>>0))&&(c=~c>>>0,0==(a=1+~a>>>0)&&(c=c+1>>>0)),a=4294967296*c+(a>>>0),je(t,n,e?-a:a),!0}),(function(e,t,n){null!=(t=He(t,n))&&("string"===typeof t&&Z(t),null!=t&&(we(e.h,8*n),"number"===typeof t?(e=e.h,K(t),ve(e,H,j)):(n=Z(t),ve(e.h,n.i,n.h))))})),Pt=Mt((function(e,t,n){return 0===e.i&&(je(t,n,ge(e.h)),!0)}),(function(e,t,n){if(null!=(t=He(t,n))&&null!=t)if(we(e.h,8*n),e=e.h,0<=(n=t))we(e,n);else{for(t=0;9>t;t++)e.h.push(127&n|128),n>>=7;e.h.push(1)}})),Bt=Mt((function(e,t,n){if(2!==e.i)return!1;var a=ge(e.h)>>>0,r=ye(e=e.h,a);if(e=e.i,ie){var o,s=e;(o=ae)||(o=ae=new TextDecoder("utf-8",{fatal:!0})),e=r+a,s=0===r&&e===s.length?s:s.subarray(r,e);try{var i=o.decode(s)}catch(h){if(void 0===se){try{o.decode(new Uint8Array([128]))}catch(d){}try{o.decode(new Uint8Array([97])),se=!0}catch(d){se=!1}}throw!se&&(ae=void 0),h}}else{a=(i=r)+a,r=[];for(var c,l,u=null;i<a;)128>(c=e[i++])?r.push(c):224>c?i>=a?te():(l=e[i++],194>c||128!==(192&l)?(i--,te()):r.push((31&c)<<6|63&l)):240>c?i>=a-1?te():128!==(192&(l=e[i++]))||224===c&&160>l||237===c&&160<=l||128!==(192&(s=e[i++]))?(i--,te()):r.push((15&c)<<12|(63&l)<<6|63&s):244>=c?i>=a-2?te():128!==(192&(l=e[i++]))||0!==l-144+(c<<28)>>30||128!==(192&(s=e[i++]))||128!==(192&(o=e[i++]))?(i--,te()):(c=(7&c)<<18|(63&l)<<12|(63&s)<<6|63&o,c-=65536,r.push(55296+(c>>10&1023),56320+(1023&c))):te(),8192<=r.length&&(u=ne(u,r),r.length=0);i=ne(u,r)}return je(t,n,i),!0}),(function(e,t,n){if(null!=(t=He(t,n))){var a=!1;if(a=void 0!==a&&a,ce){if(a&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(t))throw Error("Found an unpaired surrogate");t=(re||(re=new TextEncoder)).encode(t)}else{for(var r=0,o=new Uint8Array(3*t.length),s=0;s<t.length;s++){var i=t.charCodeAt(s);if(128>i)o[r++]=i;else{if(2048>i)o[r++]=i>>6|192;else{if(55296<=i&&57343>=i){if(56319>=i&&s<t.length){var c=t.charCodeAt(++s);if(56320<=c&&57343>=c){i=1024*(i-55296)+c-56320+65536,o[r++]=i>>18|240,o[r++]=i>>12&63|128,o[r++]=i>>6&63|128,o[r++]=63&i|128;continue}s--}if(a)throw Error("Found an unpaired surrogate");i=65533}o[r++]=i>>12|224,o[r++]=i>>6&63|128}o[r++]=63&i|128}}t=r===o.length?o:o.subarray(0,r)}we(e.h,8*n+2),we(e.h,t.length),Te(e,e.h.end()),Te(e,t)}})),Wt=Mt((function(e,t,n,a,r){if(2!==e.i)return!1;t=Je(t,n,a),n=e.h.j,a=ge(e.h)>>>0;var o=e.h.h+a,s=o-n;if(0>=s&&(e.h.j=o,r(t,e,void 0,void 0,void 0),s=o-e.h.h),s)throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-s)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=o,e.h.j=n,!0}),(function(e,t,n,a,r){if(null!=(t=Qe(t,a,n)))for(a=0;a<t.length;a++){var o=e;we(o.h,8*n+2);var s=o.h.end();Te(o,s),s.push(o.i),o=s,r(t[a],e),s=e;var i=o.pop();for(i=s.i+s.h.length()-i;127<i;)o.push(127&i|128),i>>>=7,s.i++;o.push(i),s.i++}}));function Ut(e){return function(t,n){e:{if(Ce.length){var a=Ce.pop();a.setOptions(n),fe(a.h,t,n),t=a}else t=new ke(t,n);try{var r=Ft(e),o=Ot(new r.P,t,r);break e}finally{(r=t.h).i=null,r.m=!1,r.l=0,r.j=0,r.h=0,r.S=!1,t.l=-1,t.i=-1,100>Ce.length&&Ce.push(t)}o=void 0}return o}}function Vt(e){return function(){var t=new Ne;Dt(this,t,Nt(e)),Te(t,t.h.end());for(var n=new Uint8Array(t.i),a=t.j,r=a.length,o=0,s=0;s<r;s++){var i=a[s];n.set(i,o),o+=i.length}return t.j=[n],n}}function Gt(e){lt.call(this,e)}m(Gt,lt);var Ht=[Gt,1,Pt,2,zt,3,Bt,4,Bt];function jt(e){lt.call(this,e,-1,Kt)}Gt.prototype.l=Vt(Ht),m(jt,lt),jt.prototype.addClassification=function(e,t){return Je(this,1,Gt,e,t),this};var Kt=[1],qt=Ut([jt,1,Wt,Ht]);function Xt(e){lt.call(this,e)}m(Xt,lt);var Yt=[Xt,1,zt,2,zt,3,zt,4,zt,5,zt];function Qt(e){lt.call(this,e,-1,Zt)}Xt.prototype.l=Vt(Yt),m(Qt,lt);var Zt=[1],Jt=Ut([Qt,1,Wt,Yt]);function $t(e){lt.call(this,e)}m($t,lt);var en=[$t,1,zt,2,zt,3,zt,4,zt,5,zt,6,Lt],tn=Ut(en);function nn(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function an(e){return Qe(e,Gt,1).map((function(e){var t=He(e,1);return{index:null==t?0:t,qa:et(e,2),label:null!=He(e,3)?$e(He(e,3),""):void 0,displayName:null!=He(e,4)?$e(He(e,4),""):void 0}}))}function rn(e){return{x:et(e,1),y:et(e,2),z:et(e,3),visibility:null!=Xe(e,4)?et(e,4):void 0}}function on(e){return Qe(Jt(e),Xt,1).map(rn)}function sn(e,t){this.i=e,this.h=t,this.m=0}function cn(e,t,n){return function(e,t){var n=e.h;if(void 0===e.s){var a=nn(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=nn(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),o=n.createProgram();if(n.attachShader(o,a),n.attachShader(o,r),n.linkProgram(o),!n.getProgramParameter(o,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(o));a=e.s=o,n.useProgram(a),r=n.getUniformLocation(a,"sampler0"),e.l={O:n.getAttribLocation(a,"aVertex"),N:n.getAttribLocation(a,"aTex"),ya:r},e.v=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.enableVertexAttribArray(e.l.O),n.vertexAttribPointer(e.l.O,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.u=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.enableVertexAttribArray(e.l.N),n.vertexAttribPointer(e.l.N,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}a=e.l,n.useProgram(e.s),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.i.bindTexture2d(t.glName),n.enableVertexAttribArray(a.O),n.bindBuffer(n.ARRAY_BUFFER,e.v),n.vertexAttribPointer(a.O,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,e.u),n.vertexAttribPointer(a.N,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(a.O),n.disableVertexAttribArray(a.N),n.bindBuffer(n.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"===typeof e.h.canvas.transferToImageBitmap?Promise.resolve(e.h.canvas.transferToImageBitmap()):n?Promise.resolve(e.h.canvas):"function"===typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise((function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)})))}function ln(e){this.h=e}$t.prototype.l=Vt(en);var un=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function hn(e,t){return t+e}function dn(e,t){window[e]=t}function pn(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||hn,"object"===typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"===typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.ha=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var a=e.options[n].default;void 0!==a&&(this.l[n]="function"===typeof a?a():a)}}function fn(e){var t,n,a,r,o,s,i,l,u,h,d;return I((function(p){switch(p.h){case 1:return e.ga?(t=void 0===e.h.files?[]:"function"===typeof e.h.files?e.h.files(e.l):e.h.files,x(p,I((function(e){switch(e.h){case 1:return e.s=2,x(e,WebAssembly.instantiate(un),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}})),2)):p.return();case 2:if(n=p.i,"object"===typeof window)return dn("createMediapipeSolutionsWasm",{locateFile:e.locateFile}),dn("createMediapipeSolutionsPackedAssets",{locateFile:e.locateFile}),s=t.filter((function(e){return void 0!==e.data})),i=t.filter((function(e){return void 0===e.data})),l=Promise.all(s.map((function(t){var n=mn(e,t.url);if(void 0!==t.path){var a=t.path;n=n.then((function(t){return e.overrideFile(a,t),Promise.resolve(t)}))}return n}))),u=Promise.all(i.map((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(e.locateFile(t.url,e.ha)):Promise.resolve()}))).then((function(){var t,n,a;return I((function(r){if(1==r.h)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,a=e,x(r,t(n),2);a.i=r.i,r.h=0}))})),h=I((function(t){return e.h.graph&&e.h.graph.url?t=x(t,mn(e,e.h.graph.url),0):(t.h=0,t=void 0),t})),x(p,Promise.all([u,l,h]),7);if("function"!==typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=t.filter((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n})).map((function(t){return e.locateFile(t.url,e.ha)})),importScripts.apply(null,c(a)),r=e,x(p,createMediapipeSolutionsWasm(Module),6);case 6:r.i=p.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,o=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!==typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(o),p.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(d=e.m.getContext("webgl2",{}))&&!(d=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),p.return();e.K=d,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,p.h=0}}))}function mn(e,t){var n,a;return I((function(r){return t in e.L?r.return(e.L[t]):(n=e.locateFile(t,""),a=fetch(n).then((function(e){return e.arrayBuffer()})),e.L[t]=a,r.return(a))}))}function gn(e,t,n){var a,r,o,s,c,l,u,h,d,p,f,m,g,y;return I((function(b){switch(b.h){case 1:if(!n)return b.return(t);for(a={},r=0,o=i(Object.keys(n)),s=o.next();!s.done;s=o.next())c=s.value,"string"!==typeof(l=n[c])&&"texture"===l.type&&void 0!==t[l.stream]&&++r;1<r&&(e.M=!1),u=i(Object.keys(n)),s=u.next();case 2:if(s.done){b.h=4;break}if(h=s.value,"string"===typeof(d=n[h]))return g=a,y=h,x(b,function(e,t,n){var a;return I((function(r){return"number"===typeof n||n instanceof Uint8Array||n instanceof e.i.Uint8BlobList?r.return(n):n instanceof e.i.Texture2dDataOut?((a=e.v[t])||(a=new sn(e.i,e.K),e.v[t]=a),r.return(cn(a,n,e.M))):r.return(void 0)}))}(e,h,t[d]),14);if(p=t[d.stream],"detection_list"===d.type){if(p){for(var v=p.getRectList(),w=p.getLandmarksList(),k=p.getClassificationsList(),S=[],C=0;C<v.size();++C){var N=tn(v.get(C)),T=void 0;T=void 0===T?0:T,N={la:{sa:et(N,1),ta:et(N,2),height:et(N,3),width:et(N,4),rotation:et(N,5,0),pa:$e(He(N,6),T)},ea:on(w.get(C)),ba:an(qt(k.get(C)))},S.push(N)}v=S}else v=[];a[h]=v,b.h=7;break}if("proto_list"===d.type){if(p){for(v=Array(p.size()),w=0;w<p.size();w++)v[w]=p.get(w);p.delete()}else v=[];a[h]=v,b.h=7;break}if(void 0===p){b.h=3;break}if("float_list"===d.type){a[h]=p,b.h=7;break}if("proto"===d.type){a[h]=p,b.h=7;break}if("texture"!==d.type)throw Error("Unknown output config type: '"+d.type+"'");return(f=e.v[h])||(f=new sn(e.i,e.K),e.v[h]=f),x(b,cn(f,p,e.M),13);case 13:m=b.i,a[h]=m;case 7:d.transform&&a[h]&&(a[h]=d.transform(a[h])),b.h=3;break;case 14:g[y]=b.i;case 3:s=u.next(),b.h=2;break;case 4:return b.return(a)}}))}function yn(e,t){for(var n=t.name||"$",a=[].concat(c(t.wants)),r=new e.i.StringList,o=i(t.wants),s=o.next();!s.done;s=o.next())r.push_back(s.value);o=e.i.PacketListener.implement({onResults:function(r){for(var o={},s=0;s<t.wants.length;++s)o[a[s]]=r.get(s);var i=e.listeners[n];i&&(e.I=gn(e,o,t.outs).then((function(n){n=i(n);for(var r=0;r<t.wants.length;++r){var s=o[a[r]];"object"===typeof s&&s.hasOwnProperty&&s.hasOwnProperty("delete")&&s.delete()}n&&(e.I=n)})))}}),e.j.attachMultiListener(r,o),r.delete()}function bn(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function xn(e){var t=this;e=e||{},this.h=new pn({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:bn(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:on},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:on},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"===typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var n,a,r;return I((function(o){return 1==o.h?(n=bn(e),a="third_party/mediapipe/modules/pose_landmark/"+n,x(o,mn(t.h,n),2)):(r=o.i,t.h.overrideFile(a,r),o.return(!0))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=pn.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},e.reset=function(){var e=this;return I((function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0}))},e.setOptions=function(e,t){var n=this;if(t=t||this.h.options){for(var a=[],r=[],o={},s=i(Object.keys(e)),c=s.next();!c.done;o={X:o.X,Y:o.Y},c=s.next())if(!((c=c.value)in this.l)||this.l[c]!==e[c]){this.l[c]=e[c];var l=t[c];void 0!==l&&(l.onChange&&(o.X=l.onChange,o.Y=e[c],a.push(function(e){return function(){return I((function(t){if(1==t.h)return x(t,e.X(e.Y),2);!0===t.i&&(n.u=!0),t.h=0}))}}(o))),l.graphOptionXref&&(c=Object.assign({},{calculatorName:"",calculatorIndex:0},l.graphOptionXref,{valueNumber:1===l.type?e[c]:0,valueBoolean:0===l.type&&e[c],valueString:2===l.type?e[c]:""}),r.push(c)))}0===a.length&&0===r.length||(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(r),this.F=(void 0===this.F?[]:this.F).concat(a))}},e.initialize=function(){var e=this;return I((function(t){return 1==t.h?x(t,fn(e),2):3!=t.h?x(t,function(e){var t,n,a,r,o,s,c,l;return I((function(u){if(1==u.h)return e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url?u.return():(e.u=!0,e.h.graph&&e.h.graph.url?(e.fa=e.h.graph.url,x(u,mn(e,e.h.graph.url),3)):void(u.h=2));for(2!=u.h&&(t=u.i,e.j.loadGraph(t)),n=i(Object.keys(e.D)),a=n.next();!a.done;a=n.next())r=a.value,e.j.overrideFile(r,e.D[r]);if(e.D={},e.h.listeners)for(o=i(e.h.listeners),s=o.next();!s.done;s=o.next())c=s.value,yn(e,c);l=e.l,e.l={},e.setOptions(l),u.h=0}))}(e),3):x(t,function(e){var t,n,a,r,o,s;return I((function(c){switch(c.h){case 1:if(!e.u)return c.return();if(!e.F){c.h=2;break}t=i(e.F),n=t.next();case 3:if(n.done){c.h=5;break}return x(c,(0,n.value)(),4);case 4:n=t.next(),c.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(a=new e.i.GraphOptionChangeRequestList,r=i(e.H),o=r.next();!o.done;o=r.next())s=o.value,a.push_back(s);e.j.changeOptions(a),a.delete(),e.H=void 0}e.u=!1,c.h=0}}))}(e),0)}))},e.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},e.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},e.send=function(e,t){var n,a,r,o,s,c,l,u,h,d=this;return I((function(p){switch(p.h){case 1:return d.h.inputs?(n=1e3*(void 0===t||null===t?performance.now():t),x(p,d.I,2)):p.return();case 2:return x(p,d.initialize(),3);case 3:for(a=new d.i.PacketDataList,r=i(Object.keys(e)),o=r.next();!o.done;o=r.next())if(s=o.value,c=d.h.inputs[s]){e:{var f=e[s];switch(c.type){case"video":var m=d.s[c.stream];if(m||(m=new sn(d.i,d.K),d.s[c.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!==typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!==typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=d.s[c.stream])||(m=new ln(d.i),d.s[c.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,v=b.setBoundingBox,w=y,k=g.la,S=new $t;if(Ze(S,1,k.sa),Ze(S,2,k.ta),Ze(S,3,k.height),Ze(S,4,k.width),Ze(S,5,k.rotation),je(S,6,k.pa),k=S.l(),v.call(b,w,k),g.ea)for(b=0;b<g.ea.length;++b){S=g.ea[b],w=(v=m.data).addNormalizedLandmark,k=y,S=Object.assign({},S,{visibility:S.visibility?S.visibility:0});var I=new Xt;Ze(I,1,S.x),Ze(I,2,S.y),Ze(I,3,S.z),S.visibility&&Ze(I,4,S.visibility),S=I.l(),w.call(v,k,S)}if(g.ba)for(b=0;b<g.ba.length;++b)w=(v=m.data).addClassification,k=y,S=g.ba[b],Ze(I=new Gt,2,S.qa),S.index&&je(I,1,S.index),S.label&&je(I,3,S.label),S.displayName&&je(I,4,S.displayName),S=I.l(),w.call(v,k,S)}m=m.data;break e;default:m={}}}switch(l=m,u=c.stream,c.type){case"video":a.pushTexture2d(Object.assign({},l,{stream:u,timestamp:n}));break;case"detections":(h=l).stream=u,h.timestamp=n,a.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+c.type+"'")}}return d.j.send(a),x(p,d.I,4);case 4:a.delete(),p.h=0}}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},T("Solution",pn),T("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=xn.prototype).reset=function(){this.h.reset()},e.close=function(){return this.h.close(),Promise.resolve()},e.onResults=function(e){this.h.onResults(e)},e.initialize=function(){var e=this;return I((function(t){return x(t,e.h.initialize(),0)}))},e.send=function(e,t){var n=this;return I((function(a){return x(a,n.h.send(e,t),0)}))},e.setOptions=function(e){this.h.setOptions(e)},T("Pose",xn),T("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),T("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),T("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),T("VERSION","0.5.1675469404")}).call(this)},353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(C){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},o={};function s(e,t){var n,a,s;return t?(s=0<=(e>>>=0)&&e<256)&&(a=o[e])?a:(n=c(e,(0|e)<0?-1:0,!0),s&&(o[e]=n),n):(s=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),s&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%d|0,e/d|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=s,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),o=g,s=0;s<e.length;s+=8){var c=Math.min(8,e.length-s),h=parseInt(e.substring(s,s+c),n);if(c<8){var d=i(l(n,c));o=o.mul(d).add(i(h))}else o=(o=o.mul(r)).add(i(h))}return o.unsigned=t,o}function h(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,m=s(1<<24),g=s(0);n.ZERO=g;var y=s(0,!0);n.UZERO=y;var b=s(1);n.ONE=b;var x=s(1,!0);n.UONE=x;var v=s(-1);n.NEG_ONE=v;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),o=this,s="";;){var c=o.div(r),u=(o.sub(c.mul(r)).toInt()>>>0).toString(e);if((o=c).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1===(1&this.low)},I.isEven=function(){return 0===(1&this.low)},I.equals=function(e){return a(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(a(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},I.neg=I.negate,I.add=function(e){a(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,o=65535&this.low,s=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,d=0,p=0,f=0;return p+=(f+=o+(65535&e.low))>>>16,d+=(p+=r+l)>>>16,u+=(d+=n+i)>>>16,u+=t+s,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(d&=65535),this.unsigned)},I.subtract=function(e){return a(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=h(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,o=this.low>>>16,s=65535&this.low,l=e.high>>>16,u=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=s*p)>>>16,y+=(b+=o*p)>>>16,b&=65535,y+=(b+=s*d)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=o*d)>>>16,y&=65535,f+=(y+=s*u)>>>16,f+=n*p+r*d+o*u+s*l,c((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(a(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,o;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;o=y}else{if(this.eq(S))return e.eq(b)||e.eq(v)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(r=this.sub(e.mul(n)),o=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(n)/Math.LN2),u=s<=48?1:l(2,s-48),d=i(n),p=d.mul(e);p.isNegative()||p.gt(r);)p=(d=i(n-=u,this.unsigned)).mul(e);d.isZero()&&(d=b),o=o.add(d),r=r.sub(p)}return o},I.div=I.divide,I.modulo=function(e){return a(e)||(e=h(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return c(~this.low,~this.high,this.unsigned)},I.and=function(e){return a(e)||(e=h(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return a(e)||(e=h(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return a(e)||(e=h(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},730:(e,t,n)=>{"use strict";var a=n(43),r=n(853);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)s.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),h=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,o,s){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=s}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!h.call(f,e)||!h.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),I=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),N=Symbol.for("react.provider"),T=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),R=Symbol.for("react.suspense"),A=Symbol.for("react.suspense_list"),_=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var O=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=D&&e[D]||e["@@iterator"])?e:null}var z,L=Object.assign;function P(e){if(void 0===z)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);z=t&&t[1]||""}return"\n"+z+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),o=a.stack.split("\n"),s=r.length-1,i=o.length-1;1<=s&&0<=i&&r[s]!==o[i];)i--;for(;1<=s&&0<=i;s--,i--)if(r[s]!==o[i]){if(1!==s||1!==i)do{if(s--,0>--i||r[s]!==o[i]){var c="\n"+r[s].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=s&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?P(e):""}function U(e){switch(e.tag){case 5:return P(e.type);case 16:return P("Lazy");case 13:return P("Suspense");case 19:return P("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function V(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case C:return"Profiler";case I:return"StrictMode";case R:return"Suspense";case A:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case N:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case _:return null!==(t=e.displayName||null)?t:V(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return V(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return V(t);case 8:return t===I?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function X(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Y(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Q(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function J(e,t){Z(e,t);var n=H(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function oe(e,t){var n=H(t.value),a=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,he=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(o(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ie=null;function Ce(e){if(e=xr(e)){if("function"!==typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Ne(e){Se?Ie?Ie.push(e):Ie=[e]:Se=e}function Te(){if(Se){var e=Se,t=Ie;if(Ie=Se=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Ee(e,t){return e(t)}function Re(){}var Ae=!1;function _e(e,t,n){if(Ae)return e(t,n);Ae=!0;try{return Ee(e,t,n)}finally{Ae=!1,(null!==Se||null!==Ie)&&(Re(),Te())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(o(231,t,typeof n));return n}var Oe=!1;if(u)try{var De={};Object.defineProperty(De,"passive",{get:function(){Oe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(ue){Oe=!1}function Me(e,t,n,a,r,o,s,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var ze=!1,Le=null,Pe=!1,Be=null,We={onError:function(e){ze=!0,Le=e}};function Ue(e,t,n,a,r,o,s,i,c){ze=!1,Le=null,Me.apply(We,arguments)}function Ve(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ve(e)!==e)throw Error(o(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ve(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var s=r.alternate;if(null===s){if(null!==(a=r.return)){n=a;continue}break}if(r.child===s.child){for(s=r.child;s;){if(s===n)return He(r),e;if(s===a)return He(r),t;s=s.sibling}throw Error(o(188))}if(n.return!==a.return)n=r,a=s;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=s;break}if(c===a){i=!0,a=r,n=s;break}c=c.sibling}if(!i){for(c=s.child;c;){if(c===n){i=!0,n=s,a=r;break}if(c===a){i=!0,a=s,n=r;break}c=c.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==a)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?Ke(e):null}function Ke(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ke(e);if(null!==t)return t;e=e.sibling}return null}var qe=r.unstable_scheduleCallback,Xe=r.unstable_cancelCallback,Ye=r.unstable_shouldYield,Qe=r.unstable_requestPaint,Ze=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,ot=null;var st=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,o=e.pingedLanes,s=268435455&n;if(0!==s){var i=s&~r;0!==i?a=ht(i):0!==(o&=s)&&(a=ht(o))}else 0!==(s=n&~r)?a=ht(s):0!==o&&(a=ht(o));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(o=t&-t)||16===r&&0!==(4194240&o)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-st(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-st(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-st(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var xt=0;function vt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,It,Ct,Nt=!1,Tt=[],Et=null,Rt=null,At=null,_t=new Map,Ft=new Map,Ot=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":Rt=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":_t.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function zt(e,t,n,a,r,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:o,targetContainers:[r]},null!==t&&(null!==(t=xr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Lt(e){var t=br(e.target);if(null!==t){var n=Ve(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void Ct(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Pt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Yt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);ve=a,n.target.dispatchEvent(a),ve=null,t.shift()}return!0}function Bt(e,t,n){Pt(e)&&n.delete(t)}function Wt(){Nt=!1,null!==Et&&Pt(Et)&&(Et=null),null!==Rt&&Pt(Rt)&&(Rt=null),null!==At&&Pt(At)&&(At=null),_t.forEach(Bt),Ft.forEach(Bt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,Nt||(Nt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Vt(e){function t(t){return Ut(t,e)}if(0<Tt.length){Ut(Tt[0],e);for(var n=1;n<Tt.length;n++){var a=Tt[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Ut(Et,e),null!==Rt&&Ut(Rt,e),null!==At&&Ut(At,e),_t.forEach(t),Ft.forEach(t),n=0;n<Ot.length;n++)(a=Ot[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Ot.length&&null===(n=Ot[0]).blockedOn;)Lt(n),null===n.blockedOn&&Ot.shift()}var Gt=v.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,a){var r=xt,o=Gt.transition;Gt.transition=null;try{xt=1,qt(e,t,n,a)}finally{xt=r,Gt.transition=o}}function Kt(e,t,n,a){var r=xt,o=Gt.transition;Gt.transition=null;try{xt=4,qt(e,t,n,a)}finally{xt=r,Gt.transition=o}}function qt(e,t,n,a){if(Ht){var r=Yt(e,t,n,a);if(null===r)Ha(e,t,a,Xt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=zt(Et,e,t,n,a,r),!0;case"dragenter":return Rt=zt(Rt,e,t,n,a,r),!0;case"mouseover":return At=zt(At,e,t,n,a,r),!0;case"pointerover":var o=r.pointerId;return _t.set(o,zt(_t.get(o)||null,e,t,n,a,r)),!0;case"gotpointercapture":return o=r.pointerId,Ft.set(o,zt(Ft.get(o)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Dt.indexOf(e)){for(;null!==r;){var o=xr(r);if(null!==o&&wt(o),null===(o=Yt(e,t,n,a))&&Ha(e,t,a,Xt,n),o===r)break;r=o}null!==r&&a.stopPropagation()}else Ha(e,t,a,null,n)}}var Xt=null;function Yt(e,t,n,a){if(Xt=null,null!==(e=br(e=we(a))))if(null===(t=Ve(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Xt=e,null}function Qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,o=r.length;for(e=0;e<a&&n[e]===r[e];e++);var s=a-e;for(t=1;t<=s&&n[a-t]===r[o-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,o){for(var s in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(s)&&(t=e[s],this[s]=t?t(r):r[s]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,sn,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),hn=L({},ln,{view:0,detail:0}),dn=rn(hn),pn=L({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(on=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=on=0,cn=e),on)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),fn=rn(pn),mn=rn(L({},pn,{dataTransfer:0})),gn=rn(L({},hn,{relatedTarget:0})),yn=rn(L({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=L({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=rn(bn),vn=rn(L({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function In(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return In}var Nn=L({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=rn(Nn),En=rn(L({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Rn=rn(L({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),An=rn(L({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),_n=L({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(_n),On=[9,13,27,32],Dn=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var zn=u&&"TextEvent"in window&&!Mn,Ln=u&&(!Dn||Mn&&8<Mn&&11>=Mn),Pn=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Vn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,a){Ne(a),0<(t=Ka(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var Kn=null,qn=null;function Xn(e){Pa(e,0)}function Yn(e){if(q(vr(e)))return e}function Qn(e,t){if("change"===e)return t}var Zn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Zn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){Kn&&(Kn.detachEvent("onpropertychange",na),qn=Kn=null)}function na(e){if("value"===e.propertyName&&Yn(qn)){var t=[];jn(t,qn,e,we(e)),_e(Xn,t)}}function aa(e,t,n){"focusin"===e?(ta(),qn=n,(Kn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Yn(qn)}function oa(e,t){if("click"===e)return Yn(t)}function sa(e,t){if("input"===e||"change"===e)return Yn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!h.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function ha(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?ha(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function da(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=da(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&ha(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,o=Math.min(a.start,r);a=void 0===a.end?o:Math.min(a.end,r),!e.extend&&o>a&&(r=a,a=o,o=r),r=ua(n,o);var s=ua(n,a);r&&s&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==s.node||e.focusOffset!==s.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),o>a?(e.addRange(t),e.extend(s.node,s.offset)):(t.setEnd(s.node,s.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,xa=!1;function va(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xa||null==ga||ga!==X(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=Ka(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Ia={};function Ca(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ia)return Sa[e]=n[t];return e}u&&(Ia=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Na=Ca("animationend"),Ta=Ca("animationiteration"),Ea=Ca("animationstart"),Ra=Ca("transitionend"),Aa=new Map,_a="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){Aa.set(e,t),c(t,[e])}for(var Oa=0;Oa<_a.length;Oa++){var Da=_a[Oa];Fa(Da.toLowerCase(),"on"+(Da[0].toUpperCase()+Da.slice(1)))}Fa(Na,"onAnimationEnd"),Fa(Ta,"onAnimationIteration"),Fa(Ea,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(Ra,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),za=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function La(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,s,i,c,l){if(Ue.apply(this,arguments),ze){if(!ze)throw Error(o(198));var u=Le;ze=!1,Le=null,Pe||(Pe=!0,Be=u)}}(a,t,void 0,e),e.currentTarget=null}function Pa(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var o=void 0;if(t)for(var s=a.length-1;0<=s;s--){var i=a[s],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==o&&r.isPropagationStopped())break e;La(r,i,l),o=c}else for(s=0;s<a.length;s++){if(c=(i=a[s]).instance,l=i.currentTarget,i=i.listener,c!==o&&r.isPropagationStopped())break e;La(r,i,l),o=c}}}if(Pe)throw e=Be,Pe=!1,Be=null,e}function Ba(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Ua="_reactListening"+Math.random().toString(36).slice(2);function Va(e){if(!e[Ua]){e[Ua]=!0,s.forEach((function(t){"selectionchange"!==t&&(za.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ua]||(t[Ua]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Qt(t)){case 1:var r=jt;break;case 4:r=Kt;break;default:r=qt}n=r.bind(null,t,n,e),r=void 0,!Oe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Ha(e,t,n,a,r){var o=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var s=a.tag;if(3===s||4===s){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===s)for(s=a.return;null!==s;){var c=s.tag;if((3===c||4===c)&&((c=s.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;s=s.return}for(;null!==i;){if(null===(s=br(i)))return;if(5===(c=s.tag)||6===c){a=o=s;continue e}i=i.parentNode}}a=a.return}_e((function(){var a=o,r=we(n),s=[];e:{var i=Aa.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Tn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=Rn;break;case Na:case Ta:case Ea:c=yn;break;case Ra:c=An;break;case"scroll":c=dn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),h=!u&&"scroll"===e,d=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&(null!=(m=Fe(f,d))&&u.push(ja(f,m,p)))),h)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),s.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===ve||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(h=Ve(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,m="onPointerLeave",d="onPointerEnter",f="pointer"),h=null==c?i:vr(c),p=null==l?i:vr(l),(i=new u(m,f+"leave",c,n,r)).target=h,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(d,f+"enter",l,n,r)).target=p,u.relatedTarget=h,m=u),h=m,c&&l)e:{for(d=l,f=0,p=u=c;p;p=qa(p))f++;for(p=0,m=d;m;m=qa(m))p++;for(;0<f-p;)u=qa(u),f--;for(;0<p-f;)d=qa(d),p--;for(;f--;){if(u===d||null!==d&&u===d.alternate)break e;u=qa(u),d=qa(d)}u=null}else u=null;null!==c&&Xa(s,i,c,u,!1),null!==l&&null!==h&&Xa(s,h,l,u,!0)}if("select"===(c=(i=a?vr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Qn;else if(Hn(i))if(Zn)g=sa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=oa);switch(g&&(g=g(e,a))?jn(s,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?vr(a):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":xa=!0;break;case"contextmenu":case"mouseup":case"dragend":xa=!1,va(s,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":va(s,n,r)}var b;if(Dn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Vn?Wn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Ln&&"ko"!==n.locale&&(Vn||"onCompositionStart"!==x?"onCompositionEnd"===x&&Vn&&(b=en()):(Jt="value"in(Zt=r)?Zt.value:Zt.textContent,Vn=!0)),0<(y=Ka(a,x)).length&&(x=new vn(x,e,null,n,r),s.push({event:x,listeners:y}),b?x.data=b:null!==(b=Un(n))&&(x.data=b))),(b=zn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Bn=!0,Pn);case"textInput":return(e=t.data)===Pn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Vn)return"compositionend"===e||!Dn&&Wn(e,t)?(e=en(),$t=Jt=Zt=null,Vn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=Ka(a,"onBeforeInput")).length&&(r=new vn("onBeforeInput","beforeinput",null,n,r),s.push({event:r,listeners:a}),r.data=b))}Pa(s,t)}))}function ja(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Ka(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,o=r.stateNode;5===r.tag&&null!==o&&(r=o,null!=(o=Fe(e,n))&&a.unshift(ja(e,o,r)),null!=(o=Fe(e,t))&&a.push(ja(e,o,r))),e=e.return}return a}function qa(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xa(e,t,n,a,r){for(var o=t._reactName,s=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,o))&&s.unshift(ja(n,c,i)):r||null!=(c=Fe(n,o))&&s.push(ja(n,c,i))),n=n.return}0!==s.length&&e.push({event:t,listeners:s})}var Ya=/\r\n?/g,Qa=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Ya,"\n").replace(Qa,"")}function Ja(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(o(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,or="function"===typeof Promise?Promise:void 0,sr="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof or?function(e){return or.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Vt(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Vt(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var hr=Math.random().toString(36).slice(2),dr="__reactFiber$"+hr,pr="__reactProps$"+hr,fr="__reactContainer$"+hr,mr="__reactEvents$"+hr,gr="__reactListeners$"+hr,yr="__reactHandles$"+hr;function br(e){var t=e[dr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[dr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[dr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function xr(e){return!(e=e[dr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function vr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function wr(e){return e[pr]||null}var kr=[],Sr=-1;function Ir(e){return{current:e}}function Cr(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Nr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Tr={},Er=Ir(Tr),Rr=Ir(!1),Ar=Tr;function _r(e,t){var n=e.type.contextTypes;if(!n)return Tr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,o={};for(r in n)o[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Or(){Cr(Rr),Cr(Er)}function Dr(e,t,n){if(Er.current!==Tr)throw Error(o(168));Nr(Er,t),Nr(Rr,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(o(108,G(e)||"Unknown",r));return L({},n,a)}function zr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Tr,Ar=Er.current,Nr(Er,e),Nr(Rr,Rr.current),!0}function Lr(e,t,n){var a=e.stateNode;if(!a)throw Error(o(169));n?(e=Mr(e,t,Ar),a.__reactInternalMemoizedMergedChildContext=e,Cr(Rr),Cr(Er),Nr(Er,e)):Cr(Rr),Nr(Rr,n)}var Pr=null,Br=!1,Wr=!1;function Ur(e){null===Pr?Pr=[e]:Pr.push(e)}function Vr(){if(!Wr&&null!==Pr){Wr=!0;var e=0,t=xt;try{var n=Pr;for(xt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Pr=null,Br=!1}catch(r){throw null!==Pr&&(Pr=Pr.slice(e+1)),qe($e,Vr),r}finally{xt=t,Wr=!1}}return null}var Gr=[],Hr=0,jr=null,Kr=0,qr=[],Xr=0,Yr=null,Qr=1,Zr="";function Jr(e,t){Gr[Hr++]=Kr,Gr[Hr++]=jr,jr=e,Kr=t}function $r(e,t,n){qr[Xr++]=Qr,qr[Xr++]=Zr,qr[Xr++]=Yr,Yr=e;var a=Qr;e=Zr;var r=32-st(a)-1;a&=~(1<<r),n+=1;var o=32-st(t)+r;if(30<o){var s=r-r%5;o=(a&(1<<s)-1).toString(32),a>>=s,r-=s,Qr=1<<32-st(t)+r|n<<r|a,Zr=o+e}else Qr=1<<o|n<<r|a,Zr=e}function eo(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function to(e){for(;e===jr;)jr=Gr[--Hr],Gr[Hr]=null,Kr=Gr[--Hr],Gr[Hr]=null;for(;e===Yr;)Yr=qr[--Xr],qr[Xr]=null,Zr=qr[--Xr],qr[Xr]=null,Qr=qr[--Xr],qr[Xr]=null}var no=null,ao=null,ro=!1,oo=null;function so(e,t){var n=_l(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function io(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ao=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ao=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Yr?{id:Qr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_l(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ao=null,!0);default:return!1}}function co(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function lo(e){if(ro){var t=ao;if(t){var n=t;if(!io(e,t)){if(co(e))throw Error(o(418));t=lr(n.nextSibling);var a=no;t&&io(e,t)?so(a,n):(e.flags=-4097&e.flags|2,ro=!1,no=e)}}else{if(co(e))throw Error(o(418));e.flags=-4097&e.flags|2,ro=!1,no=e}}}function uo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function ho(e){if(e!==no)return!1;if(!ro)return uo(e),ro=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=ao)){if(co(e))throw po(),Error(o(418));for(;t;)so(e,t),t=lr(t.nextSibling)}if(uo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ao=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ao=null}}else ao=no?lr(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ao;e;)e=lr(e.nextSibling)}function fo(){ao=no=null,ro=!1}function mo(e){null===oo?oo=[e]:oo.push(e)}var go=v.ReactCurrentBatchConfig;function yo(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var a=n.stateNode}if(!a)throw Error(o(147,e));var r=a,s=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===s?t.ref:(t=function(e){var t=r.refs;null===e?delete t[s]:t[s]=e},t._stringRef=s,t)}if("string"!==typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function bo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function xo(e){return(0,e._init)(e._payload)}function vo(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Ol(e,t)).index=0,e.sibling=null,e}function s(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Ll(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var o=n.type;return o===S?h(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===o||"object"===typeof o&&null!==o&&o.$$typeof===F&&xo(o)===t.type)?((a=r(t,n.props)).ref=yo(e,t,n),a.return=e,a):((a=Dl(n.type,n.key,n.props,null,e.mode,a)).ref=yo(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Pl(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function h(e,t,n,a,o){return null===t||7!==t.tag?((t=Ml(n,e.mode,a,o)).return=e,t):((t=r(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Ll(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Dl(t.type,t.key,t.props,null,e.mode,n)).ref=yo(e,null,t),n.return=e,n;case k:return(t=Pl(t,e.mode,n)).return=e,t;case F:return d(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ml(t,e.mode,n,null)).return=e,t;bo(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:h(e,t,n,a,null);bo(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return h(t,e=e.get(n)||null,a,r,null);bo(t,a)}return null}function m(r,o,i,c){for(var l=null,u=null,h=o,m=o=0,g=null;null!==h&&m<i.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=p(r,h,i[m],c);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(r,h),o=s(y,o,m),null===u?l=y:u.sibling=y,u=y,h=g}if(m===i.length)return n(r,h),ro&&Jr(r,m),l;if(null===h){for(;m<i.length;m++)null!==(h=d(r,i[m],c))&&(o=s(h,o,m),null===u?l=h:u.sibling=h,u=h);return ro&&Jr(r,m),l}for(h=a(r,h);m<i.length;m++)null!==(g=f(h,r,m,i[m],c))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),o=s(g,o,m),null===u?l=g:u.sibling=g,u=g);return e&&h.forEach((function(e){return t(r,e)})),ro&&Jr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(o(150));if(null==(c=u.call(c)))throw Error(o(151));for(var h=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=p(r,m,b.value,l);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(r,m),i=s(x,i,g),null===h?u=x:h.sibling=x,h=x,m=y}if(b.done)return n(r,m),ro&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=d(r,b.value,l))&&(i=s(b,i,g),null===h?u=b:h.sibling=b,h=b);return ro&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=s(b,i,g),null===h?u=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(r,e)})),ro&&Jr(r,g),u}return function e(a,o,s,c){if("object"===typeof s&&null!==s&&s.type===S&&null===s.key&&(s=s.props.children),"object"===typeof s&&null!==s){switch(s.$$typeof){case w:e:{for(var l=s.key,u=o;null!==u;){if(u.key===l){if((l=s.type)===S){if(7===u.tag){n(a,u.sibling),(o=r(u,s.props.children)).return=a,a=o;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&xo(l)===u.type){n(a,u.sibling),(o=r(u,s.props)).ref=yo(a,u,s),o.return=a,a=o;break e}n(a,u);break}t(a,u),u=u.sibling}s.type===S?((o=Ml(s.props.children,a.mode,c,s.key)).return=a,a=o):((c=Dl(s.type,s.key,s.props,null,a.mode,c)).ref=yo(a,o,s),c.return=a,a=c)}return i(a);case k:e:{for(u=s.key;null!==o;){if(o.key===u){if(4===o.tag&&o.stateNode.containerInfo===s.containerInfo&&o.stateNode.implementation===s.implementation){n(a,o.sibling),(o=r(o,s.children||[])).return=a,a=o;break e}n(a,o);break}t(a,o),o=o.sibling}(o=Pl(s,a.mode,c)).return=a,a=o}return i(a);case F:return e(a,o,(u=s._init)(s._payload),c)}if(te(s))return m(a,o,s,c);if(M(s))return g(a,o,s,c);bo(a,s)}return"string"===typeof s&&""!==s||"number"===typeof s?(s=""+s,null!==o&&6===o.tag?(n(a,o.sibling),(o=r(o,s)).return=a,a=o):(n(a,o),(o=Ll(s,a.mode,c)).return=a,a=o),i(a)):n(a,o)}}var wo=vo(!0),ko=vo(!1),So=Ir(null),Io=null,Co=null,No=null;function To(){No=Co=Io=null}function Eo(e){var t=So.current;Cr(So),e._currentValue=t}function Ro(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ao(e,t){Io=e,No=Co=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xi=!0),e.firstContext=null)}function _o(e){var t=e._currentValue;if(No!==e)if(e={context:e,memoizedValue:t,next:null},null===Co){if(null===Io)throw Error(o(308));Co=e,Io.dependencies={lanes:0,firstContext:e}}else Co=Co.next=e;return t}var Fo=null;function Oo(e){null===Fo?Fo=[e]:Fo.push(e)}function Do(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Oo(t)):(n.next=r.next,r.next=n),t.interleaved=n,Mo(e,a)}function Mo(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var zo=!1;function Lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Po(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Bo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Wo(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Ec)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Mo(e,n)}return null===(r=a.interleaved)?(t.next=t,Oo(a)):(t.next=r.next,r.next=t),a.interleaved=t,Mo(e,n)}function Uo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vo(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var s={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?r=o=s:o=o.next=s,n=n.next}while(null!==n);null===o?r=o=t:o=o.next=t}else r=o=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:o,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Go(e,t,n,a){var r=e.updateQueue;zo=!1;var o=r.firstBaseUpdate,s=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===s?o=l:s.next=l,s=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==s&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==o){var h=r.baseState;for(s=0,u=l=c=null,i=o;;){var d=i.lane,p=i.eventTime;if((a&d)===d){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){h=f.call(p,h,d);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(d="function"===typeof(f=m.payload)?f.call(p,h,d):f)||void 0===d)break e;h=L({},h,d);break e;case 2:zo=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=r.effects)?r.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=h):u=u.next=p,s|=d;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(d=i).next,d.next=null,r.lastBaseUpdate=d,r.shared.pending=null}}if(null===u&&(c=h),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{s|=r.lane,r=r.next}while(r!==t)}else null===o&&(r.shared.lanes=0);zc|=s,e.lanes=s,e.memoizedState=h}}function Ho(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(o(191,r));r.call(a)}}}var jo={},Ko=Ir(jo),qo=Ir(jo),Xo=Ir(jo);function Yo(e){if(e===jo)throw Error(o(174));return e}function Qo(e,t){switch(Nr(Xo,t),Nr(qo,e),Nr(Ko,jo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Cr(Ko),Nr(Ko,t)}function Zo(){Cr(Ko),Cr(qo),Cr(Xo)}function Jo(e){Yo(Xo.current);var t=Yo(Ko.current),n=ce(t,e.type);t!==n&&(Nr(qo,e),Nr(Ko,n))}function $o(e){qo.current===e&&(Cr(Ko),Cr(qo))}var es=Ir(0);function ts(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ns=[];function as(){for(var e=0;e<ns.length;e++)ns[e]._workInProgressVersionPrimary=null;ns.length=0}var rs=v.ReactCurrentDispatcher,os=v.ReactCurrentBatchConfig,ss=0,is=null,cs=null,ls=null,us=!1,hs=!1,ds=0,ps=0;function fs(){throw Error(o(321))}function ms(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function gs(e,t,n,a,r,s){if(ss=s,is=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,rs.current=null===e||null===e.memoizedState?$s:ei,e=n(a,r),hs){s=0;do{if(hs=!1,ds=0,25<=s)throw Error(o(301));s+=1,ls=cs=null,t.updateQueue=null,rs.current=ti,e=n(a,r)}while(hs)}if(rs.current=Js,t=null!==cs&&null!==cs.next,ss=0,ls=cs=is=null,us=!1,t)throw Error(o(300));return e}function ys(){var e=0!==ds;return ds=0,e}function bs(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ls?is.memoizedState=ls=e:ls=ls.next=e,ls}function xs(){if(null===cs){var e=is.alternate;e=null!==e?e.memoizedState:null}else e=cs.next;var t=null===ls?is.memoizedState:ls.next;if(null!==t)ls=t,cs=e;else{if(null===e)throw Error(o(310));e={memoizedState:(cs=e).memoizedState,baseState:cs.baseState,baseQueue:cs.baseQueue,queue:cs.queue,next:null},null===ls?is.memoizedState=ls=e:ls=ls.next=e}return ls}function vs(e,t){return"function"===typeof t?t(e):t}function ws(e){var t=xs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=cs,r=a.baseQueue,s=n.pending;if(null!==s){if(null!==r){var i=r.next;r.next=s.next,s.next=i}a.baseQueue=r=s,n.pending=null}if(null!==r){s=r.next,a=a.baseState;var c=i=null,l=null,u=s;do{var h=u.lane;if((ss&h)===h)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var d={lane:h,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=d,i=a):l=l.next=d,is.lanes|=h,zc|=h}u=u.next}while(null!==u&&u!==s);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(xi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{s=r.lane,is.lanes|=s,zc|=s,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ks(e){var t=xs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,s=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{s=e(s,i.action),i=i.next}while(i!==r);ia(s,t.memoizedState)||(xi=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,a]}function Ss(){}function Is(e,t){var n=is,a=xs(),r=t(),s=!ia(a.memoizedState,r);if(s&&(a.memoizedState=r,xi=!0),a=a.queue,zs(Ts.bind(null,n,a,e),[e]),a.getSnapshot!==t||s||null!==ls&&1&ls.memoizedState.tag){if(n.flags|=2048,_s(9,Ns.bind(null,n,a,r,t),void 0,null),null===Rc)throw Error(o(349));0!==(30&ss)||Cs(n,t,r)}return r}function Cs(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=is.updateQueue)?(t={lastEffect:null,stores:null},is.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ns(e,t,n,a){t.value=n,t.getSnapshot=a,Es(t)&&Rs(e)}function Ts(e,t,n){return n((function(){Es(t)&&Rs(e)}))}function Es(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function Rs(e){var t=Mo(e,1);null!==t&&nl(t,e,1,-1)}function As(e){var t=bs();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vs,lastRenderedState:e},t.queue=e,e=e.dispatch=Xs.bind(null,is,e),[t.memoizedState,e]}function _s(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=is.updateQueue)?(t={lastEffect:null,stores:null},is.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Fs(){return xs().memoizedState}function Os(e,t,n,a){var r=bs();is.flags|=e,r.memoizedState=_s(1|t,n,void 0,void 0===a?null:a)}function Ds(e,t,n,a){var r=xs();a=void 0===a?null:a;var o=void 0;if(null!==cs){var s=cs.memoizedState;if(o=s.destroy,null!==a&&ms(a,s.deps))return void(r.memoizedState=_s(t,n,o,a))}is.flags|=e,r.memoizedState=_s(1|t,n,o,a)}function Ms(e,t){return Os(8390656,8,e,t)}function zs(e,t){return Ds(2048,8,e,t)}function Ls(e,t){return Ds(4,2,e,t)}function Ps(e,t){return Ds(4,4,e,t)}function Bs(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ws(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ds(4,4,Bs.bind(null,t,e),n)}function Us(){}function Vs(e,t){var n=xs();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ms(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Gs(e,t){var n=xs();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&ms(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Hs(e,t,n){return 0===(21&ss)?(e.baseState&&(e.baseState=!1,xi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),is.lanes|=n,zc|=n,e.baseState=!0),t)}function js(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var a=os.transition;os.transition={};try{e(!1),t()}finally{xt=n,os.transition=a}}function Ks(){return xs().memoizedState}function qs(e,t,n){var a=tl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Ys(e))Qs(t,n);else if(null!==(n=Do(e,t,n,a))){nl(n,e,a,el()),Zs(n,t,a)}}function Xs(e,t,n){var a=tl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Ys(e))Qs(t,r);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var s=t.lastRenderedState,i=o(s,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,s)){var c=t.interleaved;return null===c?(r.next=r,Oo(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Do(e,t,r,a))&&(nl(n,e,a,r=el()),Zs(n,t,a))}}function Ys(e){var t=e.alternate;return e===is||null!==t&&t===is}function Qs(e,t){hs=us=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Zs(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Js={readContext:_o,useCallback:fs,useContext:fs,useEffect:fs,useImperativeHandle:fs,useInsertionEffect:fs,useLayoutEffect:fs,useMemo:fs,useReducer:fs,useRef:fs,useState:fs,useDebugValue:fs,useDeferredValue:fs,useTransition:fs,useMutableSource:fs,useSyncExternalStore:fs,useId:fs,unstable_isNewReconciler:!1},$s={readContext:_o,useCallback:function(e,t){return bs().memoizedState=[e,void 0===t?null:t],e},useContext:_o,useEffect:Ms,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Os(4194308,4,Bs.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Os(4194308,4,e,t)},useInsertionEffect:function(e,t){return Os(4,2,e,t)},useMemo:function(e,t){var n=bs();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bs();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=qs.bind(null,is,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bs().memoizedState=e},useState:As,useDebugValue:Us,useDeferredValue:function(e){return bs().memoizedState=e},useTransition:function(){var e=As(!1),t=e[0];return e=js.bind(null,e[1]),bs().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=is,r=bs();if(ro){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Rc)throw Error(o(349));0!==(30&ss)||Cs(a,t,n)}r.memoizedState=n;var s={value:n,getSnapshot:t};return r.queue=s,Ms(Ts.bind(null,a,s,e),[e]),a.flags|=2048,_s(9,Ns.bind(null,a,s,n,t),void 0,null),n},useId:function(){var e=bs(),t=Rc.identifierPrefix;if(ro){var n=Zr;t=":"+t+"R"+(n=(Qr&~(1<<32-st(Qr)-1)).toString(32)+n),0<(n=ds++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ps++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:_o,useCallback:Vs,useContext:_o,useEffect:zs,useImperativeHandle:Ws,useInsertionEffect:Ls,useLayoutEffect:Ps,useMemo:Gs,useReducer:ws,useRef:Fs,useState:function(){return ws(vs)},useDebugValue:Us,useDeferredValue:function(e){return Hs(xs(),cs.memoizedState,e)},useTransition:function(){return[ws(vs)[0],xs().memoizedState]},useMutableSource:Ss,useSyncExternalStore:Is,useId:Ks,unstable_isNewReconciler:!1},ti={readContext:_o,useCallback:Vs,useContext:_o,useEffect:zs,useImperativeHandle:Ws,useInsertionEffect:Ls,useLayoutEffect:Ps,useMemo:Gs,useReducer:ks,useRef:Fs,useState:function(){return ks(vs)},useDebugValue:Us,useDeferredValue:function(e){var t=xs();return null===cs?t.memoizedState=e:Hs(t,cs.memoizedState,e)},useTransition:function(){return[ks(vs)[0],xs().memoizedState]},useMutableSource:Ss,useSyncExternalStore:Is,useId:Ks,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ve(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),o=Bo(a,r);o.payload=t,void 0!==n&&null!==n&&(o.callback=n),null!==(t=Wo(e,o,r))&&(nl(t,e,r,a),Uo(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),o=Bo(a,r);o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),null!==(t=Wo(e,o,r))&&(nl(t,e,r,a),Uo(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=el(),a=tl(e),r=Bo(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Wo(e,r,a))&&(nl(t,e,a,n),Uo(t,e,a))}};function oi(e,t,n,a,r,o,s){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,o,s):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,o))}function si(e,t,n){var a=!1,r=Tr,o=t.contextType;return"object"===typeof o&&null!==o?o=_o(o):(r=Fr(t)?Ar:Er.current,o=(a=null!==(a=t.contextTypes)&&void 0!==a)?_r(e,r):Tr),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=o),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ci(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},Lo(e);var o=t.contextType;"object"===typeof o&&null!==o?r.context=_o(o):(o=Fr(t)?Ar:Er.current,r.context=_r(e,o)),r.state=e.memoizedState,"function"===typeof(o=t.getDerivedStateFromProps)&&(ai(e,t,o,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Go(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function li(e,t){try{var n="",a=t;do{n+=U(a),a=a.return}while(a);var r=n}catch(o){r="\nError generating stack: "+o.message+"\n"+o.stack}return{value:e,source:t,stack:r,digest:null}}function ui(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var di="function"===typeof WeakMap?WeakMap:Map;function pi(e,t,n){(n=Bo(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hc||(Hc=!0,jc=a),hi(0,t)},n}function fi(e,t,n){(n=Bo(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var o=e.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===Kc?Kc=new Set([this]):Kc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new di;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Cl.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Bo(-1,1)).tag=2,Wo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=v.ReactCurrentOwner,xi=!1;function vi(e,t,n,a){t.child=null===e?ko(t,null,n,a):wo(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var o=t.ref;return Ao(t,r),a=gs(e,t,n,a,o,r),n=ys(),null===e||xi?(ro&&n&&eo(t),t.flags|=1,vi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function ki(e,t,n,a,r){if(null===e){var o=n.type;return"function"!==typeof o||Fl(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Dl(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Si(e,t,o,a,r))}if(o=e.child,0===(e.lanes&r)){var s=o.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(s,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=Ol(o,a)).ref=t.ref,e.return=t,t.child=e}function Si(e,t,n,a,r){if(null!==e){var o=e.memoizedProps;if(ca(o,a)&&e.ref===t.ref){if(xi=!1,t.pendingProps=a=o,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(xi=!0)}}return Ni(e,t,n,a,r)}function Ii(e,t,n){var a=t.pendingProps,r=a.children,o=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Nr(Oc,Fc),Fc|=n;else{if(0===(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Nr(Oc,Fc),Fc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==o?o.baseLanes:n,Nr(Oc,Fc),Fc|=a}else null!==o?(a=o.baseLanes|n,t.memoizedState=null):a=n,Nr(Oc,Fc),Fc|=a;return vi(e,t,r,n),t.child}function Ci(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ni(e,t,n,a,r){var o=Fr(n)?Ar:Er.current;return o=_r(t,o),Ao(t,r),n=gs(e,t,n,a,o,r),a=ys(),null===e||xi?(ro&&a&&eo(t),t.flags|=1,vi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Ti(e,t,n,a,r){if(Fr(n)){var o=!0;zr(t)}else o=!1;if(Ao(t,r),null===t.stateNode)Gi(e,t),si(t,n,a),ci(t,n,a,r),a=!0;else if(null===e){var s=t.stateNode,i=t.memoizedProps;s.props=i;var c=s.context,l=n.contextType;"object"===typeof l&&null!==l?l=_o(l):l=_r(t,l=Fr(n)?Ar:Er.current);var u=n.getDerivedStateFromProps,h="function"===typeof u||"function"===typeof s.getSnapshotBeforeUpdate;h||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==a||c!==l)&&ii(t,s,a,l),zo=!1;var d=t.memoizedState;s.state=d,Go(t,a,s,r),c=t.memoizedState,i!==a||d!==c||Rr.current||zo?("function"===typeof u&&(ai(t,n,u,a),c=t.memoizedState),(i=zo||oi(t,n,i,a,d,c,l))?(h||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(t.flags|=4194308)):("function"===typeof s.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),s.props=a,s.state=c,s.context=l,a=i):("function"===typeof s.componentDidMount&&(t.flags|=4194308),a=!1)}else{s=t.stateNode,Po(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:ni(t.type,i),s.props=l,h=t.pendingProps,d=s.context,"object"===typeof(c=n.contextType)&&null!==c?c=_o(c):c=_r(t,c=Fr(n)?Ar:Er.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==h||d!==c)&&ii(t,s,a,c),zo=!1,d=t.memoizedState,s.state=d,Go(t,a,s,r);var f=t.memoizedState;i!==h||d!==f||Rr.current||zo?("function"===typeof p&&(ai(t,n,p,a),f=t.memoizedState),(l=zo||oi(t,n,l,a,d,f,c)||!1)?(u||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(a,f,c),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof s.componentDidUpdate&&(t.flags|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof s.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),s.props=a,s.state=f,s.context=c,a=l):("function"!==typeof s.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),a=!1)}return Ei(e,t,n,a,o,r)}function Ei(e,t,n,a,r,o){Ci(e,t);var s=0!==(128&t.flags);if(!a&&!s)return r&&Lr(t,n,!1),Hi(e,t,o);a=t.stateNode,bi.current=t;var i=s&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&s?(t.child=wo(t,e.child,null,o),t.child=wo(t,null,i,o)):vi(e,t,i,o),t.memoizedState=a.state,r&&Lr(t,n,!0),t.child}function Ri(e){var t=e.stateNode;t.pendingContext?Dr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Dr(0,t.context,!1),Qo(e,t.containerInfo)}function Ai(e,t,n,a,r){return fo(),mo(r),t.flags|=256,vi(e,t,n,a),t.child}var _i,Fi,Oi,Di,Mi={dehydrated:null,treeContext:null,retryLane:0};function zi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Li(e,t,n){var a,r=t.pendingProps,s=es.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&s)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(s|=1),Nr(es,1&s),null===e)return lo(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=zl(c,r,0,null),e=Ml(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=zi(n),t.memoizedState=Mi,e):Pi(t,c));if(null!==(s=e.memoizedState)&&null!==(a=s.dehydrated))return function(e,t,n,a,r,s,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,a=ui(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(s=a.fallback,r=t.mode,a=zl({mode:"visible",children:a.children},r,0,null),(s=Ml(s,r,i,null)).flags|=2,a.return=t,s.return=t,a.sibling=s,t.child=a,0!==(1&t.mode)&&wo(t,e.child,null,i),t.child.memoizedState=zi(i),t.memoizedState=Mi,s);if(0===(1&t.mode))return Bi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Bi(e,t,i,a=ui(s=Error(o(419)),a,void 0))}if(c=0!==(i&e.childLanes),xi||c){if(null!==(a=Rc)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==s.retryLane&&(s.retryLane=r,Mo(e,r),nl(a,e,r,-1))}return ml(),Bi(e,t,i,a=ui(Error(o(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Tl.bind(null,e),r._reactRetry=t,null):(e=s.treeContext,ao=lr(r.nextSibling),no=t,ro=!0,oo=null,null!==e&&(qr[Xr++]=Qr,qr[Xr++]=Zr,qr[Xr++]=Yr,Qr=e.id,Zr=e.overflow,Yr=t),t=Pi(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,s,n);if(i){i=r.fallback,c=t.mode,a=(s=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==s?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Ol(s,l)).subtreeFlags=14680064&s.subtreeFlags,null!==a?i=Ol(a,i):(i=Ml(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?zi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Ol(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Pi(e,t){return(t=zl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,a){return null!==a&&mo(a),wo(t,e.child,null,n),(e=Pi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Ro(e.return,t,n)}function Ui(e,t,n,a,r){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=a,o.tail=n,o.tailMode=r)}function Vi(e,t,n){var a=t.pendingProps,r=a.revealOrder,o=a.tail;if(vi(e,t,a.children,n),0!==(2&(a=es.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Nr(es,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===ts(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Ui(t,!1,r,n,o);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===ts(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Ui(t,!0,n,null,o);break;case"together":Ui(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Ol(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ol(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!ro)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function Ki(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function qi(e,t,n){var a=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ki(t),null;case 1:case 17:return Fr(t.type)&&Or(),Ki(t),null;case 3:return a=t.stateNode,Zo(),Cr(Rr),Cr(Er),as(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ho(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==oo&&(sl(oo),oo=null))),Fi(e,t),Ki(t),null;case 5:$o(t);var r=Yo(Xo.current);if(n=t.type,null!==e&&null!=t.stateNode)Oi(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(o(166));return Ki(t),null}if(e=Yo(Ko.current),ho(t)){a=t.stateNode,n=t.type;var s=t.memoizedProps;switch(a[dr]=t,a[pr]=s,e=0!==(1&t.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Q(a,s),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!s.multiple},Ba("invalid",a);break;case"textarea":re(a,s),Ba("invalid",a)}for(var c in be(n,s),r=null,s)if(s.hasOwnProperty(c)){var l=s[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==s.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==s.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":K(a),$(a,s,!0);break;case"textarea":K(a),se(a);break;case"select":case"option":break;default:"function"===typeof s.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[dr]=t,e[pr]=a,_i(e,t,!1,!1),t.stateNode=e;e:{switch(c=xe(n,a),n){case"dialog":Ba("cancel",e),Ba("close",e),r=a;break;case"iframe":case"object":case"embed":Ba("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],e);r=a;break;case"source":Ba("error",e),r=a;break;case"img":case"image":case"link":Ba("error",e),Ba("load",e),r=a;break;case"details":Ba("toggle",e),r=a;break;case"input":Q(e,a),r=Y(e,a),Ba("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=L({},a,{value:void 0}),Ba("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Ba("invalid",e)}for(s in be(n,r),l=r)if(l.hasOwnProperty(s)){var u=l[s];"style"===s?ge(e,u):"dangerouslySetInnerHTML"===s?null!=(u=u?u.__html:void 0)&&he(e,u):"children"===s?"string"===typeof u?("textarea"!==n||""!==u)&&de(e,u):"number"===typeof u&&de(e,""+u):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(i.hasOwnProperty(s)?null!=u&&"onScroll"===s&&Ba("scroll",e):null!=u&&x(e,s,u,c))}switch(n){case"input":K(e),$(e,a,!1);break;case"textarea":K(e),se(e);break;case"option":null!=a.value&&e.setAttribute("value",""+H(a.value));break;case"select":e.multiple=!!a.multiple,null!=(s=a.value)?ne(e,!!a.multiple,s,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ki(t),null;case 6:if(e&&null!=t.stateNode)Di(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(o(166));if(n=Yo(Xo.current),Yo(Ko.current),ho(t)){if(a=t.stateNode,n=t.memoizedProps,a[dr]=t,(s=a.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}s&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[dr]=t,t.stateNode=a}return Ki(t),null;case 13:if(Cr(es),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ro&&null!==ao&&0!==(1&t.mode)&&0===(128&t.flags))po(),fo(),t.flags|=98560,s=!1;else if(s=ho(t),null!==a&&null!==a.dehydrated){if(null===e){if(!s)throw Error(o(318));if(!(s=null!==(s=t.memoizedState)?s.dehydrated:null))throw Error(o(317));s[dr]=t}else fo(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ki(t),s=!1}else null!==oo&&(sl(oo),oo=null),s=!0;if(!s)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&es.current)?0===Dc&&(Dc=3):ml())),null!==t.updateQueue&&(t.flags|=4),Ki(t),null);case 4:return Zo(),Fi(e,t),null===e&&Va(t.stateNode.containerInfo),Ki(t),null;case 10:return Eo(t.type._context),Ki(t),null;case 19:if(Cr(es),null===(s=t.memoizedState))return Ki(t),null;if(a=0!==(128&t.flags),null===(c=s.rendering))if(a)ji(s,!1);else{if(0!==Dc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=ts(e))){for(t.flags|=128,ji(s,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(s=n).flags&=14680066,null===(c=s.alternate)?(s.childLanes=0,s.lanes=e,s.child=null,s.subtreeFlags=0,s.memoizedProps=null,s.memoizedState=null,s.updateQueue=null,s.dependencies=null,s.stateNode=null):(s.childLanes=c.childLanes,s.lanes=c.lanes,s.child=c.child,s.subtreeFlags=0,s.deletions=null,s.memoizedProps=c.memoizedProps,s.memoizedState=c.memoizedState,s.updateQueue=c.updateQueue,s.type=c.type,e=c.dependencies,s.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Nr(es,1&es.current|2),t.child}e=e.sibling}null!==s.tail&&Ze()>Vc&&(t.flags|=128,a=!0,ji(s,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=ts(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(s,!0),null===s.tail&&"hidden"===s.tailMode&&!c.alternate&&!ro)return Ki(t),null}else 2*Ze()-s.renderingStartTime>Vc&&1073741824!==n&&(t.flags|=128,a=!0,ji(s,!1),t.lanes=4194304);s.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=s.last)?n.sibling=c:t.child=c,s.last=c)}return null!==s.tail?(t=s.tail,s.rendering=t,s.tail=t.sibling,s.renderingStartTime=Ze(),t.sibling=null,n=es.current,Nr(es,a?1&n|2:1&n),t):(Ki(t),null);case 22:case 23:return hl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Fc)&&(Ki(t),6&t.subtreeFlags&&(t.flags|=8192)):Ki(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Xi(e,t){switch(to(t),t.tag){case 1:return Fr(t.type)&&Or(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Zo(),Cr(Rr),Cr(Er),as(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return $o(t),null;case 13:if(Cr(es),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));fo()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Cr(es),null;case 4:return Zo(),null;case 10:return Eo(t.type._context),null;case 22:case 23:return hl(),null;default:return null}}_i=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fi=function(){},Oi=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Yo(Ko.current);var o,s=null;switch(n){case"input":r=Y(e,r),a=Y(e,a),s=[];break;case"select":r=L({},r,{value:void 0}),a=L({},a,{value:void 0}),s=[];break;case"textarea":r=ae(e,r),a=ae(e,a),s=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(o in c)c.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?s||(s=[]):(s=s||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(o in c)!c.hasOwnProperty(o)||l&&l.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in l)l.hasOwnProperty(o)&&c[o]!==l[o]&&(n||(n={}),n[o]=l[o])}else n||(s||(s=[]),s.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(s=s||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(s=s||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ba("scroll",e),s||c===l||(s=[])):(s=s||[]).push(u,l))}n&&(s=s||[]).push("style",n);var u=s;(t.updateQueue=u)&&(t.flags|=4)}},Di=function(e,t,n,a){n!==a&&(t.flags|=4)};var Yi=!1,Qi=!1,Zi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Il(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){Il(e,t,a)}}var tc=!1;function nc(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var o=r.destroy;r.destroy=void 0,void 0!==o&&ec(t,n,o)}r=r.next}while(r!==a)}}function ac(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function oc(e){var t=e.alternate;null!==t&&(e.alternate=null,oc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[dr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function sc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||sc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}var uc=null,hc=!1;function dc(e,t,n){for(n=n.child;null!==n;)pc(e,t,n),n=n.sibling}function pc(e,t,n){if(ot&&"function"===typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Qi||$i(n,t);case 6:var a=uc,r=hc;uc=null,dc(e,t,n),hc=r,null!==(uc=a)&&(hc?(e=uc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):uc.removeChild(n.stateNode));break;case 18:null!==uc&&(hc?(e=uc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Vt(e)):cr(uc,n.stateNode));break;case 4:a=uc,r=hc,uc=n.stateNode.containerInfo,hc=!0,dc(e,t,n),uc=a,hc=r;break;case 0:case 11:case 14:case 15:if(!Qi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var o=r,s=o.destroy;o=o.tag,void 0!==s&&(0!==(2&o)||0!==(4&o))&&ec(n,t,s),r=r.next}while(r!==a)}dc(e,t,n);break;case 1:if(!Qi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Il(n,t,i)}dc(e,t,n);break;case 21:dc(e,t,n);break;case 22:1&n.mode?(Qi=(a=Qi)||null!==n.memoizedState,dc(e,t,n),Qi=a):dc(e,t,n);break;default:dc(e,t,n)}}function fc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var a=El.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var s=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,hc=!1;break e;case 3:case 4:uc=c.stateNode.containerInfo,hc=!0;break e}c=c.return}if(null===uc)throw Error(o(160));pc(s,i,r),uc=null,hc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Il(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gc(t,e),t=t.sibling}function gc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mc(t,e),yc(e),4&a){try{nc(3,e,e.return),ac(3,e)}catch(g){Il(e,e.return,g)}try{nc(5,e,e.return)}catch(g){Il(e,e.return,g)}}break;case 1:mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{de(r,"")}catch(g){Il(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var s=e.memoizedProps,i=null!==n?n.memoizedProps:s,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===s.type&&null!=s.name&&Z(r,s),xe(c,i);var u=xe(c,s);for(i=0;i<l.length;i+=2){var h=l[i],d=l[i+1];"style"===h?ge(r,d):"dangerouslySetInnerHTML"===h?he(r,d):"children"===h?de(r,d):x(r,h,d,u)}switch(c){case"input":J(r,s);break;case"textarea":oe(r,s);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!s.multiple;var f=s.value;null!=f?ne(r,!!s.multiple,f,!1):p!==!!s.multiple&&(null!=s.defaultValue?ne(r,!!s.multiple,s.defaultValue,!0):ne(r,!!s.multiple,s.multiple?[]:"",!1))}r[pr]=s}catch(g){Il(e,e.return,g)}}break;case 6:if(mc(t,e),yc(e),4&a){if(null===e.stateNode)throw Error(o(162));r=e.stateNode,s=e.memoizedProps;try{r.nodeValue=s}catch(g){Il(e,e.return,g)}}break;case 3:if(mc(t,e),yc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Vt(t.containerInfo)}catch(g){Il(e,e.return,g)}break;case 4:default:mc(t,e),yc(e);break;case 13:mc(t,e),yc(e),8192&(r=e.child).flags&&(s=null!==r.memoizedState,r.stateNode.isHidden=s,!s||null!==r.alternate&&null!==r.alternate.memoizedState||(Uc=Ze())),4&a&&fc(e);break;case 22:if(h=null!==n&&null!==n.memoizedState,1&e.mode?(Qi=(u=Qi)||h,mc(t,e),Qi=u):mc(t,e),yc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!h&&0!==(1&e.mode))for(Ji=e,h=e.child;null!==h;){for(d=Ji=h;null!==Ji;){switch(f=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nc(4,p,p.return);break;case 1:$i(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Il(a,n,g)}}break;case 5:$i(p,p.return);break;case 22:if(null!==p.memoizedState){wc(d);continue}}null!==f?(f.return=p,Ji=f):wc(d)}h=h.sibling}e:for(h=null,d=e;;){if(5===d.tag){if(null===h){h=d;try{r=d.stateNode,u?"function"===typeof(s=r.style).setProperty?s.setProperty("display","none","important"):s.display="none":(c=d.stateNode,i=void 0!==(l=d.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Il(e,e.return,g)}}}else if(6===d.tag){if(null===h)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(g){Il(e,e.return,g)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;h===d&&(h=null),d=d.return}h===d&&(h=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mc(t,e),yc(e),4&a&&fc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(sc(n)){var a=n;break e}n=n.return}throw Error(o(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(de(r,""),a.flags&=-33),lc(e,ic(e),r);break;case 3:case 4:var s=a.stateNode.containerInfo;cc(e,ic(e),s);break;default:throw Error(o(161))}}catch(i){Il(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bc(e,t,n){Ji=e,xc(e,t,n)}function xc(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,o=r.child;if(22===r.tag&&a){var s=null!==r.memoizedState||Yi;if(!s){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Qi;i=Yi;var l=Qi;if(Yi=s,(Qi=c)&&!l)for(Ji=r;null!==Ji;)c=(s=Ji).child,22===s.tag&&null!==s.memoizedState?kc(r):null!==c?(c.return=s,Ji=c):kc(r);for(;null!==o;)Ji=o,xc(o,t,n),o=o.sibling;Ji=r,Yi=i,Qi=l}vc(e)}else 0!==(8772&r.subtreeFlags)&&null!==o?(o.return=r,Ji=o):vc(e)}}function vc(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Qi||ac(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Qi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var s=t.updateQueue;null!==s&&Ho(t,s,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ho(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var h=u.memoizedState;if(null!==h){var d=h.dehydrated;null!==d&&Vt(d)}}}break;default:throw Error(o(163))}Qi||512&t.flags&&rc(t)}catch(p){Il(t,t.return,p)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wc(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function kc(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ac(4,t)}catch(c){Il(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Il(t,r,c)}}var o=t.return;try{rc(t)}catch(c){Il(t,o,c)}break;case 5:var s=t.return;try{rc(t)}catch(c){Il(t,s,c)}}}catch(c){Il(t,t.return,c)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Sc,Ic=Math.ceil,Cc=v.ReactCurrentDispatcher,Nc=v.ReactCurrentOwner,Tc=v.ReactCurrentBatchConfig,Ec=0,Rc=null,Ac=null,_c=0,Fc=0,Oc=Ir(0),Dc=0,Mc=null,zc=0,Lc=0,Pc=0,Bc=null,Wc=null,Uc=0,Vc=1/0,Gc=null,Hc=!1,jc=null,Kc=null,qc=!1,Xc=null,Yc=0,Qc=0,Zc=null,Jc=-1,$c=0;function el(){return 0!==(6&Ec)?Ze():-1!==Jc?Jc:Jc=Ze()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Ec)&&0!==_c?_c&-_c:null!==go.transition?(0===$c&&($c=mt()),$c):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Qt(e.type)}function nl(e,t,n,a){if(50<Qc)throw Qc=0,Zc=null,Error(o(185));yt(e,n,a),0!==(2&Ec)&&e===Rc||(e===Rc&&(0===(2&Ec)&&(Lc|=n),4===Dc&&il(e,_c)),al(e,a),1===n&&0===Ec&&0===(1&t.mode)&&(Vc=Ze()+500,Br&&Vr()))}function al(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,o=e.pendingLanes;0<o;){var s=31-st(o),i=1<<s,c=r[s];-1===c?0!==(i&n)&&0===(i&a)||(r[s]=pt(i,t)):c<=t&&(e.expiredLanes|=i),o&=~i}}(e,t);var a=dt(e,e===Rc?_c:0);if(0===a)null!==n&&Xe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Xe(n),1===t)0===e.tag?function(e){Br=!0,Ur(e)}(cl.bind(null,e)):Ur(cl.bind(null,e)),sr((function(){0===(6&Ec)&&Vr()})),n=null;else{switch(vt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Rl(n,rl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rl(e,t){if(Jc=-1,$c=0,0!==(6&Ec))throw Error(o(327));var n=e.callbackNode;if(kl()&&e.callbackNode!==n)return null;var a=dt(e,e===Rc?_c:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gl(e,a);else{t=a;var r=Ec;Ec|=2;var s=fl();for(Rc===e&&_c===t||(Gc=null,Vc=Ze()+500,dl(e,t));;)try{bl();break}catch(c){pl(e,c)}To(),Cc.current=s,Ec=r,null!==Ac?t=0:(Rc=null,_c=0,t=Dc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=ol(e,r))),1===t)throw n=Mc,dl(e,0),il(e,a),al(e,Ze()),n;if(6===t)il(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],o=r.getSnapshot;r=r.value;try{if(!ia(o(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gl(e,a))&&(0!==(s=ft(e))&&(a=s,t=ol(e,s))),1===t))throw n=Mc,dl(e,0),il(e,a),al(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(o(345));case 2:case 5:wl(e,Wc,Gc);break;case 3:if(il(e,a),(130023424&a)===a&&10<(t=Uc+500-Ze())){if(0!==dt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){el(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),t);break}wl(e,Wc,Gc);break;case 4:if(il(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-st(a);s=1<<i,(i=t[i])>r&&(r=i),a&=~s}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Ic(a/1960))-a)){e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),a);break}wl(e,Wc,Gc);break;default:throw Error(o(329))}}}return al(e,Ze()),e.callbackNode===n?rl.bind(null,e):null}function ol(e,t){var n=Bc;return e.current.memoizedState.isDehydrated&&(dl(e,t).flags|=256),2!==(e=gl(e,t))&&(t=Wc,Wc=n,null!==t&&sl(t)),e}function sl(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function il(e,t){for(t&=~Pc,t&=~Lc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-st(t),a=1<<n;e[n]=-1,t&=~a}}function cl(e){if(0!==(6&Ec))throw Error(o(327));kl();var t=dt(e,0);if(0===(1&t))return al(e,Ze()),null;var n=gl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=ol(e,a))}if(1===n)throw n=Mc,dl(e,0),il(e,t),al(e,Ze()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wl(e,Wc,Gc),al(e,Ze()),null}function ll(e,t){var n=Ec;Ec|=1;try{return e(t)}finally{0===(Ec=n)&&(Vc=Ze()+500,Br&&Vr())}}function ul(e){null!==Xc&&0===Xc.tag&&0===(6&Ec)&&kl();var t=Ec;Ec|=1;var n=Tc.transition,a=xt;try{if(Tc.transition=null,xt=1,e)return e()}finally{xt=a,Tc.transition=n,0===(6&(Ec=t))&&Vr()}}function hl(){Fc=Oc.current,Cr(Oc)}function dl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Ac)for(n=Ac.return;null!==n;){var a=n;switch(to(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Or();break;case 3:Zo(),Cr(Rr),Cr(Er),as();break;case 5:$o(a);break;case 4:Zo();break;case 13:case 19:Cr(es);break;case 10:Eo(a.type._context);break;case 22:case 23:hl()}n=n.return}if(Rc=e,Ac=e=Ol(e.current,null),_c=Fc=t,Dc=0,Mc=null,Pc=Lc=zc=0,Wc=Bc=null,null!==Fo){for(t=0;t<Fo.length;t++)if(null!==(a=(n=Fo[t]).interleaved)){n.interleaved=null;var r=a.next,o=n.pending;if(null!==o){var s=o.next;o.next=r,a.next=s}n.pending=a}Fo=null}return e}function pl(e,t){for(;;){var n=Ac;try{if(To(),rs.current=Js,us){for(var a=is.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}us=!1}if(ss=0,ls=cs=is=null,hs=!1,ds=0,Nc.current=null,null===n||null===n.return){Dc=1,Mc=t,Ac=null;break}e:{var s=e,i=n.return,c=n,l=t;if(t=_c,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,h=c,d=h.tag;if(0===(1&h.mode)&&(0===d||11===d||15===d)){var p=h.alternate;p?(h.updateQueue=p.updateQueue,h.memoizedState=p.memoizedState,h.lanes=p.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,c,0,t),1&f.mode&&mi(s,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){mi(s,u,t),ml();break e}l=Error(o(426))}else if(ro&&1&c.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,c,0,t),mo(li(l,c));break e}}s=l=li(l,c),4!==Dc&&(Dc=2),null===Bc?Bc=[s]:Bc.push(s),s=i;do{switch(s.tag){case 3:s.flags|=65536,t&=-t,s.lanes|=t,Vo(s,pi(0,l,t));break e;case 1:c=l;var b=s.type,x=s.stateNode;if(0===(128&s.flags)&&("function"===typeof b.getDerivedStateFromError||null!==x&&"function"===typeof x.componentDidCatch&&(null===Kc||!Kc.has(x)))){s.flags|=65536,t&=-t,s.lanes|=t,Vo(s,fi(s,c,t));break e}}s=s.return}while(null!==s)}vl(n)}catch(v){t=v,Ac===n&&null!==n&&(Ac=n=n.return);continue}break}}function fl(){var e=Cc.current;return Cc.current=Js,null===e?Js:e}function ml(){0!==Dc&&3!==Dc&&2!==Dc||(Dc=4),null===Rc||0===(268435455&zc)&&0===(268435455&Lc)||il(Rc,_c)}function gl(e,t){var n=Ec;Ec|=2;var a=fl();for(Rc===e&&_c===t||(Gc=null,dl(e,t));;)try{yl();break}catch(r){pl(e,r)}if(To(),Ec=n,Cc.current=a,null!==Ac)throw Error(o(261));return Rc=null,_c=0,Dc}function yl(){for(;null!==Ac;)xl(Ac)}function bl(){for(;null!==Ac&&!Ye();)xl(Ac)}function xl(e){var t=Sc(e.alternate,e,Fc);e.memoizedProps=e.pendingProps,null===t?vl(e):Ac=t,Nc.current=null}function vl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=qi(n,t,Fc)))return void(Ac=n)}else{if(null!==(n=Xi(n,t)))return n.flags&=32767,void(Ac=n);if(null===e)return Dc=6,void(Ac=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ac=t);Ac=t=e}while(null!==t);0===Dc&&(Dc=5)}function wl(e,t,n){var a=xt,r=Tc.transition;try{Tc.transition=null,xt=1,function(e,t,n,a){do{kl()}while(null!==Xc);if(0!==(6&Ec))throw Error(o(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var s=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-st(n),o=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~o}}(e,s),e===Rc&&(Ac=Rc=null,_c=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||qc||(qc=!0,Rl(tt,(function(){return kl(),null}))),s=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||s){s=Tc.transition,Tc.transition=null;var i=xt;xt=1;var c=Ec;Ec|=4,Nc.current=null,function(e,t){if(er=Ht,pa(e=da())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,s=a.focusNode;a=a.focusOffset;try{n.nodeType,s.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,h=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==r&&3!==d.nodeType||(c=i+r),d!==s||0!==a&&3!==d.nodeType||(l=i+a),3===d.nodeType&&(i+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++u===r&&(c=i),p===s&&++h===a&&(l=i),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Ht=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=t.stateNode.containerInfo;1===v.nodeType?v.textContent="":9===v.nodeType&&v.documentElement&&v.removeChild(v.documentElement);break;default:throw Error(o(163))}}catch(w){Il(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tc,tc=!1}(e,n),gc(n,e),fa(tr),Ht=!!er,tr=er=null,e.current=n,bc(n,e,r),Qe(),Ec=c,xt=i,Tc.transition=s}else e.current=n;if(qc&&(qc=!1,Xc=e,Yc=r),s=e.pendingLanes,0===s&&(Kc=null),function(e){if(ot&&"function"===typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),al(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hc)throw Hc=!1,e=jc,jc=null,e;0!==(1&Yc)&&0!==e.tag&&kl(),s=e.pendingLanes,0!==(1&s)?e===Zc?Qc++:(Qc=0,Zc=e):Qc=0,Vr()}(e,t,n,a)}finally{Tc.transition=r,xt=a}return null}function kl(){if(null!==Xc){var e=vt(Yc),t=Tc.transition,n=xt;try{if(Tc.transition=null,xt=16>e?16:e,null===Xc)var a=!1;else{if(e=Xc,Xc=null,Yc=0,0!==(6&Ec))throw Error(o(331));var r=Ec;for(Ec|=4,Ji=e.current;null!==Ji;){var s=Ji,i=s.child;if(0!==(16&Ji.flags)){var c=s.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Ji=u;null!==Ji;){var h=Ji;switch(h.tag){case 0:case 11:case 15:nc(8,h,s)}var d=h.child;if(null!==d)d.return=h,Ji=d;else for(;null!==Ji;){var p=(h=Ji).sibling,f=h.return;if(oc(h),h===u){Ji=null;break}if(null!==p){p.return=f,Ji=p;break}Ji=f}}}var m=s.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=s}}if(0!==(2064&s.subtreeFlags)&&null!==i)i.return=s,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(s=Ji).flags))switch(s.tag){case 0:case 11:case 15:nc(9,s,s.return)}var b=s.sibling;if(null!==b){b.return=s.return,Ji=b;break e}Ji=s.return}}var x=e.current;for(Ji=x;null!==Ji;){var v=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==v)v.return=i,Ji=v;else e:for(i=x;null!==Ji;){if(0!==(2048&(c=Ji).flags))try{switch(c.tag){case 0:case 11:case 15:ac(9,c)}}catch(k){Il(c,c.return,k)}if(c===i){Ji=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,Ji=w;break e}Ji=c.return}}if(Ec=r,Vr(),ot&&"function"===typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{xt=n,Tc.transition=t}}return!1}function Sl(e,t,n){e=Wo(e,t=pi(0,t=li(n,t),1),1),t=el(),null!==e&&(yt(e,1,t),al(e,t))}function Il(e,t,n){if(3===e.tag)Sl(e,e,n);else for(;null!==t;){if(3===t.tag){Sl(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===Kc||!Kc.has(a))){t=Wo(t,e=fi(t,e=li(n,e),1),1),e=el(),null!==t&&(yt(t,1,e),al(t,e));break}}t=t.return}}function Cl(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&n,Rc===e&&(_c&n)===n&&(4===Dc||3===Dc&&(130023424&_c)===_c&&500>Ze()-Uc?dl(e,0):Pc|=n),al(e,t)}function Nl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=el();null!==(e=Mo(e,t))&&(yt(e,t,n),al(e,n))}function Tl(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Nl(e,n)}function El(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(o(314))}null!==a&&a.delete(t),Nl(e,n)}function Rl(e,t){return qe(e,t)}function Al(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _l(e,t,n,a){return new Al(e,t,n,a)}function Fl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ol(e,t){var n=e.alternate;return null===n?((n=_l(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Dl(e,t,n,a,r,s){var i=2;if(a=e,"function"===typeof e)Fl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ml(n.children,r,s,t);case I:i=8,r|=8;break;case C:return(e=_l(12,n,t,2|r)).elementType=C,e.lanes=s,e;case R:return(e=_l(13,n,t,r)).elementType=R,e.lanes=s,e;case A:return(e=_l(19,n,t,r)).elementType=A,e.lanes=s,e;case O:return zl(n,r,s,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case N:i=10;break e;case T:i=9;break e;case E:i=11;break e;case _:i=14;break e;case F:i=16,a=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=_l(i,n,t,r)).elementType=e,t.type=a,t.lanes=s,t}function Ml(e,t,n,a){return(e=_l(7,e,a,t)).lanes=n,e}function zl(e,t,n,a){return(e=_l(22,e,a,t)).elementType=O,e.lanes=n,e.stateNode={isHidden:!1},e}function Ll(e,t,n){return(e=_l(6,e,null,t)).lanes=n,e}function Pl(e,t,n){return(t=_l(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wl(e,t,n,a,r,o,s,i,c){return e=new Bl(e,t,n,i,c),1===t?(t=1,!0===o&&(t|=8)):t=0,o=_l(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lo(o),e}function Ul(e){if(!e)return Tr;e:{if(Ve(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Mr(e,n,t)}return t}function Vl(e,t,n,a,r,o,s,i,c){return(e=Wl(n,a,!0,e,0,o,0,i,c)).context=Ul(null),n=e.current,(o=Bo(a=el(),r=tl(n))).callback=void 0!==t&&null!==t?t:null,Wo(n,o,r),e.current.lanes=r,yt(e,r,a),al(e,a),e}function Gl(e,t,n,a){var r=t.current,o=el(),s=tl(r);return n=Ul(n),null===t.context?t.context=n:t.pendingContext=n,(t=Bo(o,s)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Wo(r,t,s))&&(nl(e,r,s,o),Uo(e,r,s)),s}function Hl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function jl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Kl(e,t){jl(e,t),(e=e.alternate)&&jl(e,t)}Sc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Rr.current)xi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xi=!1,function(e,t,n){switch(t.tag){case 3:Ri(t),fo();break;case 5:Jo(t);break;case 1:Fr(t.type)&&zr(t);break;case 4:Qo(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Nr(So,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Nr(es,1&es.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Li(e,t,n):(Nr(es,1&es.current),null!==(e=Hi(e,t,n))?e.sibling:null);Nr(es,1&es.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Vi(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Nr(es,es.current),a)break;return null;case 22:case 23:return t.lanes=0,Ii(e,t,n)}return Hi(e,t,n)}(e,t,n);xi=0!==(131072&e.flags)}else xi=!1,ro&&0!==(1048576&t.flags)&&$r(t,Kr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=_r(t,Er.current);Ao(t,n),r=gs(null,t,a,e,r,n);var s=ys();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(s=!0,zr(t)):s=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Lo(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ci(t,a,e,n),t=Ei(null,t,a,!0,s,n)):(t.tag=0,ro&&s&&eo(t),vi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Fl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===_)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Ni(null,t,a,e,n);break e;case 1:t=Ti(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=ki(null,t,a,ni(a.type,e),n);break e}throw Error(o(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ni(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ti(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ri(t),null===e)throw Error(o(387));a=t.pendingProps,r=(s=t.memoizedState).element,Po(e,t),Go(t,a,null,n);var i=t.memoizedState;if(a=i.element,s.isDehydrated){if(s={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=s,t.memoizedState=s,256&t.flags){t=Ai(e,t,a,n,r=li(Error(o(423)),t));break e}if(a!==r){t=Ai(e,t,a,n,r=li(Error(o(424)),t));break e}for(ao=lr(t.stateNode.containerInfo.firstChild),no=t,ro=!0,oo=null,n=ko(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(fo(),a===r){t=Hi(e,t,n);break e}vi(e,t,a,n)}t=t.child}return t;case 5:return Jo(t),null===e&&lo(t),a=t.type,r=t.pendingProps,s=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==s&&nr(a,s)&&(t.flags|=32),Ci(e,t),vi(e,t,i,n),t.child;case 6:return null===e&&lo(t),null;case 13:return Li(e,t,n);case 4:return Qo(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=wo(t,null,a,n):vi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return vi(e,t,t.pendingProps,n),t.child;case 8:case 12:return vi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,s=t.memoizedProps,i=r.value,Nr(So,a._currentValue),a._currentValue=i,null!==s)if(ia(s.value,i)){if(s.children===r.children&&!Rr.current){t=Hi(e,t,n);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var c=s.dependencies;if(null!==c){i=s.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===s.tag){(l=Bo(-1,n&-n)).tag=2;var u=s.updateQueue;if(null!==u){var h=(u=u.shared).pending;null===h?l.next=l:(l.next=h.next,h.next=l),u.pending=l}}s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),Ro(s.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===s.tag)i=s.type===t.type?null:s.child;else if(18===s.tag){if(null===(i=s.return))throw Error(o(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Ro(i,n,t),i=s.sibling}else i=s.child;if(null!==i)i.return=s;else for(i=s;null!==i;){if(i===t){i=null;break}if(null!==(s=i.sibling)){s.return=i.return,i=s;break}i=i.return}s=i}vi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ao(t,n),a=a(r=_o(r)),t.flags|=1,vi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),ki(e,t,a,r=ni(a.type,r),n);case 15:return Si(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Fr(a)?(e=!0,zr(t)):e=!1,Ao(t,n),si(t,a,r),ci(t,a,r,n),Ei(null,t,a,!0,e,n);case 19:return Vi(e,t,n);case 22:return Ii(e,t,n)}throw Error(o(156,t.tag))};var ql="function"===typeof reportError?reportError:function(e){console.error(e)};function Xl(e){this._internalRoot=e}function Yl(e){this._internalRoot=e}function Ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jl(){}function $l(e,t,n,a,r){var o=n._reactRootContainer;if(o){var s=o;if("function"===typeof r){var i=r;r=function(){var e=Hl(s);i.call(e)}}Gl(t,s,e,r)}else s=function(e,t,n,a,r){if(r){if("function"===typeof a){var o=a;a=function(){var e=Hl(s);o.call(e)}}var s=Vl(t,a,e,0,null,!1,0,"",Jl);return e._reactRootContainer=s,e[fr]=s.current,Va(8===e.nodeType?e.parentNode:e),ul(),s}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=Hl(c);i.call(e)}}var c=Wl(e,0,!1,null,0,!1,0,"",Jl);return e._reactRootContainer=c,e[fr]=c.current,Va(8===e.nodeType?e.parentNode:e),ul((function(){Gl(t,c,n,a)})),c}(n,t,e,r,a);return Hl(s)}Yl.prototype.render=Xl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Gl(e,t,null,null)},Yl.prototype.unmount=Xl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Gl(null,e,null,null)})),t[fr]=null}},Yl.prototype.unstable_scheduleHydration=function(e){if(e){var t=It();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ot.length&&0!==t&&t<Ot[n].priority;n++);Ot.splice(n,0,e),0===n&&Lt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),al(t,Ze()),0===(6&Ec)&&(Vc=Ze()+500,Vr()))}break;case 13:ul((function(){var t=Mo(e,1);if(null!==t){var n=el();nl(t,e,1,n)}})),Kl(e,1)}},kt=function(e){if(13===e.tag){var t=Mo(e,134217728);if(null!==t)nl(t,e,134217728,el());Kl(e,134217728)}},St=function(e){if(13===e.tag){var t=tl(e),n=Mo(e,t);if(null!==n)nl(n,e,t,el());Kl(e,t)}},It=function(){return xt},Ct=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(o(90));q(a),J(a,r)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=ll,Re=ul;var eu={usingClientEntryPoint:!1,Events:[xr,vr,wr,Ne,Te,ll]},tu={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{rt=au.inject(nu),ot=au}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ql(t))throw Error(o(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Ql(e))throw Error(o(299));var n=!1,a="",r=ql;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wl(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Va(8===e.nodeType?e.parentNode:e),new Xl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,n){if(!Zl(t))throw Error(o(200));return $l(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ql(e))throw Error(o(405));var a=null!=n&&n.hydratedSources||null,r=!1,s="",i=ql;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(s=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Vl(t,null,e,1,null!=n?n:null,r,0,s,i),e[fr]=t.current,Va(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yl(t)},t.render=function(e,t,n){if(!Zl(t))throw Error(o(200));return $l(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zl(e))throw Error(o(40));return!!e._reactRootContainer&&(ul((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Zl(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return $l(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},391:(e,t,n)=>{"use strict";var a=n(950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(730)},29:function(e,t,n){var a;a=function(e){return function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(e,t,n){"use strict";n.r(t);var a=n("react"),r=function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},e(t,n)};return function(t,n){function a(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(a.prototype=n.prototype,new a)}}(),o=function(){return o=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},o.apply(this,arguments)},s=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};function i(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return t?new Promise((function(n,a){t.call(navigator,e,n,a)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var c=function(e){function t(t){var n=e.call(this,t)||this;return n.canvas=null,n.ctx=null,n.requestUserMediaId=0,n.unmounted=!1,n.state={hasUserMedia:!1},n}return r(t,e),t.prototype.componentDidMount=function(){var e=this.state,t=this.props;this.unmounted=!1,i()?(e.hasUserMedia||this.requestUserMedia(),t.children&&"function"!=typeof t.children&&console.warn("children must be a function")):t.onUserMediaError("getUserMedia not supported")},t.prototype.componentDidUpdate=function(e){var t=this.props;if(i()){var n=JSON.stringify(e.audioConstraints)!==JSON.stringify(t.audioConstraints),a=JSON.stringify(e.videoConstraints)!==JSON.stringify(t.videoConstraints),r=e.minScreenshotWidth!==t.minScreenshotWidth,o=e.minScreenshotHeight!==t.minScreenshotHeight;(a||r||o)&&(this.canvas=null,this.ctx=null),(n||a)&&(this.stopAndCleanup(),this.requestUserMedia())}else t.onUserMediaError("getUserMedia not supported")},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},t.stopMediaStream=function(e){e&&(e.getVideoTracks&&e.getAudioTracks?(e.getVideoTracks().map((function(t){e.removeTrack(t),t.stop()})),e.getAudioTracks().map((function(t){e.removeTrack(t),t.stop()}))):e.stop())},t.prototype.stopAndCleanup=function(){var e=this.state;e.hasUserMedia&&(t.stopMediaStream(this.stream),e.src&&window.URL.revokeObjectURL(e.src))},t.prototype.getScreenshot=function(e){var t=this.state,n=this.props;if(!t.hasUserMedia)return null;var a=this.getCanvas(e);return a&&a.toDataURL(n.screenshotFormat,n.screenshotQuality)},t.prototype.getCanvas=function(e){var t=this.state,n=this.props;if(!this.video)return null;if(!t.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var a=this.video.videoWidth,r=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var o=a/r;r=(a=n.minScreenshotWidth||this.video.clientWidth)/o,n.minScreenshotHeight&&r<n.minScreenshotHeight&&(a=(r=n.minScreenshotHeight)*o)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===e||void 0===e?void 0:e.width)||a,this.canvas.height=(null===e||void 0===e?void 0:e.height)||r,this.ctx=this.canvas.getContext("2d")}var s=this.ctx,i=this.canvas;return s&&i&&(i.width=(null===e||void 0===e?void 0:e.width)||i.width,i.height=(null===e||void 0===e?void 0:e.height)||i.height,n.mirrored&&(s.translate(i.width,0),s.scale(-1,1)),s.imageSmoothingEnabled=n.imageSmoothing,s.drawImage(this.video,0,0,(null===e||void 0===e?void 0:e.width)||i.width,(null===e||void 0===e?void 0:e.height)||i.height),n.mirrored&&(s.scale(-1,1),s.translate(-i.width,0))),i},t.prototype.requestUserMedia=function(){var e=this,n=this.props,a=function(a,r){var o={video:"undefined"===typeof r||r};n.audio&&(o.audio="undefined"===typeof a||a),e.requestUserMediaId++;var s=e.requestUserMediaId;navigator.mediaDevices.getUserMedia(o).then((function(n){e.unmounted||s!==e.requestUserMediaId?t.stopMediaStream(n):e.handleUserMedia(null,n)})).catch((function(t){e.handleUserMedia(t)}))};if("mediaDevices"in navigator)a(n.audioConstraints,n.videoConstraints);else{var r=function(e){return{optional:[{sourceId:e}]}},o=function(e){var t=e.deviceId;return"string"===typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"===typeof t&&t.ideal?t.ideal:null};MediaStreamTrack.getSources((function(e){var t=null,s=null;e.forEach((function(e){"audio"===e.kind?t=e.id:"video"===e.kind&&(s=e.id)}));var i=o(n.audioConstraints);i&&(t=i);var c=o(n.videoConstraints);c&&(s=c),a(r(t),r(s))}))}},t.prototype.handleUserMedia=function(e,t){var n=this.props;if(e||!t)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(e);this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(a){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}n.onUserMedia(t)},t.prototype.render=function(){var e=this,t=this.state,n=this.props,r=n.audio,i=(n.forceScreenshotSourceSize,n.disablePictureInPicture),c=(n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),l=n.style,u=void 0===l?{}:l,h=n.children,d=s(n,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),p=c?o(o({},u),{transform:(u.transform||"")+" scaleX(-1)"}):u,f={getScreenshot:this.getScreenshot.bind(this)};return a.createElement(a.Fragment,null,a.createElement("video",o({autoPlay:!0,disablePictureInPicture:i,src:t.src,muted:!r,playsInline:!0,ref:function(t){e.video=t},style:p},d)),h&&h(f))},t.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},t}(a.Component);t.default=c},react:function(t,n){t.exports=e}}).default},e.exports=a(n(43))},153:(e,t,n)=>{"use strict";var a=n(43),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,o={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)s.call(t,a)&&!c.hasOwnProperty(a)&&(o[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===o[a]&&(o[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:o,_owner:i.current}}t.jsx=l,t.jsxs=l},202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},I={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,a){var r,o={},s=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(s=""+t.key),t)k.call(t,r)&&!I.hasOwnProperty(r)&&(o[r]=t[r]);var c=arguments.length-2;if(1===c)o.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];o.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===o[r]&&(o[r]=c[r]);return{$$typeof:n,type:e,key:s,ref:i,props:o,_owner:S.current}}function N(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var T=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function R(e,t,r,o,s){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return s=s(c=e),e=""===o?"."+E(c,0):o,w(s)?(r="",null!=e&&(r=e.replace(T,"$&/")+"/"),R(s,t,r,"",(function(e){return e}))):null!=s&&(N(s)&&(s=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(s,r+(!s.key||c&&c.key===s.key?"":(""+s.key).replace(T,"$&/")+"/")+e)),t.push(s)),1;if(c=0,o=""===o?".":o+":",w(e))for(var l=0;l<e.length;l++){var u=o+E(i=e[l],l);c+=R(i,t,r,u,s)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=R(i=i.value,t,r,u=o+E(i,l++),s);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function A(e,t,n){if(null==e)return e;var a=[],r=0;return R(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function _(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},O={transition:null},D={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:O,ReactCurrentOwner:S};function M(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=s,t.PureComponent=x,t.StrictMode=o,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.act=M,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),o=e.key,s=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,i=S.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!I.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:o,ref:s,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=O.transition;O.transition={};try{e()}finally{O.transition=t}},t.unstable_act=M,t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.3.1"},43:(e,t,n)=>{"use strict";e.exports=n(202)},579:(e,t,n)=>{"use strict";e.exports=n(153)},234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<o(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,s=r>>>1;a<s;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>o(c,n))l<r&&0>o(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>o(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var s=performance;t.unstable_now=function(){return s.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],h=1,d=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function v(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,v(e),!m)if(null!==a(l))m=!0,O(k);else{var t=a(u);null!==t&&D(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(N),N=-1),f=!0;var o=p;try{for(v(n),d=a(l);null!==d&&(!(d.expirationTime>n)||e&&!R());){var s=d.callback;if("function"===typeof s){d.callback=null,p=d.priorityLevel;var i=s(d.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?d.callback=i:d===a(l)&&r(l),v(n)}else r(l);d=a(l)}if(null!==d)var c=!0;else{var h=a(u);null!==h&&D(w,h.startTime-n),c=!1}return c}finally{d=null,p=o,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,I=!1,C=null,N=-1,T=5,E=-1;function R(){return!(t.unstable_now()-E<T)}function A(){if(null!==C){var e=t.unstable_now();E=e;var n=!0;try{n=C(!0,e)}finally{n?S():(I=!1,C=null)}}else I=!1}if("function"===typeof x)S=function(){x(A)};else if("undefined"!==typeof MessageChannel){var _=new MessageChannel,F=_.port2;_.port1.onmessage=A,S=function(){F.postMessage(null)}}else S=function(){y(A,0)};function O(e){C=e,I||(I=!0,S())}function D(e,n){N=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,O(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,o){var s=t.unstable_now();switch("object"===typeof o&&null!==o?o="number"===typeof(o=o.delay)&&0<o?s+o:s:o=s,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:h++,callback:r,priorityLevel:e,startTime:o,expirationTime:i=o+i,sortIndex:-1},o>s?(e.sortIndex=o,n(u,e),null===a(l)&&e===a(u)&&(g?(b(N),N=-1):g=!0,D(w,o-s))):(e.sortIndex=i,n(l,e),m||f||(m=!0,O(k))),e},t.unstable_shouldYield=R,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},853:(e,t,n)=>{"use strict";e.exports=n(234)},334:(e,t,n)=>{var a=n(359),r=n(66),o=n(16),s=n(538),i=n(288),c=n(262),l=n(430);l.alea=a,l.xor128=r,l.xorwow=o,l.xorshift7=s,l.xor4096=i,l.tychei=c,e.exports=l},359:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function s(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.alea=i}(0,e=n.nmd(e),n.amdD)},262:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function s(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.tychei=i}(0,e=n.nmd(e),n.amdD)},66:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor128=i}(0,e=n.nmd(e),n.amdD)},288:function(e,t,n){var a;!function(e,r){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,o=t.i;return t.w=a=a+1640531527|0,n=r[o+34&127],e=r[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[o]=n^e,t.i=o,n+(a^a>>>16)|0},function(e,t){var n,a,r,o,s,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,o=-32;o<c;++o)t&&(a^=t.charCodeAt((o+32)%t.length)),0===o&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,o>=0&&(s=s+1640531527|0,r=0==(n=i[127&o]^=a+s)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,o=512;o>0;--o)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=s,e.X=i,e.i=r}(t,e)}function s(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},538:function(e,t,n){var a;!function(e,r){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function s(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},16:function(e,t,n){var a;!function(e,r){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function s(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&s(a,n),r.state=function(){return s(n,{})}),r}r&&r.exports?r.exports=i:n.amdD&&n.amdO?void 0===(a=function(){return i}.call(t,n,t,r))||(r.exports=a):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},430:function(e,t,n){var a;!function(r,o,s){var i,c=256,l=s.pow(c,6),u=s.pow(2,52),h=2*u,d=c-1;function p(e,t,n){var a=[],d=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(o)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(o)]}}():e,3),a),p=new f(a),x=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,y(b(p.S),o),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(x,d,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,a=this,r=0,o=a.i=a.j=0,s=a.S=[];for(n||(e=[n++]);r<c;)s[r]=r++;for(r=0;r<c;r++)s[r]=s[o=d&o+e[r%n]+(t=s[r])],s[o]=t;(a.g=function(e){for(var t,n=0,r=a.i,o=a.j,s=a.S;e--;)t=s[r=d&r+1],n=n*c+s[d&(s[r]=s[o=d&o+t])+(s[o]=t)];return a.i=r,a.j=o,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(o){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[d&r]=d&(n^=19*t[d&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(s.random(),o),e.exports){e.exports=p;try{i=n(996)}catch(x){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},996:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var o=Object.create(null);n.r(o);var s={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>s[e]=()=>a[e]));return s.default=()=>a,n.d(o,s),o}})(),n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>mo,browserFiles:()=>ui,browserHTTPRequest:()=>xi,concatenateArrayBuffers:()=>Mo,copyModel:()=>vs,decodeWeights:()=>No,decodeWeightsStream:()=>_o,encodeWeights:()=>Co,fromMemory:()=>Si,fromMemorySync:()=>Ii,getLoadHandlers:()=>Ko,getModelArtifactsForJSON:()=>Bo,getModelArtifactsForJSONSync:()=>Po,getModelArtifactsInfoForJSON:()=>Wo,getSaveHandlers:()=>jo,getWeightSpecs:()=>Uo,http:()=>bi,isHTTPScheme:()=>gi,listModels:()=>bs,loadWeights:()=>pi,moveModel:()=>ws,registerLoadRouter:()=>Ho,registerSaveRouter:()=>Go,removeModel:()=>xs,weightsLoaderFactory:()=>fi,withSaveHandler:()=>Ci,withSaveHandlerSync:()=>Ni});var t={};n.r(t),n.d(t,{assertParamsValid:()=>zi,computeFlatOffset:()=>Yi,computeOutShape:()=>Pi,getNormalizedAxes:()=>Vi,isSliceContinous:()=>Xi,maskToAxes:()=>Li,parseSliceParams:()=>Qi,sliceInfo:()=>Zi,startForAxis:()=>Ki,startIndicesWithElidedDims:()=>Gi,stopForAxis:()=>qi,stopIndicesWithElidedDims:()=>Hi,stridesForAxis:()=>ji,stridesWithElidedDims:()=>Bi});var a={};n.r(a),n.d(a,{conv2d:()=>ud,depthwiseConv2d:()=>pd,matMul:()=>fd});var r={};n.r(r),n.d(r,{collectGatherOpShapeInfo:()=>Nf,computeOutShape:()=>Cf,segOpComputeOptimalWindowSize:()=>If});var o={};n.r(o),n.d(o,{ERF_A1:()=>Up,ERF_A2:()=>Vp,ERF_A3:()=>Gp,ERF_A4:()=>Hp,ERF_A5:()=>jp,ERF_P:()=>Wp,PARALLELIZE_THRESHOLD:()=>Rp,RowPartitionType:()=>Ip,SELU_SCALE:()=>Bp,SELU_SCALEALPHA:()=>Pp,applyActivation:()=>cd,assertAndGetBroadcastShape:()=>ei,assertAxesAreInnerMostDims:()=>Il,assertParamsConsistent:()=>kp,assignToTypedArray:()=>Zp,axesAreInnerMostDims:()=>vl,calculateShapes:()=>Ph,checkEinsumDimSizes:()=>sf,checkPadOnDimRoundingMode:()=>Cc,combineLocations:()=>wl,combineRaggedTensorToTensorShapes:()=>Cp,complexWithEvenIndex:()=>Xp,complexWithOddIndex:()=>Yp,computeConv2DInfo:()=>fc,computeConv3DInfo:()=>mc,computeDefaultPad:()=>gc,computeDilation2DInfo:()=>hc,computeOptimalWindowSize:()=>Ap,computeOutAndReduceShapes:()=>kl,computeOutShape:()=>Sp,computePool2DInfo:()=>dc,computePool3DInfo:()=>pc,convertConv2DDataFormat:()=>Ic,decodeEinsumEquation:()=>rf,eitherStridesOrDilationsAreOne:()=>kc,expandShapeToKeepDim:()=>Sl,exponent:()=>$p,exponents:()=>Jp,fromStringArrayToUint8:()=>Ef,fromUint8ToStringArray:()=>Tf,getAxesPermutation:()=>Cl,getBroadcastDims:()=>Js,getComplexWithIndex:()=>Qp,getEinsumComputePath:()=>cf,getEinsumPermutation:()=>of,getFusedBiasGradient:()=>id,getFusedDyActivation:()=>sd,getImageCenter:()=>_p,getInnerMostAxes:()=>Tl,getPermuted:()=>Op,getRaggedRank:()=>Tp,getReductionAxes:()=>$s,getReshaped:()=>Fp,getReshapedPermuted:()=>Dp,getRowPartitionTypesHelper:()=>Np,getSliceBeginCoords:()=>Mp,getSliceSize:()=>zp,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>df,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>pf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>ff,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>yf,getSparseReshapeInputOutputMismatchErrorMessage:()=>xf,getSparseReshapeInputOutputMultipleErrorMessage:()=>bf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>mf,getSparseReshapeNegativeOutputDimErrorMessage:()=>gf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Sf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>vf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>wf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>kf,getUndoAxesPermutation:()=>Nl,isIdentityPermutation:()=>lf,log:()=>Pa,mergeRealAndImagArrays:()=>Kp,prepareAndValidate:()=>Lp,prepareSplitSize:()=>hf,segment_util:()=>r,shouldFuse:()=>ld,slice_util:()=>t,splitRealAndImagArrays:()=>qp,stridesOrDilationsArePositive:()=>Sc,tupleValuesAreOne:()=>wc,upcastType:()=>Br,validateDefaultValueShape:()=>Ep,validateInput:()=>Lh,validateUpdateShape:()=>zh,warn:()=>La});var s={};n.r(s),n.d(s,{json:()=>Jw});var i={};n.r(i),n.d(i,{json:()=>$w});var c={};n.r(c),n.d(c,{json:()=>ek});var l={};n.r(l),n.d(l,{json:()=>tk});var u={};n.r(u),n.d(u,{json:()=>nk});var h={};n.r(h),n.d(h,{json:()=>ak});var d={};n.r(d),n.d(d,{json:()=>rk});var p={};n.r(p),n.d(p,{json:()=>ok});var f={};n.r(f),n.d(f,{json:()=>sk});var m={};n.r(m),n.d(m,{json:()=>ik});var g={};n.r(g),n.d(g,{json:()=>ck});var y={};n.r(y),n.d(y,{json:()=>lk});var b={};n.r(b),n.d(b,{json:()=>uk});var x={};n.r(x),n.d(x,{json:()=>hk});var v={};n.r(v),n.d(v,{json:()=>dk});var w={};n.r(w),n.d(w,{json:()=>pk});var k={};n.r(k),n.d(k,{json:()=>fk});var S={};n.r(S),n.d(S,{json:()=>mk});var I={};n.r(I),n.d(I,{json:()=>gk});var C={};n.r(C),n.d(C,{OP_SCOPE_SUFFIX:()=>co,abs:()=>Zs,acos:()=>$i,acosh:()=>ec,add:()=>As,addN:()=>tc,all:()=>nc,any:()=>ac,argMax:()=>rc,argMin:()=>oc,asin:()=>sc,asinh:()=>ic,atan:()=>cc,atan2:()=>lc,atanh:()=>uc,avgPool:()=>Tc,avgPool3d:()=>Ec,basicLSTMCell:()=>Dc,batchNorm:()=>zc,batchNorm2d:()=>Lc,batchNorm3d:()=>Pc,batchNorm4d:()=>Bc,batchToSpaceND:()=>Mc,bincount:()=>Wc,bitwiseAnd:()=>Uc,booleanMaskAsync:()=>Yh,broadcastArgs:()=>Vc,broadcastTo:()=>Gc,buffer:()=>Ns,cast:()=>Ts,ceil:()=>Hc,clipByValue:()=>jc,clone:()=>Es,complex:()=>uo,concat:()=>Rc,concat1d:()=>Kc,concat2d:()=>qc,concat3d:()=>Xc,concat4d:()=>Yc,conv1d:()=>Zc,conv2d:()=>Qc,conv2dTranspose:()=>$c,conv3d:()=>el,conv3dTranspose:()=>nl,cos:()=>al,cosh:()=>rl,cosineWindow:()=>ad,cumprod:()=>ol,cumsum:()=>sl,denseBincount:()=>il,depthToSpace:()=>cl,depthwiseConv2d:()=>ll,diag:()=>ul,dilation2d:()=>hl,div:()=>Fs,divNoNan:()=>fl,dot:()=>ml,dropout:()=>td,einsum:()=>gl,elu:()=>yl,enclosingPowerOfTwo:()=>nd,ensureShape:()=>bl,equal:()=>dl,erf:()=>xl,euclideanNorm:()=>Ol,exp:()=>Dl,expandDims:()=>Ml,expm1:()=>zl,eye:()=>Pl,fft:()=>vh,fill:()=>Ks,floor:()=>Bl,floorDiv:()=>_s,fused:()=>a,gather:()=>Wl,gatherND:()=>ed,greater:()=>Ul,greaterEqual:()=>Vl,ifft:()=>wh,imag:()=>Gl,image:()=>fp,inTopKAsync:()=>rd,irfft:()=>kh,isFinite:()=>Hl,isInf:()=>jl,isNaN:()=>Kl,leakyRelu:()=>ql,less:()=>Xl,lessEqual:()=>Yl,linalg:()=>mp,linspace:()=>Ql,localResponseNormalization:()=>Zl,log:()=>Jl,log1p:()=>$l,logSigmoid:()=>nu,logSoftmax:()=>au,logSumExp:()=>ru,logicalAnd:()=>ou,logicalNot:()=>su,logicalOr:()=>iu,logicalXor:()=>cu,losses:()=>gp,lowerBound:()=>hu,matMul:()=>Ac,max:()=>El,maxPool:()=>du,maxPool3d:()=>pu,maxPoolWithArgmax:()=>fu,maximum:()=>ti,mean:()=>mu,meshgrid:()=>bu,min:()=>Rl,minimum:()=>xu,mirrorPad:()=>vu,mod:()=>wu,moments:()=>ku,movingAverage:()=>Zh,mul:()=>Os,multiRNNCell:()=>Su,multinomial:()=>Iu,neg:()=>eu,norm:()=>Fl,notEqual:()=>Cu,oneHot:()=>Nu,ones:()=>yu,onesLike:()=>Tu,op:()=>lo,outerProduct:()=>Eu,pad:()=>Ru,pad1d:()=>Au,pad2d:()=>_u,pad3d:()=>Fu,pad4d:()=>Ou,pool:()=>Mu,pow:()=>Xs,prelu:()=>zu,print:()=>Rs,prod:()=>Lu,raggedGather:()=>Pu,raggedRange:()=>Bu,raggedTensorToTensor:()=>Wu,rand:()=>Uu,randomGamma:()=>Ku,randomNormal:()=>qu,randomStandardNormal:()=>Xu,randomUniform:()=>Yu,randomUniformInt:()=>Qu,range:()=>Zu,real:()=>Ju,reciprocal:()=>$u,relu:()=>eh,relu6:()=>th,reshape:()=>Nc,reverse:()=>nh,reverse1d:()=>ah,reverse2d:()=>rh,reverse3d:()=>oh,reverse4d:()=>sh,rfft:()=>Ih,round:()=>ih,rsqrt:()=>ch,scalar:()=>Ps,scatterND:()=>Jh,searchSorted:()=>uu,selu:()=>lh,separableConv2d:()=>uh,setdiff1dAsync:()=>hh,sigmoid:()=>_c,sign:()=>dh,signal:()=>pp,sin:()=>ph,sinh:()=>fh,slice:()=>Fc,slice1d:()=>mh,slice2d:()=>gh,slice3d:()=>yh,slice4d:()=>bh,softmax:()=>xh,softplus:()=>tu,spaceToBatchND:()=>Du,sparse:()=>yp,sparseToDense:()=>$h,spectral:()=>dp,split:()=>Sh,sqrt:()=>Ds,square:()=>Ms,squaredDifference:()=>Ch,squeeze:()=>Nh,stack:()=>Th,step:()=>Eh,stridedSlice:()=>Rh,string:()=>bp,sub:()=>Ys,sum:()=>Al,tan:()=>Ah,tanh:()=>Oc,tensor:()=>po,tensor1d:()=>_h,tensor2d:()=>Fh,tensor3d:()=>Ti,tensor4d:()=>Oh,tensor5d:()=>Dh,tensor6d:()=>Mh,tensorScatterUpdate:()=>Bh,tile:()=>Ll,topk:()=>Wh,transpose:()=>Qh,truncatedNormal:()=>Uh,unique:()=>Vh,unsortedSegmentSum:()=>Gh,unstack:()=>Hh,upperBound:()=>jh,variable:()=>Kh,where:()=>pl,whereAsync:()=>Xh,zeros:()=>gu,zerosLike:()=>zs});var N={};n.r(N),n.d(N,{mx:()=>yI,XI:()=>lC,Nk:()=>uC,f6:()=>dC,ct:()=>dI,YG:()=>gC,hH:()=>kC,z3:()=>sN,sG:()=>yN,uM:()=>kN,C1:()=>VN,vS:()=>BN,qB:()=>qN,GG:()=>YN,lg:()=>eT,rq:()=>ZN,cu:()=>pT,WR:()=>uT,GE:()=>gT,px:()=>bT,jC:()=>OT,He:()=>zT,hE:()=>KT,BF:()=>JC,Dk:()=>nE,cl:()=>uE,_B:()=>SE,ub:()=>EE,_f:()=>_E,Ku:()=>LE,qy:()=>BE,Zy:()=>ZE,bu:()=>eR,zv:()=>aI,dH:()=>NI,HS:()=>oC,yH:()=>vR,l3:()=>kR,z9:()=>IR,x6:()=>RR,_m:()=>zR,eW:()=>UR,GK:()=>HR,SP:()=>qR,yr:()=>YR,dl:()=>EN,Dw:()=>tA,xT:()=>oA,_X:()=>OI,wz:()=>dA});var T=n(43),E=n.t(T,2),R=n(391);class A{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class _{refCount(e){return F("refCount")}incRef(e){return F("incRef")}timerAvailable(){return!0}time(e){return F("time")}read(e){return F("read")}readSync(e){return F("readSync")}readToGPU(e,t){return F("readToGPU")}numDataIds(){return F("numDataIds")}disposeData(e,t){return F("disposeData")}write(e,t,n){return F("write")}move(e,t,n,a,r){return F("move")}createTensorFromGPUData(e,t,n){return F("createTensorFromGPUData")}memory(){return F("memory")}floatPrecision(){return F("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return F("dispose")}}function F(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}function O(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,z(e,t,n)}function D(e,t,n){return Math.max(e,Math.min(t,n))}function M(e){return e%2===0?e:e+1}function z(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function L(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function P(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function B(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";P(G(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function W(e){P(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function U(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function V(e){return 0===e.length}function G(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function H(e){return e%1===0}function j(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function K(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function q(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,o)=>{let s=0;const i=()=>{if(e())return void r();s++;const c=t(s);null!=n&&s>=n?o():null!=a?a(i,c):setTimeout(i,c)};i()}))}function X(e,t){let n=1,a=-1;for(let o=0;o<e.length;++o)if(e[o]>=0)n*=e[o];else if(-1===e[o]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(o));a=o}else if(e[o]<0)throw Error("Shapes can not be < 0. Found ".concat(e[o]," at dim ").concat(o));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function Y(e,t){const n=t.length;return P((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),P(e.every((e=>H(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function Q(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||r?null:Y(t,e).sort();let s=0;for(let i=0;i<e.length;++i){if(null!=o){if(o[s]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==o[s]||o[s]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),o[s]<=i&&s++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function Z(e,t){return J(e,t)}function J(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function $(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function ee(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function te(e){return"string"===typeof e||e instanceof String}function ne(e){return"number"===typeof e}function ae(e){return Array.isArray(e)?ae(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":ne(e)?"float32":te(e)?"string":"boolean"===typeof e?"bool":"float32"}function re(e){return!!(e&&e.constructor&&e.call&&e.apply)}function oe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function se(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function ie(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const o=t[0]*(a?2:1);for(let t=0;t<o;t++)r[t]=n[e+t]}else{const o=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<o;t++)r[t]=ie(e+t*i,s,n,a)}return r}function ce(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return ie(0,e,t,n)}function le(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function ue(e,t){const n=he(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function he(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function de(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ce(e,new Float32Array(n));if("int32"===t)return ce(e,new Int32Array(n));if("bool"===t)return ce(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function pe(e){e.forEach((t=>{P(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function fe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function me(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function ge(e){return e&&e.then&&"function"===typeof e.then}const ye="tfjsflags";class be{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=xe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ve().getBool("IS_TEST")||ve().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ve().getBool("IS_TEST")||ve().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ge(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(ye in e){e[ye].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function xe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function ve(){return ke}let we,ke=null;function Se(){if(null==we){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}we=e}return we}function Ie(e,t){const n=function(){const e=Se();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}const Ce="Abs",Ne="Acos",Te="Acosh",Ee="Add",Re="AddN",Ae="All",_e="Any",Fe="ArgMax",Oe="ArgMin",De="Asin",Me="Asinh",ze="Atan",Le="Atanh",Pe="Atan2",Be="AvgPool",We="AvgPoolGrad",Ue="AvgPool3D",Ve="AvgPool3DGrad",Ge="BatchMatMul",He="BatchToSpaceND",je="Bincount",Ke="BitwiseAnd",qe="BroadcastArgs",Xe="Cast",Ye="Ceil",Qe="ClipByValue",Ze="Complex",Je="ComplexAbs",$e="Concat",et="Conv2D",tt="Conv2DBackpropFilter",nt="Conv2DBackpropInput",at="Conv3D",rt="Conv3DBackpropFilterV2",ot="Conv3DBackpropInputV2",st="Cos",it="Cosh",ct="Cumprod",lt="Cumsum",ut="CropAndResize",ht="DenseBincount",dt="DepthToSpace",pt="DepthwiseConv2dNative",ft="DepthwiseConv2dNativeBackpropFilter",mt="DepthwiseConv2dNativeBackpropInput",gt="Diag",yt="Dilation2D",bt="Dilation2DBackpropInput",xt="Dilation2DBackpropFilter",vt="Draw",wt="RealDiv",kt="Einsum",St="Elu",It="EluGrad",Ct="Erf",Nt="Equal",Tt="Exp",Et="ExpandDims",Rt="Expm1",At="FFT",_t="Fill",Ft="FlipLeftRight",Ot="Floor",Dt="FloorDiv",Mt="FusedBatchNorm",zt="GatherV2",Lt="GatherNd",Pt="Greater",Bt="GreaterEqual",Wt="Identity",Ut="IFFT",Vt="Imag",Gt="IsFinite",Ht="IsInf",jt="IsNan",Kt="LeakyRelu",qt="Less",Xt="LessEqual",Yt="LinSpace",Qt="Log",Zt="Log1p",Jt="LogicalAnd",$t="LogicalNot",en="LogicalOr",tn="LRN",nn="LRNGrad",an="Max",rn="Maximum",on="MaxPool",sn="MaxPoolGrad",cn="MaxPool3D",ln="MaxPool3DGrad",un="MaxPoolWithArgmax",hn="Mean",dn="Min",pn="Minimum",fn="MirrorPad",mn="Mod",gn="Multinomial",yn="Multiply",bn="Neg",xn="NotEqual",vn="NonMaxSuppressionV3",wn="NonMaxSuppressionV4",kn="NonMaxSuppressionV5",Sn="OnesLike",In="OneHot",Cn="Pack",Nn="PadV2",Tn="Pow",En="Prelu",Rn="Prod",An="RaggedGather",_n="RaggedRange",Fn="RaggedTensorToTensor",On="Range",Dn="Real",Mn="Reciprocal",zn="Relu",Ln="Reshape",Pn="ResizeNearestNeighbor",Bn="ResizeNearestNeighborGrad",Wn="ResizeBilinear",Un="ResizeBilinearGrad",Vn="Relu6",Gn="Reverse",Hn="Round",jn="Rsqrt",Kn="ScatterNd",qn="TensorScatterUpdate",Xn="SearchSorted",Yn="Select",Qn="Selu",Zn="Slice",Jn="Sin",$n="Sinh",ea="Sign",ta="Sigmoid",na="Softplus",aa="Sqrt",ra="Sum",oa="SpaceToBatchND",sa="SplitV",ia="Softmax",ca="SparseFillEmptyRows",la="SparseReshape",ua="SparseSegmentMean",ha="SparseSegmentSum",da="SparseToDense",pa="SquaredDifference",fa="Square",ma="StaticRegexReplace",ga="StridedSlice",ya="StringNGrams",ba="StringSplit",xa="StringToHashBucketFast",va="Sub",wa="Tan",ka="Tanh",Sa="Tile",Ia="TopK",Ca="Transform",Na="Transpose",Ta="Unique",Ea="Unpack",Ra="UnsortedSegmentSum",Aa="ZerosLike",_a="Step",Fa="FromPixels",Oa="RotateWithOffset",Da="_FusedMatMul",Ma="FusedConv2D",za="FusedDepthwiseConv2D";function La(){ve().getBool("IS_TEST")||ve().getBool("PROD")||console.warn(...arguments)}function Pa(){ve().getBool("IS_TEST")||ve().getBool("PROD")||console.log(...arguments)}const Ba=Ie("kernelRegistry",(()=>new Map)),Wa=Ie("gradRegistry",(()=>new Map));function Ua(e,t){const n=Ka(e,t);return Ba.get(n)}function Va(e){return Wa.get(e)}function Ga(e){const t=Ba.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[o,s]=r,[i]=o.split("_");i===e&&n.push(s)}return n}function Ha(e){const{kernelName:t,backendName:n}=e,a=Ka(t,n);Ba.has(a)&&La("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),Ba.set(a,e)}function ja(e){const{kernelName:t}=e;Wa.has(t)&&ve().getBool("DEBUG")&&La("Overriding the gradient for '".concat(t,"'")),Wa.set(t,e)}function Ka(e,t){return"".concat(t,"_").concat(e)}function qa(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Xa=n(353);const Ya=n.n(Xa)()||Xa;function Qa(e){return Ya.fromString(e,!0,16)}const Za=Qa("c3a5c85c97cb3127"),Ja=Qa("b492b66fbe98f273"),$a=Qa("9ae16a3b2f90404f");function er(e){return e.xor(e.shru(47))}function tr(e,t,n){const a=e.slice(t,t+n);return Ya.fromBytes(Array.from(a),!0,!0)}function nr(e,t){return tr(e,t,8)}function ar(e,t){return tr(e,t,4)}function rr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function or(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Qa("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function sr(e,t,n,a){return function(e,t,n,a,r,o){r=r.add(e),o=rr(o.add(r).add(a),21);const s=r;return r=(r=r.add(t)).add(n),o=o.add(rr(r,44)),[r.add(a),o.add(s)]}(nr(e,t),nr(e,t+8),nr(e,t+16),nr(e,t+24),n,a)}function ir(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=Ya.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=$a.add(2*t),a=nr(e,0).add($a),r=nr(e,t-8);return or(rr(r,37).mul(n).add(a),rr(a,25).add(r).mul(n),n)}if(t>=4){const n=$a.add(2*t);return or(ar(e,0).shl(3).add(t),ar(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return er($a.mul(n).xor(Za.mul(a))).mul($a)}return $a}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=$a.add(2*t),a=nr(e,0).mul(Ja),r=nr(e,8),o=nr(e,t-8).mul(n),s=nr(e,t-16).mul($a);return or(rr(a.add(r),43).add(rr(o,30)).add(s),a.add(rr(r.add($a),18)).add(o),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=$a.add(2*t),a=nr(e,0).mul($a),r=nr(e,8),o=nr(e,t-8).mul(n),s=nr(e,t-16).mul($a),i=rr(a.add(r),43).add(rr(o,30)).add(s),c=or(i,a.add(rr(r.add($a),18)).add(o),n),l=nr(e,16).mul(n),u=nr(e,24),h=i.add(nr(e,t-32)).mul(n),d=c.add(nr(e,t-24)).mul(n);return or(rr(l.add(u),43).add(rr(h,30)).add(d),l.add(rr(u.add(a),18)).add(h),n)}(e,t);let a=n,r=n.mul(Ja).add(113),o=er(r.mul($a).add(113)).mul($a),s=[Ya.UZERO,Ya.UZERO],i=[Ya.UZERO,Ya.UZERO];a=a.mul($a).add(nr(e,0));let c=0;const l=64*(t-1>>6),u=l+(t-1&63)-63;do{a=rr(a.add(r).add(s[0]).add(nr(e,c+8)),37).mul(Ja),r=rr(r.add(s[1]).add(nr(e,c+48)),42).mul(Ja),a=a.xor(i[1]),r=r.add(s[0]).add(nr(e,c+40)),o=rr(o.add(i[0]),33).mul(Ja),s=sr(e,c,s[1].mul(Ja),a.add(i[0])),i=sr(e,c+32,o.add(i[1]),r.add(nr(e,c+16))),[o,a]=[a,o],c+=64}while(c!==l);const h=Ja.add(o.and(255).shl(1));return c=u,i[0]=i[0].add(t-1&63),s[0]=s[0].add(i[0]),i[0]=i[0].add(s[0]),a=rr(a.add(r).add(s[0]).add(nr(e,c+8)),37).mul(h),r=rr(r.add(s[1]).add(nr(e,c+48)),42).mul(h),a=a.xor(i[1].mul(9)),r=r.add(s[0].mul(9).add(nr(e,c+40))),o=rr(o.add(i[0]),33).mul(h),s=sr(e,c,s[1].mul(h),a.add(i[0])),i=sr(e,c+32,o.add(i[1]),r.add(nr(e,c+16))),[o,a]=[a,o],or(or(s[0],i[0],h).add(er(r).mul(Za)).add(o),or(s[1],i[1],h).add(a),h)}function cr(e,t){return"string"===t?hr(e):lr([e],t)}function lr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=fr(e)),ve().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function ur(){return ve().platform.now()}function hr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ve().platform.encode(e,t)}function dr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",ve().platform.decode(e,t)}function pr(e){return null!=ve().platform.isTypedArray?ve().platform.isTypedArray(e):qa(e)}function fr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||ge(e)||null==e||pr(e)&&n)t.push(e);else if(Array.isArray(e)||pr(e))for(let a=0;a<e.length;++a)fr(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)fr(e[r],t,n)}return t}class mr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new yr)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let o;const s=ur();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();o=Promise.resolve({kernelMs:ur()-s})}if(ve().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let i=0;i<a.length;i++){const t=a[i];t.data().then((n=>{gr(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:o}=e;n.forEach((e=>{Promise.all([e.data(),a,o]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function gr(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class yr{logKernelProfile(e,t,n,a,r,o){const s="number"===typeof a?K("".concat(a,"ms"),9):a.error,i=K(e,25),c=t.rank,l=t.size,u=K(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(d,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(s,"\t%c").concat(c,"D ").concat(u,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const br=20,xr=3,vr=7;function wr(e,t,n,a){const r=se(t),o=function(e,t,n,a){const r=U(t),o=a[a.length-1],s=new Array(o).fill(0),i=t.length,c="complex64"===n?Cr(e):e;if(i>1)for(let l=0;l<r/o;l++){const e=l*o;for(let t=0;t<o;t++)s[t]=Math.max(s[t],kr(c[e+t],0,n).length)}return s}(e,t,n,r),s=t.length,i=Ir(e,t,n,r,o),c=["Tensor"];return a&&(c.push("  dtype: ".concat(n)),c.push("  rank: ".concat(s)),c.push("  shape: [".concat(t,"]")),c.push("  values:")),c.push(i.map((e=>"    "+e)).join("\n")),c.join("\n")}function kr(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(vr))," + ")+"".concat(parseFloat(e[1].toFixed(vr)),"j"):te(e)?"'".concat(e,"'"):"bool"===n?Sr(e):parseFloat(e.toFixed(vr)).toString(),K(a,t)}function Sr(e){return 0===e?"false":"true"}function Ir(e,t,n,a,r){let o=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const s="complex64"===n?2:1,i=t[0],c=t.length;if(0===c){if("complex64"===n){return[kr(Cr(e)[0],0,n)]}return"bool"===n?[Sr(e[0])]:[e[0].toString()]}if(1===c){if(i>br){const t=xr*s;let a=Array.from(e.slice(0,t)),o=Array.from(e.slice((i-xr)*s,i*s));return"complex64"===n&&(a=Cr(a),o=Cr(o)),["["+a.map(((e,t)=>kr(e,r[t],n))).join(", ")+", ..., "+o.map(((e,t)=>kr(e,r[i-xr+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Cr(e):Array.from(e)).map(((e,t)=>kr(e,r[t],n))).join(", ")+"]"]}const l=t.slice(1),u=a.slice(1),h=a[0]*s,d=[];if(i>br){for(let t=0;t<xr;t++){const a=t*h,o=a+h;d.push(...Ir(e.slice(a,o),l,n,u,r,!1))}d.push("...");for(let t=i-xr;t<i;t++){const a=t*h,o=a+h;d.push(...Ir(e.slice(a,o),l,n,u,r,t===i-1))}}else for(let m=0;m<i;m++){const t=m*h,a=t+h;d.push(...Ir(e.slice(t,a),l,n,u,r,m===i-1))}const p=2===c?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=",\n";for(let m=2;m<c;m++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function Cr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Nr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=U(e),null!=n){const e=n.length;P(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||J(t,this.size),this.strides=se(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),P(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const o of t){if(o<0||o>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let o=0;o<t.length-1;++o)r+=this.strides[o]*t[o];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Tr().makeTensor(this.values,this.shape,this.dtype)}}let Tr=null,Er=null,Rr=null;class Ar{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=U(e),this.strides=se(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Er.buffer(this.shape,this.dtype,e)}bufferSync(){return Er.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ce(this.shape,e,"complex64"===this.dtype)}arraySync(){return ce(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Tr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>dr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Tr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Tr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>dr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Tr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Tr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Er.print(this,e)}clone(){return this.throwIfDisposed(),Er.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return wr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Er.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),Tr().makeVariable(this,e,t,n)}}function _r(){return Ie("Tensor",(()=>Ar))}Object.defineProperty(Ar,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),_r();class Fr extends Ar{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!G(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));Tr().disposeTensor(this),this.dataId=e.dataId,Tr().incRef(this,null)}dispose(){Tr().disposeVariable(this),this.isDisposedInternal=!0}}var Or,Dr,Mr,zr,Lr;Object.defineProperty(Fr,Symbol.hasInstance,{value:e=>e instanceof Ar&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Or||(Or={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Dr||(Dr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Mr||(Mr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(zr||(zr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Lr||(Lr={}));const Pr={float32:zr,int32:Dr,bool:Mr,complex64:Lr};function Br(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return Pr[e][t]}function Wr(e){return Br(e,"int32")}function Ur(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Vr(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Gr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Br(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Hr(e,t){return t.some((t=>t.id===e.id))}function jr(e){const t=[];return Kr(e,t,new Set),t}function Kr(e,t,n){if(null==e)return;if(e instanceof Ar)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const o in r){const e=r[o];n.has(e)||(n.add(e),Kr(e,t,n))}}function qr(e){return null!=e.kernelName}class Xr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Yr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Xr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(La("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new mr(this.backendInstance),!0}setupRegisteredKernels(){Ga(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Ga(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof _||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,La("Initialization of backend ".concat(e," failed")),La(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return La("Initialization of backend ".concat(e," failed")),La(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),o=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return Yr.nextTensorId++}nextVariableId(){return Yr.nextVariableId++}clone(e){const t=Zr.runKernel(Wt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Zr.runKernel(Xe,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=Ua(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-r-o;if(s>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(s," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,o=this.state.numTensors;let s,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=qr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(qr(e)){const{kernelName:t,inputs:r,attrs:o}=e;null==this.backendName&&this.backend;const c=Ua(t,this.backendName);P(null!=c,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),s=()=>{const e=this.backend.numDataIds();i=c.kernelFunc({inputs:r,attrs:o,backend:this.backend});const s=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const l=s.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};s=()=>{const e=this.backend.numDataIds();i=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:l,attrs:u}=e,h=qr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,(()=>s())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=s()})),a&&this.addTapeNode(c,l,t,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=Va(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let o;a.saveAllInputs?(P(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(t).map((e=>t[e]))):o=e.map((e=>t[e]));const s=n.filter(((e,t)=>r[t]));return o.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&te(e[0])&&(r=e.map((e=>hr(e))));const o=a.write(r,t,n),s=new Ar(t,n,o,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){const e=this.state.tensorInfo.get(o),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,o=new Ar(a,r,n,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Fr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*ee(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Fr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*ee(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,o){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},i=Va(e);null!=i&&(a=i.gradFunc),null!=a&&(s.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=he(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,o))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=jr(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(P(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));P(r instanceof Ar,(()=>"The result y returned by f() must be a tensor."));const o=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],o=n.inputs;for(const e in o){const s=o[e];let i=!1;for(let e=0;e<t.length;e++)if(a[s.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(o[t.outputs[e].id]){for(const e in n)o[n[e].id]=!0,s[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&s[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=ue(U(e),"float32");return Zr.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const o=t[r],s=[];if(o.outputs.forEach((t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)})),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));const i=o.gradient(s);for(const t in o.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const s=o.inputs[t];if(!G(r.shape,s.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(s.shape,"'"));if(null==e[s.id])e[s.id]=r;else{const t=e[s.id];e[s.id]=a(t,r),t.dispose()}}}}(e,o,(e=>this.tidy(e)),Jr);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return P(re(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let o;P(a.every((e=>e instanceof Ar)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};a.forEach(((e,t)=>{s[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(o=e(...a,n),P(o.value instanceof Ar,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),P(re(o.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),o.value),backwardsFunc:(e,t)=>{const n=o.gradFunc(e,t),r=Array.isArray(n)?n:[n];P(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),P(r.every((e=>e instanceof Ar)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return r.forEach(((e,t)=>{s[t]=()=>e})),s},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=ur(),n=await this.backend.time(e);return n.wallMs=ur()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Xr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Qr(){const e=Se();if(null==e._tfengine){const t=new be(e);e._tfengine=new Yr(t)}var t;return t=e._tfengine.ENV,ke=t,function(e){Tr=e}((()=>e._tfengine)),e._tfengine}Yr.nextTensorId=0,Yr.nextVariableId=0;const Zr=Qr();function Jr(e,t){const n={a:e,b:t};return Zr.runKernel(Ee,n)}let $r;function eo(e){if(void 0!==$r)return $r;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function to(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}const no=ve();function ao(e,t){let n=e;if(pr(e))return"string"===t?[]:[e.length];if(Ur(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Vr(e))return[e.buffer.size/(null==t?4:ee(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||pr(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&ve().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ro(e,a,[]),a}function ro(e,t,n){if(n=n||[],!Array.isArray(e)&&!pr(e))return void P(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));P(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),P(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)ro(e[r],a,n.concat(r))}function oo(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function so(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof _r())return oo(a,e.dtype,t,n),e;let r=ae(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),oo(a,r,t,n),null==e||!pr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const o=ao(e,r);pr(e)||Array.isArray(e)||(e=[e]);const s="string"!==r?lr(e,r):fr(e,[],!0);return Zr.makeTensor(s,o,r)}function io(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>so(e,"".concat(t,"[").concat(r,"]"),n,a)))}no.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),no.registerFlag("IS_BROWSER",(()=>to())),no.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),no.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),no.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),no.registerFlag("PROD",(()=>!1)),no.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>no.getBool("DEBUG"))),no.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),no.registerFlag("IS_TEST",(()=>!1)),no.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>no.getBool("DEBUG"))),no.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),no.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),no.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const co="__op";function lo(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=co;const r=function(){Zr.startScope(n);try{const e=a(...arguments);return ge(e)&&console.error("Cannot return a Promise inside of tidy."),Zr.endScope(e),e}catch(e){throw Zr.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const uo=lo({complex_:function(e,t){const n=so(e,"real","complex"),a=so(t,"imag","complex");B(n.shape,a.shape,"real and imag shapes, ".concat(n.shape," and ").concat(a.shape,", ")+"must match in call to tf.complex().");const r={real:n,imag:a};return Zr.runKernel(Ze,r)}});function ho(e,t,n,a){if(null==a)a=ae(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Vr(e)||Ur(e)){if("float32"!==a&&"int32"!==a)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(a,"."));return Zr.backend.createTensorFromGPUData(e,t||n,a)}if(!pr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){pe(t);const e=U(t),a=U(n);P(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==U(t.slice(r));P(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return pr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?lr(e,a):fr(e,[],!0),Zr.makeTensor(e,t,a)}function po(e,t,n){return ho(e,t,ao(e,n),n)}const fo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class mo{static join(e){return new mo(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>pr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let o=0;for(let s=n;s<this.shards.length;s++){const n=this.shards[s],a=e+o-n.start,i=o,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),o+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,o=t(e[r]);if(0===o)return r;o<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function go(){return Zr}function yo(){return Zr.memory()}function bo(e,t){return Zr.tidy(e,t)}function xo(e){jr(e).forEach((e=>e.dispose()))}function vo(e){return Zr.keep(e)}function wo(){return Zr.backendName}function ko(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Zr.registerBackend(e,t,n)}function So(){return Zr.backend}!function(e){Rr=e}((function(e){ve().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}));const Io=4;async function Co(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let o=0;o<r.length;++o){const s=r[o],i=Array.isArray(e)?e[o].tensor:e[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(s,"': ").concat(i.dtype));const c={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+Io*t.length,a=new Uint8Array(n);let r=0;for(let o=0;o<t.length;o++){const e=t[o],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=Io,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:Fo(await Promise.all(a)),specs:n}}function No(e,t){const n=new mo(e),a={};let r=0;for(const o of t){const e=To(o,((e,t)=>n.slice(r+e,r+t)));a[o.name]=Ro(o,n.slice(r,r+e)),r+=e}return a}function To(e,t){const n=U(e.shape);let a;if("quantization"in e){const t=e.quantization;a=fo[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Io+new Uint32Array(t(e,e+Io))[0];return e}a=fo[e.dtype]}return n*a}async function Eo(e,t){const n=U(e.shape);let a;if("quantization"in e){const t=e.quantization;a=fo[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=Io+new Uint32Array(await t(e,e+Io))[0];return e}a=fo[e.dtype]}return n*a}function Ro(e,t){const n=e.name,a=e.dtype,r=e.shape,o=U(r);let s,i=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error("Weight ".concat(e.name," with quantization ").concat(r.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==r.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(r.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==a)throw new Error("Weight ".concat(e.name," is quantized with ").concat(r.dtype," ")+"which only supports weights of type float32 not ".concat(a,"."))}const c=fo[r.dtype],l="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a)if("uint8"===r.dtype||"uint16"===r.dtype){s=new Float32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];s[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),o=new Uint32Array(r);for(let s=0;s<a.length;s++){const r=a[s],i=e[n[r>>10]+(1023&r)]+t[r>>10];o[s]=i}return new Float32Array(r)}}();s=e(l)}}else{if("int32"!==a)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a));if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error("Unsupported quantization type ".concat(r.dtype," ")+"for weight type int32.");s=new Int32Array(l.length);for(let e=0;e<l.length;e++){const t=l[e];s[e]=Math.round(t*r.scale+r.min)}}i+=o*c}else if("string"===a){const n=U(e.shape);s=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(i,i+Io))[0];i+=Io;const n=new Uint8Array(t.slice(i,i+e));s.push(n),i+=e}}else{const e=fo[a];if("float32"===a)s=new Float32Array(t);else if("int32"===a)s=new Int32Array(t);else{if("bool"!==a){if("complex64"===a){s=new Float32Array(t);const e=new Float32Array(s.length/2),n=new Float32Array(s.length/2);for(let t=0;t<e.length;t++)e[t]=s[2*t],n[t]=s[2*t+1];const a=po(e,r,"float32"),o=po(n,r,"float32"),i=uo(a,o);return a.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(a))}s=new Uint8Array(t)}i+=o*e}return po(s,r,a)}async function Ao(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const o=new Uint8Array(a.length+r.byteLength);o.set(a,0),o.set(new Uint8Array(r),a.length),a=o}return a.buffer}async function _o(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const o of t){const e=await Eo(o,(async(e,t)=>(r=await Ao(a,r,t),r.slice(e,t))));r=await Ao(a,r,e);const t=r.slice(0,e);r=r.slice(e);const s=Ro(o,t);if(n[o.name]=s,"webgpu"===wo()){const e=So();"uploadToGPU"in e&&U(s.shape)>=ve().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(s.dataId)}}return n}function Fo(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const Oo="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function Do(e){return Oo?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Mo(e){return mo.join(e)}function zo(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Lo(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Po(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function Bo(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),Po(e,n,a)}function Wo(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Do(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Do(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new mo(e.weightData).byteLength}}function Uo(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Vo{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Vo.instance&&(Vo.instance=new Vo),Vo.instance}static registerSaveRouter(e){Vo.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Vo.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Vo.getHandlers(e,"save")}static getLoadHandlers(e,t){return Vo.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?Vo.getInstance().loadRouters:Vo.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const Go=e=>Vo.registerSaveRouter(e),Ho=e=>Vo.registerLoadRouter(e),jo=e=>Vo.getSaveHandlers(e),Ko=(e,t)=>Vo.getLoadHandlers(e,t),qo="tensorflowjs",Xo="models_store",Yo="model_info_store";function Qo(){if(!ve().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Zo(e){const t=e.result;t.createObjectStore(Xo,{keyPath:"modelPath"}),t.createObjectStore(Yo,{keyPath:"modelPath"})}class Jo{constructor(e){if(this.indexedDB=Qo(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(qo,1);a.onupgradeneeded=()=>Zo(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(Xo,"readonly"),a=t.objectStore(Xo).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=mo.join(t.weightData);const a=Wo(t),s=r.transaction(Yo,"readwrite");let i,c,l=s.objectStore(Yo);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(o){return n(o)}i.onsuccess=()=>{c=r.transaction(Xo,"readwrite");const i=c.objectStore(Xo);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(o){return n(o)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=s.objectStore(Yo);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}Jo.URL_SCHEME="indexeddb://";const $o=e=>{return ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Jo.URL_SCHEME)?(t=e.slice(Jo.URL_SCHEME.length),new Jo(t)):null;var t};Vo.registerSaveRouter($o),Vo.registerLoadRouter($o);class es{constructor(){this.indexedDB=Qo()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qo,1);n.onupgradeneeded=()=>Zo(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(Yo,"readonly"),o=r.objectStore(Yo).getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(a.close(),t(o.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Jo.URL_SCHEME)?t.slice(Jo.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(qo,1);a.onupgradeneeded=()=>Zo(a),a.onsuccess=()=>{const r=a.result,o=r.transaction(Yo,"readwrite"),s=o.objectStore(Yo),i=s.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=s.delete(e),o=()=>{c=r.transaction(Xo,"readwrite");const a=c.objectStore(Xo).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=o,a.onerror=e=>(o(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}const ts="/",ns="tensorflowjs_models",as="info",rs="model_topology",os="weight_specs",ss="weight_data",is="model_metadata";function cs(e){return{info:[ns,e,as].join(ts),topology:[ns,e,rs].join(ts),weightSpecs:[ns,e,os].join(ts),weightData:[ns,e,ss].join(ts),modelMetadata:[ns,e,is].join(ts)}}function ls(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function us(e){const t=e.split(ts);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(ts)}class hs{constructor(e){if(!ve().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=cs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Wo(e),o=mo.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Oo)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(o));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw ls(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=function(e){if(Oo){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(o),t}}hs.URL_SCHEME="localstorage://";const ds=e=>{return ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hs.URL_SCHEME)?(t=e.slice(hs.URL_SCHEME.length),new hs(t)):null;var t};Vo.registerSaveRouter(ds),Vo.registerLoadRouter(ds);class ps{constructor(){P(ve().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),P("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ns+ts,n=ts+as;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[us(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=cs(e=(t=e).startsWith(hs.URL_SCHEME)?t.slice(hs.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return ls(n),a}}const fs="://";class ms{constructor(){this.managers={}}static getInstance(){return null==ms.instance&&(ms.instance=new ms),ms.instance}static registerManager(e,t){P(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(fs)&&(e=e.slice(0,e.indexOf(fs))),P(e.length>0,(()=>"scheme must not be an empty string."));const n=ms.getInstance();P(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=ms.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(ms.getInstance().managers)}}function gs(e){if(-1===e.indexOf(fs))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(ms.getSchemes().join(",")));return{scheme:e.split(fs)[0],path:e.split(fs)[1]}}async function ys(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];P(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=Vo.getLoadHandlers(e);P(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),P(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],o=Vo.getSaveHandlers(t);P(o.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),P(o.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const s=o[0],i=gs(e).scheme,c=gs(e).path,l=i===gs(e).scheme,u=await r.load();n&&l&&await ms.getManager(i).removeModel(c);const h=await s.save(u);return n&&!l&&await ms.getManager(i).removeModel(c),h.modelArtifactsInfo}async function bs(){const e=ms.getSchemes(),t={};for(const n of e){const e=await ms.getManager(n).listModels();for(const a in e){t[n+fs+a]=e[a]}}return t}async function xs(e){const t=gs(e);return ms.getManager(t.scheme).removeModel(t.path)}async function vs(e,t){return ys(e,t,!1)}async function ws(e,t){return ys(e,t,!0)}class ks{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ve().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return qa(e)}}if(ve().get("IS_BROWSER")){ve().setPlatform("browser",new ks);try{ms.registerManager(hs.URL_SCHEME,new ps)}catch(wJ){}try{ms.registerManager(Jo.URL_SCHEME,new es)}catch(wJ){}}const Ss=()=>n(817);let Is;class Cs{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ve().global.fetch?ve().global.fetch(e,t):(null==Is&&(Is=Ss()),Is(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}function Ns(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",pe(e),new Nr(e,t,n)}ve().get("IS_NODE")&&!ve().get("IS_BROWSER")&&ve().setPlatform("node",new Cs);const Ts=lo({cast_:function(e,t){const n=so(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return Zr.runKernel(Xe,a,r)}});const Es=lo({clone_:function(e){const t={x:so(e,"x","clone","string_or_numeric")};return Zr.runKernel(Wt,t)}});function Rs(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Qr();Er={buffer:Ns,cast:Ts,clone:Es,print:Rs};const As=lo({add_:function(e,t){let n=so(e,"a","add"),a=so(t,"b","add");[n,a]=Gr(n,a);const r={a:n,b:a};return Zr.runKernel(Ee,r)}});const _s=lo({floorDiv_:function(e,t){let n=so(e,"a","floorDiv"),a=so(t,"b","floorDiv");[n,a]=Gr(n,a);const r={a:n,b:a};return Zr.runKernel(Dt,r)}});const Fs=lo({div_:function(e,t){let n=so(e,"a","div"),a=so(t,"b","div");if([n,a]=Gr(n,a),"int32"===n.dtype&&"int32"===a.dtype)return _s(n,a);const r={a:n,b:a};return Zr.runKernel(wt,r,{})}});const Os=lo({mul_:function(e,t){let n=so(e,"a","mul"),a=so(t,"b","mul");[n,a]=Gr(n,a);const r={a:n,b:a};return Zr.runKernel(yn,r)}});const Ds=lo({sqrt_:function(e){const t={x:so(e,"x","sqrt","float32")};return Zr.runKernel(aa,t)}});const Ms=lo({square_:function(e){const t=so(e,"x","square");return Zr.runKernel("Square",{x:t},{})}});const zs=lo({zerosLike_:function(e){const t={x:so(e,"x","zerosLike")};return Zr.runKernel(Aa,t)}});function Ls(e){return Zr.customGrad(e)}function Ps(e,t){if((pr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&pr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ho(e,[],[],t)}const Bs=new Map,Ws=new Map;class Us{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Vs{constructor(){this.classNameMap={}}static getMap(){return null==Vs.instance&&(Vs.instance=new Vs),Vs.instance}static register(e){Vs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Gs(e,t,n){P(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),P("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),P(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Vs.register(e),Bs.set(a,e),Ws.set(e,a),e}class Hs extends Us{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return xo(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){P(re(e),(()=>"The f passed in variableGrads(f) must be a function")),P(null==t||Array.isArray(t)&&t.every((e=>e instanceof Fr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Zr.registeredVariables)t.push(Zr.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),P(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(r," variables is ")+"trainable."));const{value:o,grads:s}=Zr.gradients(e,t,null,!0);P(s.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),P(0===o.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(o.rank," tensor")));const i={};return t.forEach(((e,t)=>{null!=s[t]&&(i[e.name]=s[t])})),null!=a&&a.forEach((e=>i[e.name]=null)),{value:o,grads:i}}(e,t)}dispose(){null!=this.iterations_&&xo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ps(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Hs,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class js extends Hs{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Zr.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zr.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:bo((()=>zs(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:bo((()=>zs(a).variable(r)))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;bo((()=>{const e=As(Os(s,this.rho),Os(Ms(o),1-this.rho)),t=Os(Fs(Ds(As(i,this.epsilon)),Ds(As(s,this.epsilon))),o),n=As(Os(i,this.rho),Os(Ms(t),1-this.rho));s.assign(e),i.assign(n);const r=As(Os(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(xo(this.accumulatedGrads.map((e=>e.variable))),xo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Ks(e,t,n){pe(e);const a={shape:e,value:t,dtype:n=n||ae(t)};return Zr.runKernel(_t,{},a)}class qs extends Hs{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zr.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:bo((()=>Ks(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const o=this.accumulatedGrads[n].variable;bo((()=>{const e=As(o,Ms(r));o.assign(e);const t=As(Os(Fs(r,Ds(As(e,Zr.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&xo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Xs=lo({pow_:function(e,t){let n=so(e,"base","pow"),a=so(t,"exp","pow");[n,a]=Gr(n,a);const r={a:n,b:a};return Zr.runKernel(Tn,r)}});const Ys=lo({sub_:function(e,t){let n=so(e,"a","sub"),a=so(t,"b","sub");[n,a]=Gr(n,a);const r={a:n,b:a};return Zr.runKernel(va,r)}});class Qs extends Hs{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],bo((()=>{this.accBeta1=Ps(t).variable(),this.accBeta2=Ps(n).variable()})),null==a&&(this.epsilon=Zr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);bo((()=>{const n=Ys(1,this.accBeta1),a=Ys(1,this.accBeta2);t.forEach(((t,r)=>{const o=Zr.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:bo((()=>zs(o).variable(s)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:bo((()=>zs(o).variable(s)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=As(Os(c,this.beta1),Os(i,1-this.beta1)),h=As(Os(l,this.beta2),Os(Ms(i),1-this.beta2)),d=Fs(u,n),p=Fs(h,a);c.assign(u),l.assign(h);const f=As(Os(Fs(d,As(Ds(p),this.epsilon)),-this.learningRate),o);o.assign(f)})),this.accBeta1.assign(Os(this.accBeta1,this.beta1)),this.accBeta2.assign(Os(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&xo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&xo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),bo((()=>{this.accBeta1.assign(Xs(this.beta1,this.iterations_+1)),this.accBeta2.assign(Xs(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Zs=lo({abs_:function(e){const t=so(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Zr.runKernel(Je,e)}{const e={x:t};return Zr.runKernel(Ce,e)}}});function Js(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const o=n-1-r,s=e[o]||1;(t[t.length-1-r]||1)>1&&1===s&&a.unshift(o)}return a}function $s(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],o=t.length-a-1,s=t[o];(null==r||1===r&&s>1)&&n.unshift(o)}return n}function ei(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let o=e[e.length-r-1];null==o&&(o=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===o)a[n-r-1]=s;else if(1===s)a[n-r-1]=o;else{if(o!==s){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=o}}return a}const ti=lo({maximum_:function(e,t){let n=so(e,"a","maximum"),a=so(t,"b","maximum");[n,a]=Gr(n,a),"bool"===n.dtype&&(n=Ts(n,"int32"),a=Ts(a,"int32")),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(rn,r)}});class ni extends Hs{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],bo((()=>{this.iteration=Ps(0).variable(),this.accBeta1=Ps(t).variable()})),null==a&&(this.epsilon=Zr.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);bo((()=>{const n=Ys(1,this.accBeta1),a=Fs(-this.learningRate,As(Os(this.iteration,this.decay),1));t.forEach(((t,r)=>{const o=Zr.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:zs(o).variable(s)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:zs(o).variable(s)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=As(Os(c,this.beta1),Os(i,1-this.beta1)),h=Os(l,this.beta2),d=Zs(i),p=ti(h,d);c.assign(u),l.assign(p);const f=As(Os(Fs(a,n),Fs(u,As(p,this.epsilon))),o);o.assign(f)})),this.iteration.assign(As(this.iteration,1)),this.accBeta1.assign(Os(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&xo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&xo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class ai extends Hs{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=Zr.registeredVariables[t];bo((()=>{const e=As(Os(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=vo(Ps(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class ri extends ai{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ps(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zr.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:bo((()=>zs(a).variable(e)))}}const r=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&bo((()=>{let e;const t=As(Os(this.m,r),o);e=this.useNesterov?As(Os(this.c,As(o,Os(t,this.m))),a):As(Os(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&xo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class oi extends Hs{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Zr.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Zr.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:bo((()=>zs(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:bo((()=>zs(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:bo((()=>zs(a).variable(r)))});const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const s=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;bo((()=>{const e=As(Os(s,this.decay),Os(Ms(o),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=As(Os(t,this.decay),Os(o,1-this.decay)),c=Fs(Os(o,this.learningRate),Ds(Ys(e,As(Ms(r),this.epsilon)))),l=As(Os(i,this.momentum),c);s.assign(e),t.assign(r),i.assign(l);const u=Ys(a,l);a.assign(u)}else{const e=As(Os(s,this.decay),Os(Ms(o),1-this.decay)),t=As(Os(i,this.momentum),Fs(Os(o,this.learningRate),Ds(As(e,this.epsilon))));s.assign(e),i.assign(t);const n=Ys(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&xo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&xo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&xo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const si=[js,qs,Qs,ni,ri,oi,ai];function ii(e){return new Promise((e=>setTimeout(e))).then(e)}class ci{constructor(e){if(!ve().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ci.URL_SCHEME)&&(e=e.slice(ci.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=mo.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Lo(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await ii((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await ii((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Wo(e)}}}}ci.URL_SCHEME="downloads://";class li{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const o=Bo(a,(e=>this.loadWeights(e)));e(o)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const o of e)t.push(...o.weights),n.push(...o.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>zo(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=zo(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function ui(e){return new li(e)}function hi(e,t,n,a){!function(e){P(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){P(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),P(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),P(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((o=>(o.then((o=>{const s=n+ ++r/e.length*(a-n);return t(s),o})),o))))}async function di(e,t){null==t&&(t={});const n=null==t.fetchFunc?ve().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await hi(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await hi(r,t.onProgress,.5,1)}async function pi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return fi((e=>di(e,{requestInit:a})))(e,t,n)}function fi(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),o={},s=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=fo[c]*U(e.shape),u=()=>{r[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),s[n]=!0)})):u(),i.push(e.name),n+=l}))})),!s.every((e=>e))){const e=a.filter(((e,t)=>!s[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),h={};let d=0;return c.forEach((e=>{const n=t[e].paths.length,a=new mo(u.slice(d,d+n));o[e].forEach((e=>{const t=No(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)h[n]=t[n]})),d+=n})),h}}Vo.registerSaveRouter((e=>ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ci.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new ci(e)}(e.slice(ci.URL_SCHEME.length)):null));class mi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(P("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ve().platform.fetch,P(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&P(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Lo(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=mo.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Wo(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return Bo(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Uo(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?ve().platform.fetch:t.fetchFunc;let r,o=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var s;o<e.length;){if(!r){const n=(await a(e[o],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);o++,r=void 0,null===(s=t.onProgress)||void 0===s||s.call(t,o/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,o=[],s=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):o.push(r+e+a);return this.weightUrlConverter&&o.push(...await Promise.all(s)),o}async loadWeights(e){const t=await this.getWeightUrls(e);return[Uo(e),await di(t,this.loadOptions)]}}function gi(e){return null!=e.match(mi.URL_SCHEME_REGEX)}mi.URL_SCHEME_REGEX=/^https?:\/\//;const yi=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>gi(e))):gi(e),n)return bi(e,t)}return null};function bi(e,t){return new mi(e,t)}function xi(e,t){return bi(e,t)}Vo.registerSaveRouter(yi),Vo.registerLoadRouter(yi);class vi{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class wi{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class ki{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Si(e,t,n,a){return new ki(Ii(...arguments))}function Ii(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new vi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vi({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new vi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function Ci(e){return new wi(e)}function Ni(e){return new wi(e)}function Ti(e,t,n){if(W(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=ao(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ho(e,t,a,n)}let Ei,Ri=!1;function Ai(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,o=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=Ua(Fa,Zr.backendName)){const n={pixels:e},a={numChannels:t};return Zr.runKernel(Fa,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,h;if(s)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(o||r||i){if(null==Ei)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ei=new OffscreenCanvas(1,1).getContext("2d")}else Ei=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ei.canvas.width=c,Ei.canvas.height=l,Ei.drawImage(e,0,0,c,l),u=Ei.getImageData(0,0,c,l).data}if(4===t)h=new Int32Array(u);else{const e=c*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=u[4*n+e]}return Ti(h,[l,c,t],"int32")}function _i(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function Fi(e,t){let n=so(e,"img","toPixels");if(!(e instanceof Ar)){const e=n;n=Ts(e,"int32"),e.dispose()}_i(n);const[a,r]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2],s=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let l=0;l<a*r;++l){const e=[0,0,0,255];for(let a=0;a<o;a++){const t=s[l*o+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===o?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!Ri){null!=Ua(vt,Zr.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Ri=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}const Oi=lo({fromPixels_:Ai}),Di=-2,Mi=-1;function zi(e,t,n){const a=e.shape.length;P(a===t.length,(()=>"Error in slice".concat(a,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(a,")."))),P(a===n.length,(()=>"Error in slice".concat(a,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(a,").")));for(let r=0;r<a;++r)P(t[r]+n[r]<=e.shape[r],(()=>"Error in slice".concat(a,"D: begin[").concat(r,"] + size[").concat(r,"] ")+"(".concat(t[r]+n[r],") would overflow input.shape[").concat(r,"] (").concat(e.shape[r],")")))}function Li(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Pi(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Bi(e,t,n,a){const r=[...e];for(let o=r.length;o<a.length;o++)r.push(1);for(let o=0;o<n;o++)0===o?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Wi(e,t,n){return n<=e?n:n-(t-1)}function Ui(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Vi(e,t,n,a,r,o,s,i,c){const l=e.length;let u=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;u=Gi(s,c,l,a,e),h=Hi(i,c,l,r,e),d=Bi(o,c,l,e)}else for(let p=0;p<l;p++)u[p]=Ki(s,a,o,e,p,c),h[p]=qi(i,r,o,e,p,c),d[p]=ji(o,p,c);return{begin:u,end:h,strides:d}}function Gi(e,t,n,a,r){const o=[...r],s=Ui(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const r=Wi(t,n,i);let s=a[r];e&1<<r&&(s=0),o[i]=s}return o}function Hi(e,t,n,a,r){const o=[...r],s=Ui(n,t);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const r=Wi(t,n,i);let s=a[r];e&1<<r&&(s=Number.MAX_SAFE_INTEGER),o[i]=s}for(let i=0;i<o.length;i++){const e=r[i];o[i]<0&&(o[i]+=e),o[i]=D(0,o[i],r[i])}return o}function ji(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Ki(e,t,n,a,r,o){let s=t[r];const i=n[r]||1;(e&1<<r||o&1<<r||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[r];return s<0&&(s+=c),s=D(0,s,c-1),s}function qi(e,t,n,a,r,o){let s=t[r];const i=n[r]||1;(e&1<<r||o&1<<r||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[r];return s<0&&(s+=c),s=i>0?D(0,s,c):D(-1,s,c-1),s}function Xi(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Yi(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Qi(e,t,n){let a;const r=e.shape.length;let o;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{P(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(P(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-a[n]))),[a,o]}function Zi(e,t,n,a,r,o,s,i,c){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=s&&0!==(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:o,ellipsisMask:s,newAxisMask:i,shrinkAxisMask:c};for(let b=0;b<h.dims;b++)u&&0!==(1<<b&i)&&h.numAddAxisAfterEllipsis++,1<<b&s&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(Di),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(Mi),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,d);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===d.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const t=!!(d.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[d.beginMask&1<<b,d.endMask&1<<b],r=[d.strides[b]>0?0:-1,d.strides[b]>0?n:n-1];if(t&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[b];const o=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(t){const e=d.begin[b]<0?n+d.begin[b]:d.begin[b];if(d.begin[b]=e,d.end[b]=d.begin[b]+1,e<0||e>=n)throw Error("slice index ".concat(d.begin[b]," of dimension ").concat(b," out of bounds."))}else d.begin[b]=Ji(d.begin[b],0,d.strides[b],n,a,r),d.end[b]=Ji(d.end[b],1,d.strides[b],n,a,r);const e=1===d.strides[b]&&0===d.begin[b]&&d.end[b]===n;p=p&&e,f=f&&(0===b&&1===d.strides[b]||e)}else p=p&&1===d.strides[b]&&o,f=f&&(0===b&&1===d.strides[b]||o);let s,i=!1;if(d.beginValid&&d.endValid?(s=d.end[b]-d.begin[b],i=!0):t?(s=1,i=!0):o&&n>=0&&(s=d.strides[b]<0?-n:n,i=!0),i){let e;e=0===s||s<0!==d.strides[b]<0?0:Math.trunc(s/d.strides[b])+(s%d.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const e=d.finalShapeGatherIndices[b];e>=0?y.push(g[e]):e===Di&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Di)),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function Ji(e,t,n,a,r,o){if(r[t])return n>0?o[t]:o[t+1&1];{const t=e<0?a+e:e;return t<o[0]?o[0]:t>o[1]?o[1]:t}}const $i=lo({acos_:function(e){const t={x:so(e,"x","acos")};return Zr.runKernel(Ne,t)}});const ec=lo({acosh_:function(e){const t={x:so(e,"x","acosh")};return Zr.runKernel(Te,t)}});const tc=lo({addN_:function(e){P(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),P(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>so(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!G(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return Zr.runKernel(Re,a)}});const nc=lo({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:so(e,"x","all","bool")},r={axis:t,keepDims:n};return Zr.runKernel(Ae,a,r)}});const ac=lo({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:so(e,"x","any","bool")},r={axis:t,keepDims:n};return Zr.runKernel(_e,a,r)}});const rc=lo({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:so(e,"x","argMax")},a={axis:t};return Zr.runKernel(Fe,n,a)}});const oc=lo({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:so(e,"x","argMin")},a={axis:t};return Zr.runKernel(Oe,n,a)}});const sc=lo({asin_:function(e){const t={x:so(e,"x","asin")};return Zr.runKernel(De,t)}});const ic=lo({asinh_:function(e){const t={x:so(e,"x","asinh")};return Zr.runKernel(Me,t)}});const cc=lo({atan_:function(e){const t={x:so(e,"x","atan")};return Zr.runKernel(ze,t)}});const lc=lo({atan2_:function(e,t){let n=so(e,"a","atan2"),a=so(t,"b","atan2");[n,a]=Gr(n,a);const r={a:n,b:a};return Zr.runKernel(Pe,r)}});const uc=lo({atanh_:function(e){const t={x:so(e,"x","atanh")};return Zr.runKernel(Le,t)}});function hc(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5?arguments[5]:void 0;return fc(e,[...t,e[3]],n,o,a,null,null,Ic(r))}function dc(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[i,c]=yc(t);let l;if("channelsLast"===s)l=[i,c,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));l=[i,c,e[1],e[1]]}return fc(e,l,n,a,r,o,!1,s)}function pc(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,c,l]=bc(t);let u,h;if("NDHWC"===s)h="channelsLast",u=[i,c,l,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));h="channelsFirst",u=[i,c,l,e[1],e[1]]}return mc(e,u,n,a,r,!1,h,o)}function fc(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,u,h]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,u,h]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,h,l,u]=e}const[d,p,,f]=t,[m,g]=yc(n),[y,b]=yc(a),x=xc(d,y),v=xc(p,b),{padInfo:w,outHeight:k,outWidth:S}=function(e,t,n,a,r,o,s,i,c){let l,u,h;if("number"===typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=gc(e,t,n));const o=e[0],s=e[1],i=vc((o-t+2*a)/n+1,r),c=vc((s-t+2*a)/n+1,r);return[i,c]}([t,n],o,a,e,i);u=r[0],h=r[1]}else if("same"===e){u=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(u-1)*a+o-t),i=Math.max(0,(h-1)*r+s-n),c=Math.floor(e/2),d=e-c,p=Math.floor(i/2);l={top:c,bottom:d,left:p,right:i-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((t-o+1)/a),h=Math.ceil((n-s+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const d="channelsLast"===c?e[1][0]:e[2][0],p="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],m="channelsLast"===c?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},u=vc((t-o+d+p)/a+1,i),h=vc((n-s+f+m)/r+1,i)}}return{padInfo:l,outHeight:u,outWidth:h}}(r,l,u,m,g,x,v,o,i),I=s?f*h:f;let C;return"channelsFirst"===i?C=[c,I,k,S]:"channelsLast"===i&&(C=[c,k,S,I]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:u,inChannels:h,outHeight:k,outWidth:S,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:C,filterShape:t}}function mc(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[c,l,u,h,d]=e;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));[c,d,l,u,h]=e}const[p,f,m,,g]=t,[y,b,x]=bc(n),[v,w,k]=bc(a),S=xc(p,v),I=xc(f,w),C=xc(m,k),{padInfo:N,outDepth:T,outHeight:E,outWidth:R}=function(e,t,n,a,r,o,s,i,c,l,u){let h,d,p,f;"valid"===e&&(e=0);if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,a,r,o){null==r&&(r=gc(e,t[0],a[0]));const s=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(s[i]=vc((e[i]-t[i]+2*r)/a[i]+1,o));return s}([t,n,a,1],[i,c,l],1,[r,o,s],e,u);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{d=Math.ceil(t/r),p=Math.ceil(n/o),f=Math.ceil(a/s);const e=(d-1)*r+i-t,u=(p-1)*o+c-n,m=(f-1)*s+l-a,g=Math.floor(e/2),y=e-g,b=Math.floor(u/2),x=u-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,l,u,h,y,b,x,S,I,C,i),A=o?g*d:g;let _;return"channelsFirst"===s?_=[c,A,T,E,R]:"channelsLast"===s&&(_=[c,T,E,R,A]),{batchSize:c,dataFormat:s,inDepth:l,inHeight:u,inWidth:h,inChannels:d,outDepth:T,outHeight:E,outWidth:R,outChannels:A,padInfo:N,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:S,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function gc(e,t,n){const a=xc(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function yc(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function bc(e){return"number"===typeof e?[e,e,e]:e}function xc(e,t){return t<=1?e:e+(e-1)*(t-1)}function vc(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function wc(e){const[t,n,a]=yc(e);return 1===t&&1===n&&1===a}function kc(e,t){return wc(e)||wc(t)}function Sc(e){return yc(e).every((e=>e>0))}function Ic(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function Cc(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)P(H(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{P(H(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}const Nc=lo({reshape_:function(e,t){const n={x:so(e,"x","reshape","string_or_numeric")},a={shape:t};return Zr.runKernel(Ln,n,a)}});const Tc=lo({avgPool_:function(e,t,n,a,r){const o=so(e,"x","avgPool","float32");P(kc(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let s=o,i=!1;3===o.rank&&(i=!0,s=Nc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(4===s.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(s.rank,"."))),Cc("avgPool",a,r);const c={x:s},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let u=Zr.runKernel(Be,c,l);return u=Ts(u,o.dtype),i?Nc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Ec=lo({avgPool3d_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=so(e,"x","avgPool3d","float32");let i=s,c=!1;4===s.rank&&(c=!0,i=Nc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),P(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),P("NDHWC"===o,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),P("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),Cc("avgPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:o};let h=Zr.runKernel(Ue,l,u);return h=Ts(h,i.dtype),c?Nc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const Rc=lo({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;P(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=io(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return Es(n[0]);const a=n,r={axis:t};return Zr.runKernel($e,a,r)}});const Ac=lo({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=so(e,"a","matMul"),o=so(t,"b","matMul");[r,o]=Gr(r,o);const s={a:r,b:o},i={transposeA:n,transposeB:a};return Zr.runKernel(Ge,s,i)}});const _c=lo({sigmoid_:function(e){const t={x:so(e,"x","sigmoid","float32")};return Zr.runKernel(ta,t)}});const Fc=lo({slice_:function(e,t,n){const a=so(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},o={begin:t,size:n};return Zr.runKernel(Zn,r,o)}});const Oc=lo({tanh_:function(e){const t={x:so(e,"x","tanh","float32")};return Zr.runKernel(ka,t)}});const Dc=lo({basicLSTMCell_:function(e,t,n,a,r,o){const s=so(e,"forgetBias","basicLSTMCell"),i=so(t,"lstmKernel","basicLSTMCell"),c=so(n,"lstmBias","basicLSTMCell"),l=so(a,"data","basicLSTMCell"),u=so(r,"c","basicLSTMCell"),h=so(o,"h","basicLSTMCell"),d=Rc([l,h],1),p=Ac(d,i),f=As(p,c),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Fc(f,[0,0],y),x=Fc(f,[0,g],y),v=Fc(f,[0,2*g],y),w=Fc(f,[0,3*g],y),k=As(Os(_c(b),Oc(x)),Os(u,_c(As(s,v))));return[k,Os(Oc(k),_c(w))]}});const Mc=lo({batchToSpaceND_:function(e,t,n){const a=so(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));P(a.rank>=1+t.length,(()=>"input rank is ".concat(a.rank," but should be > than blockShape.length ").concat(t.length))),P(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),P(a.shape[0]%r===0,(()=>"input tensor batch is ".concat(a.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(r)));const o={x:a},s={blockShape:t,crops:n};return Zr.runKernel(He,o,s)}});const zc=lo({batchNorm_:function(e,t,n,a,r,o){null==o&&(o=.001);const s=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),c=so(n,"variance","batchNorm");let l,u;null!=r&&(l=so(r,"scale","batchNorm")),null!=a&&(u=so(a,"offset","batchNorm")),P(i.rank===c.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),P(null==u||i.rank===u.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),P(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Nc(e,[1,1,1,e.size]):2===e.rank?Nc(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Nc(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),scale:l,offset:u,mean:i,variance:c},d={varianceEpsilon:o},p=Zr.runKernel(Mt,h,d);return Nc(p,s.shape)}});const Lc=lo({batchNorm2d_:function(e,t,n,a,r,o){const s=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),c=so(n,"variance","batchNorm");let l,u;return null!=r&&(l=so(r,"scale","batchNorm")),null!=a&&(u=so(a,"offset","batchNorm")),P(2===s.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(s.rank,"."))),P(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),P(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&P(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&P(2===u.rank||1===u.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,"."))),zc(s,i,c,u,l,o)}});const Pc=lo({batchNorm3d_:function(e,t,n,a,r,o){const s=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),c=so(n,"variance","batchNorm");let l,u;return null!=r&&(l=so(r,"scale","batchNorm")),null!=a&&(u=so(a,"offset","batchNorm")),P(3===s.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(s.rank,"."))),P(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),P(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&P(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&P(3===u.rank||1===u.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,"."))),zc(s,i,c,u,l,o)}});const Bc=lo({batchNorm4d_:function(e,t,n,a,r,o){const s=so(e,"x","batchNorm"),i=so(t,"mean","batchNorm"),c=so(n,"variance","batchNorm");let l,u;return null!=r&&(l=so(r,"scale","batchNorm")),null!=a&&(u=so(a,"offset","batchNorm")),P(4===s.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(s.rank,"."))),P(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),P(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&P(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=u&&P(4===u.rank||1===u.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,"."))),zc(s,i,c,u,l,o)}});const Wc=lo({bincount_:function(e,t,n){const a=so(e,"x","bincount"),r=so(t,"weights","bincount");P("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),P(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),P(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const o={x:a,weights:r},s={size:n};return Zr.runKernel(je,o,s)}});const Uc=lo({bitwiseAnd_:function(e,t){const n=so(e,"x","bitwiseAnd"),a=so(t,"y","bitwiseAnd");if(!G(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return Zr.runKernel(Ke,r)}});const Vc=lo({broadcastArgs_:function(e,t){const n=so(e,"s0","broadcastArgs","int32"),a=so(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return Zr.runKernel(qe,r)}});const Gc=lo({broadcastTo_:function(e,t){let n=so(e,"broadcastTo","x");const a=n.shape;if(pe(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Nc(n,e)}const r=n.shape,o=Array.from(t);for(let c=t.length-1;c>=0;c--)if(r[c]===t[c])o[c]=1;else if(1!==n.shape[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(t,"]."));if(0===o.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Es(n);const s={x:n},i={reps:o};return Zr.runKernel(Sa,s,i)}});const Hc=lo({ceil_:function(e){const t={x:so(e,"x","ceil","float32")};return Zr.runKernel(Ye,t)}});const jc=lo({clipByValue_:function(e,t,n){const a=so(e,"x","clipByValue");if(P(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return Ks(a.shape,t,a.dtype);const r={x:a},o={clipValueMin:t,clipValueMax:n};return Zr.runKernel(Qe,r,o)}});const Kc=lo({concat1d_:function(e){return Rc(e,0)}});const qc=lo({concat2d_:function(e,t){return Rc(e,t)}});const Xc=lo({concat3d_:function(e,t){return Rc(e,t)}});const Yc=lo({concat4d_:function(e,t){return Rc(e,t)}});const Qc=lo({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0;const i=so(e,"x","conv2d","float32"),c=so(t,"filter","conv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=Nc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(4===l.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(l.rank,"."))),P(4===c.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(c.rank,"."))),Cc("conv2d",a,s);const h="NHWC"===r?l.shape[3]:l.shape[1];P(h===c.shape[2],(()=>"Error in conv2d: depth of input (".concat(h,") must match ")+"input depth for filter ".concat(c.shape[2],"."))),P(kc(n,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),P(Sc(o),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),P(Sc(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:o,dimRoundingMode:s},f=Zr.runKernel(et,d,p);return u?Nc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const Zc=lo({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6?arguments[6]:void 0;const i=so(e,"x","conv1d"),c=so(t,"filter","conv1d");let l=i,u=!1;2===i.rank&&(u=!0,l=Nc(i,[1,i.shape[0],i.shape[1]])),P(3===l.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(l.rank,"."))),P(3===c.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(c.rank,"."))),Cc("conv1d",a,s),P(l.shape[2]===c.shape[1],(()=>"Error in conv1d: depth of input (".concat(l.shape[2],") must match ")+"input depth for filter ".concat(c.shape[1],"."))),P(kc(n,o),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(o,"'"))),P(Sc(o),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),P(Sc(n),(()=>"Error in conv1D: Stride should be larger than 0.")),P("NWC"===r,(()=>"Error in conv1d: got dataFormat of ".concat(r," but only NWC is currently supported.")));const h=Nc(c,[1,c.shape[0],c.shape[1],c.shape[2]]),d=Nc(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Qc(d,h,[1,n],a,"NHWC",[1,o],s);return Nc(p,u?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});const Jc=lo({conv2DBackpropInput_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",s=arguments.length>6?arguments[6]:void 0;P(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let i=e,c=t,l=!1;3===t.rank&&(l=!0,c=Nc(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),P(4===i.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(i.length,"."))),P(4===c.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(c.rank))),P(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const u="NHWC"===o?i[3]:i[1],h="NHWC"===o?c.shape[3]:c.shape[1];P(u===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(u,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),P(h===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),Cc("conv2dDerInput",r,s);const d={dy:c,filter:n},p={strides:a,pad:r,dataFormat:o,dimRoundingMode:s,inputShape:i},f=Zr.runKernel(nt,d,p);return l?Nc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const $c=lo({conv2dTranspose_:function(e,t,n,a,r,o){const s=so(e,"x","conv2dTranspose"),i=so(t,"filter","conv2dTranspose");return Jc(n,s,i,a,r,"NHWC",o)}});const el=lo({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const s=so(e,"x","conv3d"),i=so(t,"filter","conv3d");let c=s,l=!1;4===s.rank&&(l=!0,c=Nc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),P(5===c.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(c.rank,"."))),P(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),P(c.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(c.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),P(kc(n,o),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(o,"'"))),P("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),P(Sc(o),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),P(Sc(n),(()=>"Error in conv3D: Strides should be larger than 0."));const u={x:c,filter:i},h={strides:n,pad:a,dataFormat:r,dilations:o},d=Zr.runKernel(at,u,h);return l?Nc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const tl=lo({conv3DBackpropInput_:function(e,t,n,a,r){P(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let o=e,s=t,i=!1;4===t.rank&&(i=!0,s=Nc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const c=o[4],l=s.shape[4];P(5===o.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(o.length,"."))),P(5===s.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(s.rank))),P(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),P(c===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(c,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),P(l===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(l,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const u={dy:s,filter:n},h={pad:r,strides:a,inputShape:o},d=Zr.runKernel(ot,u,h);return i?Nc(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const nl=lo({conv3dTranspose_:function(e,t,n,a,r){const o=so(e,"x","conv3dTranspose"),s=so(t,"filter","conv3dTranspose");return tl(n,o,s,a,r)}});const al=lo({cos_:function(e){const t={x:so(e,"x","cos","float32")};return Zr.runKernel(st,t)}});const rl=lo({cosh_:function(e){const t={x:so(e,"x","cosh","float32")};return Zr.runKernel(it,t)}});const ol=lo({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:so(e,"x","cumprod")},o={axis:t,exclusive:n,reverse:a};return Zr.runKernel(ct,r,o)}});const sl=lo({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={x:so(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:a};return Zr.runKernel(lt,r,o)}});const il=lo({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=so(e,"x","denseBincount"),o=so(t,"weights","denseBincount");P("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),P(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),P(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),P(o.size===r.size||0===o.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(o.shape,".")));const s={x:r,weights:o},i={size:n,binaryOutput:a};return Zr.runKernel(ht,s,i)}});const cl=lo({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const a=so(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],o="NHWC"===n?a.shape[2]:a.shape[3],s="NHWC"===n?a.shape[3]:a.shape[1];P(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),P(r*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(r," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(a.shape))),P(o*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(o," and ").concat(t," for depthToSpace with input shape\n        ").concat(a.shape))),P(s%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(s," for depthToSpace with input shape ").concat(a.shape)));const i={x:a},c={blockSize:t,dataFormat:n};return Zr.runKernel(dt,i,c)}});const ll=lo({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0;const i=so(e,"x","depthwiseConv2d","float32"),c=so(t,"filter","depthwiseConv2d","float32");let l=i,u=!1;3===i.rank&&(u=!0,l=Nc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(4===l.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(l.rank,"."))),P(4===c.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(c.rank,".")));const h="NHWC"===r?l.shape[3]:l.shape[1];P(h===c.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(h,") must match the inChannels dimension in ")+"filter ".concat(c.shape[2],"."))),Cc("depthwiseConv2d",a,s);const d={x:l,filter:c},p={strides:n,pad:a,dataFormat:r,dilations:o,dimRoundingMode:s},f=Zr.runKernel(pt,d,p);return u?Nc(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const ul=lo({diag_:function(e){const t={x:so(e,"x","diag")};return Zr.runKernel(gt,t)}});const hl=lo({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const s=so(e,"x","dilation2d"),i=so(t,"filter","dilation2d");P(3===s.rank||4===s.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(s.rank,"."))),P(3===i.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(i.rank,"."))),P("NHWC"===o,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(o)));let c=s,l=!1;3===s.rank&&(c=Nc(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=!0),P(c.shape[3]===i.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(c.shape[3]," vs ").concat(i.shape[2])));const u={x:c,filter:i},h={strides:n,pad:a,dilations:r},d=Zr.runKernel(yt,u,h);return l?Nc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const dl=lo({equal_:function(e,t){let n=so(e,"a","equal","string_or_numeric"),a=so(t,"b","equal","string_or_numeric");[n,a]=Gr(n,a),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(Nt,r)}});const pl=lo({where_:function(e,t,n){const a=so(t,"a","where"),r=so(n,"b","where"),o=so(e,"condition","where","bool"),s=ei(ei(o.shape,a.shape),r.shape),i={condition:Gc(o,s),t:Gc(a,s),e:Gc(r,s)};return Zr.runKernel(Yn,i)}});const fl=lo({divNoNan_:function(e,t){let n=so(e,"a","div"),a=so(t,"b","div");[n,a]=Gr(n,a);const r=Fs(n,a),o=zs(r),s=dl(a,o);return pl(s,o,r)}});const ml=lo({dot_:function(e,t){const n=so(e,"t1","dot"),a=so(t,"t2","dot");P((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=1===n.rank?n.size:n.shape[1],o=1===a.rank?a.size:a.shape[0];if(P(r===o,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(r," and ").concat(o,"."))),1===n.rank&&1===a.rank){const e=Nc(n,[1,-1]),t=Nc(a,[-1,1]),r=Ac(e,t);return Nc(r,[])}if(1===n.rank&&2===a.rank){const e=Nc(n,[1,-1]),t=Nc(a,[a.shape[0],a.shape[1]]),r=Ac(e,t);return Nc(r,[r.size])}if(2===n.rank&&1===a.rank){const e=Nc(a,[-1,1]),t=Ac(n,e);return Nc(t,[t.size])}{const e=Nc(a,[a.shape[0],a.shape[1]]);return Ac(n,e)}}});const gl=lo({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>so(e,"tensors".concat(t),"einsum"))),o={equation:e};return Zr.runKernel(kt,r,o)}});const yl=lo({elu_:function(e){const t={x:so(e,"x","elu","float32")};return Zr.runKernel(St,t)}});const bl=lo({ensureShape_:function(e,t){const n=so(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});const xl=lo({erf_:function(e){let t=so(e,"x","erf");P("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ts(t,"float32"));const n={x:t};return Zr.runKernel(Ct,n)}});function vl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function wl(e,t,n){const a=e.length+t.length,r=[];let o=0,s=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[o++]):r.push(t[s++]);return r}function kl(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Sl(e,t){return wl(e,t.map((e=>1)),t)}function Il(e,t,n){P(vl(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function Cl(e,t){if(vl(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function Nl(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Tl(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}const El=lo({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:so(e,"x","max")},r={reductionIndices:t,keepDims:n};return Zr.runKernel(an,a,r)}});const Rl=lo({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:so(e,"x","min")},r={axis:t,keepDims:n};return Zr.runKernel(dn,a,r)}});const Al=lo({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=so(e,"x","sum");"bool"===a.dtype&&(a=Ts(a,"int32"));const r={x:a},o={axis:t,keepDims:n};return Zr.runKernel(ra,r,o)}});function _l(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return Zs(e);if(1!==e.rank&&null===n)return _l(Nc(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Al(Zs(e),n);if(t===1/0)return El(Zs(e),n);if(t===-1/0)return Rl(Zs(e),n);if("euclidean"===t||2===t)return Ds(Al(Xs(Zs(e),Ps(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return El(Al(Zs(e),n[0]),n[1]-1);if(t===1/0)return El(Al(Zs(e),n[1]),n[0]);if(t===-1/0)return Rl(Al(Zs(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ds(Al(Ms(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const Fl=lo({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=_l(e=so(e,"x","norm"),t,n);let o=r.shape;if(a){const t=Y(n,e.shape);o=Sl(r.shape,t)}return Nc(r,o)}});const Ol=lo({euclideanNorm_:function(e){return Fl(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});const Dl=lo({exp_:function(e){const t={x:so(e,"x","exp")};return Zr.runKernel(Tt,t)}});const Ml=lo({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=so(e,"x","expandDims","string_or_numeric");P(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return Zr.runKernel(Et,a,r)}});const zl=lo({expm1_:function(e){const t={x:so(e,"x","expm1")};return Zr.runKernel(Rt,t)}});const Ll=lo({tile_:function(e,t){const n=so(e,"x","tile","string_or_numeric");P(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const a={x:n},r={reps:t};return Zr.runKernel(Sa,a,r)}});const Pl=lo({eye_:function(e,t,n){null==t&&(t=e);const a=Ns([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let s=0;s<r;++s)a.set(1,s,s);const o=Nc(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return Ll(Ml(o,0),[n[0],1,1]);if(2===n.length)return Ll(Ml(Ml(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ll(Ml(Ml(Ml(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});const Bl=lo({floor_:function(e){const t={x:so(e,"x","floor","float32")};return Zr.runKernel(Ot,t)}});const Wl=lo({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const r={x:so(e,"x","gather"),indices:so(t,"indices","gather","int32")},o={axis:n,batchDims:a};return Zr.runKernel(zt,r,o)}});const Ul=lo({greater_:function(e,t){let n=so(e,"a","greater","string_or_numeric"),a=so(t,"b","greater","string_or_numeric");[n,a]=Gr(n,a),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(Pt,r)}});const Vl=lo({greaterEqual_:function(e,t){let n=so(e,"a","greaterEqual","string_or_numeric"),a=so(t,"b","greaterEqual","string_or_numeric");[n,a]=Gr(n,a),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(Bt,r)}});const Gl=lo({imag_:function(e){const t={input:so(e,"input","imag")};return Zr.runKernel(Vt,t)}});const Hl=lo({isFinite_:function(e){const t={x:so(e,"x","isFinite")};return Zr.runKernel(Gt,t)}});const jl=lo({isInf_:function(e){const t={x:so(e,"x","isInf")};return Zr.runKernel(Ht,t)}});const Kl=lo({isNaN_:function(e){const t={x:so(e,"x","isNaN")};return Zr.runKernel(jt,t)}});const ql=lo({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:so(e,"x","leakyRelu")},a={alpha:t};return Zr.runKernel(Kt,n,a)}});const Xl=lo({less_:function(e,t){let n=so(e,"a","less","string_or_numeric"),a=so(t,"b","less","string_or_numeric");[n,a]=Gr(n,a),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(qt,r)}});const Yl=lo({lessEqual_:function(e,t){let n=so(e,"a","lessEqual","string_or_numeric"),a=so(t,"b","lessEqual","string_or_numeric");[n,a]=Gr(n,a),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(Xt,r)}});function Ql(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return Zr.runKernel(Yt,{},a)}const Zl=lo({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const o=so(e,"x","localResponseNormalization");P(4===o.rank||3===o.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(o.rank,"."))),P(H(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let s=o,i=!1;3===o.rank&&(i=!0,s=Nc(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:s},l={depthRadius:t,bias:n,alpha:a,beta:r},u=Zr.runKernel(tn,c,l);return i?Nc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const Jl=lo({log_:function(e){const t={x:so(e,"x","log","float32")};return Zr.runKernel(Qt,t)}});const $l=lo({log1p_:function(e){const t={x:so(e,"x","log1p")};return Zr.runKernel(Zt,t)}});const eu=lo({neg_:function(e){const t={x:so(e,"x","neg")};return Zr.runKernel(bn,t)}});const tu=lo({softplus_:function(e){const t={x:so(e,"x","softplus")};return Zr.runKernel(na,t)}});const nu=lo({logSigmoid_:function(e){const t=so(e,"x","logSigmoid");return Ls((e=>({value:eu(tu(eu(e))),gradFunc:t=>Os(t,_c(eu(e)))})))(t)}});const au=lo({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=so(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const a=Ls(((e,n)=>{const a=El(e,t,!0),r=Ys(e,a),o=Ys(Ts(r,"float32"),Jl(Al(Dl(r),t,!0)));n([o]);return{value:o,gradFunc:(e,n)=>{const[a]=n,r=Dl(a);return Ys(e,Os(Al(e,t,!0),r))}}}));return a(n)}});const ru=lo({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a=so(e,"x","logSumExp"),r=Y(t,a.shape),o=El(a,r,!0),s=Ys(a,o),i=Dl(s),c=Al(i,r),l=Jl(c),u=As(Nc(o,l.shape),l);if(n){const e=Sl(u.shape,r);return Nc(u,e)}return u}});const ou=lo({logicalAnd_:function(e,t){const n=so(e,"a","logicalAnd","bool"),a=so(t,"b","logicalAnd","bool");ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(Jt,r)}});const su=lo({logicalNot_:function(e){const t={x:so(e,"x","logicalNot","bool")};return Zr.runKernel($t,t)}});const iu=lo({logicalOr_:function(e,t){const n=so(e,"a","logicalOr","bool"),a=so(t,"b","logicalOr","bool");ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(en,r)}});const cu=lo({logicalXor_:function(e,t){const n=so(e,"a","logicalXor","bool"),a=so(t,"b","logicalXor","bool");return ei(n.shape,a.shape),ou(iu(e,t),su(ou(e,t)))}}),lu=2147483648;const uu=lo({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=so(e,"sortedSequence","searchSorted"),r=so(t,"values","searchSorted"),o=a.shape[a.shape.length-1],s=r.shape[r.shape.length-1],i=Nc(a,[-1,o]),c=Nc(r,[-1,s]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(U(c.shape)>=lu)throw new Error("values tensor size must less than ".concat(lu));if(i.shape[1]>=lu)throw new Error("trailing dim_size must less than ".concat(lu," for int32 output type, was ").concat(i.shape[1]));const l={sortedSequence:i,values:c},u={side:n};return Zr.runKernel(Xn,l,u)}});function hu(e,t){return uu(e,t,"left")}const du=lo({maxPool_:function(e,t,n,a,r){const o=so(e,"x","maxPool");let s=o,i=!1;3===o.rank&&(i=!0,s=Nc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(4===s.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(s.rank,"."))),P(kc(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),Cc("maxPool",a,r);const c={x:s},l={filterSize:t,strides:n,pad:a,dimRoundingMode:r},u=Zr.runKernel(on,c,l);return i?Nc(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const pu=lo({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const s=so(e,"x","maxPool3d");let i=s,c=!1;4===s.rank&&(c=!0,i=Nc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),P(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),P("NDHWC"===o,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(o))),Cc("maxPool3d",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:o},h=Zr.runKernel(cn,l,u);return c?Nc(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const fu=lo({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const o={x:so(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=Zr.runKernel(un,o,s);return{result:i[0],indexes:i[1]}}});const mu=lo({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const a={x:so(e,"x","mean")},r={axis:t,keepDims:n};return Zr.runKernel(hn,a,r)}});function gu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(pe(e),"complex64"===t){const t=gu(e,"float32"),n=gu(e,"float32");return uo(t,n)}const n=he(U(e),t);return Zr.makeTensor(n,e,t)}function yu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(pe(e),"complex64"===t){const t=yu(e,"float32"),n=gu(e,"float32");return uo(t,n)}const n=ue(U(e),t);return Zr.makeTensor(n,e,t)}function bu(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=so(e,"x","meshgrid",e instanceof Ar?e.dtype:"float32");if(void 0===t)return[a];let r=so(t,"y","meshgrid",t instanceof Ar?t.dtype:"float32");const o=U(a.shape),s=U(r.shape);return"xy"===n?(a=Nc(a,[1,-1]),r=Nc(r,[-1,1]),[Ac(yu([s,1],a.dtype),a),Ac(r,yu([1,o],r.dtype))]):(a=Nc(a,[-1,1]),r=Nc(r,[1,-1]),[Ac(a,yu([1,s],a.dtype)),Ac(yu([o,1],r.dtype),r)])}const xu=lo({minimum_:function(e,t){let n=so(e,"a","minimum"),a=so(t,"b","minimum");[n,a]=Gr(n,a),"bool"===n.dtype&&(n=Ts(n,"int32"),a=Ts(a,"int32")),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(pn,r)}});const vu=lo({mirrorPad_:function(e,t,n){P("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const a=so(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===a.rank,(()=>"Padding doesn't match input. Must be ".concat(a.rank,". ")+"Got ".concat(t.length,".")));const r="reflect"===n?1:0;for(let i=0;i<a.rank;i++)P(2===t[i].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),P(t[i][0]>=0&&t[i][0]<=a.shape[i]-r&&t[i][1]>=0&&t[i][1]<=a.shape[i]-r,(()=>"Padding in dimension ".concat(i," cannot be greater than or equal ")+"to ".concat(a.shape[i]-r," or less than 0 for input of ")+"shape ".concat(a.shape)));const o={paddings:t,mode:n},s={x:a};return Zr.runKernel(fn,s,o)}});const wu=lo({mod_:function(e,t){let n=so(e,"a","mod"),a=so(t,"b","mod");[n,a]=Gr(n,a);const r={a:n,b:a};return Zr.runKernel(mn,r)}});const ku=lo({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const n=Y(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=so(e,"x","moments")).shape),a=mu(e,n,t);let r=a.shape;t||(r=Sl(a.shape,n));const o=Ms(Ys(Ts(e,"float32"),Nc(a,r)));return{mean:a,variance:mu(o,n,t)}}});const Su=lo({multiRNNCell_:function(e,t,n,a){const r=so(t,"data","multiRNNCell"),o=io(n,"c","multiRNNCell"),s=io(a,"h","multiRNNCell");let i=r;const c=[];for(let h=0;h<e.length;h++){const t=e[h](i,o[h],s[h]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],u=[];for(let h=0;h<c.length;h+=2)l.push(c[h]),u.push(c[h+1]);return[l,u]}});const Iu=lo({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=so(e,"logits","multinomial"),o=r.size,s=r.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(o,"."));if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(s));n=n||Math.random();const i={logits:1===s?Nc(r,[1,-1]):r},c={numSamples:t,seed:n,normalized:a},l=Zr.runKernel(gn,i,c);return 1===s?Nc(l,[l.size]):l}});const Cu=lo({notEqual_:function(e,t){let n=so(e,"a","notEqual","string_or_numeric"),a=so(t,"b","notEqual","string_or_numeric");[n,a]=Gr(n,a),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(xn,r)}});const Nu=lo({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const o={indices:so(e,"indices","oneHot","int32")},s={dtype:r,depth:t,onValue:n,offValue:a};return Zr.runKernel(In,o,s)}});const Tu=lo({onesLike_:function(e){const t={x:so(e,"x","onesLike")};return Zr.runKernel(Sn,t)}});const Eu=lo({outerProduct_:function(e,t){const n=so(e,"v1","outerProduct"),a=so(t,"v2","outerProduct");P(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=Nc(n,[-1,1]),o=Nc(a,[1,-1]);return Ac(r,o)}});const Ru=lo({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a=so(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},o={x:a};return Zr.runKernel(Nn,o,r)}});const Au=lo({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return P(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Ru(e,[t],n)}});const _u=lo({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return P(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ru(e,t,n)}});const Fu=lo({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return P(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ru(e,t,n)}});const Ou=lo({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return P(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Ru(e,t,n)}});const Du=lo({spaceToBatchND_:function(e,t,n){const a=so(e,"x","spaceToBatchND");P(a.rank>=1+t.length,(()=>"input rank ".concat(a.rank," should be > than [blockShape] ").concat(t.length))),P(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),P(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(a.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const r={x:a},o={blockShape:t,paddings:n};return Zr.runKernel(oa,r,o)}});const Mu=lo({pool_:function(e,t,n,a,r,o,s){null==r&&(r=[1,1]),null==o&&(o=1),0===a&&(a="valid");const i=so(e,"x","maxPool");let c=i,l=!1;3===i.rank&&(l=!0,c=Nc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(kc(o,r),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(r,"'")));const u=dc(c.shape,t,o,r,a),h=[u.dilationHeight,u.dilationWidth];let d;d="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),o=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],o[t]]))}([u.filterHeight,u.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),o=e.concat(a,r),s=t.map(((e,t)=>(e-o[t]%e)%e)),i=r.map(((e,t)=>e+s[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,s[t]]));return[c,l]}([u.inHeight,u.inWidth],h,d),g=p?a:"valid",y=p?c:Du(c,h,f),b=("avg"===n?()=>Tc(y,t,o,g,s):()=>du(y,t,o,g,s))(),x=p?b:Mc(b,h,m);return l?Nc(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const zu=lo({prelu_:function(e,t){const n={x:so(e,"x","prelu"),alpha:so(t,"alpha","prelu")};return Zr.runKernel(En,n)}});const Lu=lo({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=so(e,"x","prod");"bool"===a.dtype&&(a=Ts(a,"int32"));const r={x:a},o={axis:t,keepDims:n};return Zr.runKernel(Rn,r,o)}});const Pu=lo({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>so(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:so(t,"paramsDenseValues","raggedGather"),indices:so(n,"indices","raggedGather","int32")},o={outputRaggedRank:a},s=Zr.runKernel(An,r,o);return{outputNestedSplits:s.slice(0,s.length-1),outputDenseValues:s[s.length-1]}}});const Bu=lo({raggedRange_:function(e,t,n){const a=so(e,"starts","raggedRange"),r={starts:a,limits:so(t,"limits","raggedRange",a.dtype),deltas:so(n,"deltas","raggedRange",a.dtype)},o=Zr.runKernel(_n,r);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}});const Wu=lo({raggedTensorToTensor_:function(e,t,n,a,r){const o=so(e,"shape","raggedTensorToTensor","int32"),s=so(t,"values","raggedTensorToTensor"),i={shape:o,values:s,defaultValue:so(n,"defaultValue","raggedTensorToTensor",s.dtype),rowPartitionTensors:a.map(((e,t)=>so(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},c={rowPartitionTypes:r};return Zr.runKernel(Fn,i,c)}});const Uu=lo({rand_:function(e,t,n){pe(e);const a=U(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let o=0;o<a;o++)r[o]=t();return Zr.makeTensor(r,e,n)}});var Vu=n(334);class Gu{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=r||Math.random();this.random=Vu.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,o;do{a=2*this.random()-1,r=2*this.random()-1,o=a*a+r*r}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*r*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Hu{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Vu.alea(r.toString()),this.randn=new Gu(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,o;for(;;){do{a=this.randn.nextValue(),o=1+this.c*a}while(o<=0);if(o*=o*o,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),r=this.randu(),r<t||Math.log(r)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class ju{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Vu.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ku=lo({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(pe(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const o=new Hu(t,n,a,r),s=Ns(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const qu=lo({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(pe(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const o=new Gu(t,n,a,!1,r),s=Ns(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Xu=lo({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return qu(e,0,1,t,n)}});const Yu=lo({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;pe(e);const o=Ns(e,a),s=new ju(t,n,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Qu=lo({randomUniformInt_:function(e,t,n,a){return Yu(e,t,n,"int32",a)}});function Zu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return Zr.runKernel(On,{},r)}const Ju=lo({real_:function(e){const t={input:so(e,"input","real")};return Zr.runKernel(Dn,t)}});const $u=lo({reciprocal_:function(e){const t={x:so(e,"x","reciprocal")};return Zr.runKernel(Mn,t)}});const eh=lo({relu_:function(e){const t={x:so(e,"x","relu")};return Zr.runKernel(zn,t)}});const th=lo({relu6_:function(e){const t={x:so(e,"x","relu6")};return Zr.runKernel(Vn,t)}});const nh=lo({reverse_:function(e,t){const n={x:so(e,"x","reverse")},a={dims:t};return Zr.runKernel(Gn,n,a)}});const ah=lo({reverse1d_:function(e){const t=so(e,"x","reverse");return P(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),nh(t,0)}});const rh=lo({reverse2d_:function(e,t){const n=so(e,"x","reverse");return P(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),nh(n,t)}});const oh=lo({reverse3d_:function(e,t){const n=so(e,"x","reverse");return P(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),nh(n,t)}});const sh=lo({reverse4d_:function(e,t){const n=so(e,"x","reverse");return P(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),nh(n,t)}});const ih=lo({round_:function(e){const t={x:so(e,"x","round")};return Zr.runKernel(Hn,t)}});const ch=lo({rsqrt_:function(e){const t={x:so(e,"x","rsqrt","float32")};return Zr.runKernel(jn,t)}});const lh=lo({selu_:function(e){const t={x:so(e,"x","selu")};return Zr.runKernel(Qn,t)}});const uh=lo({separableConv2d_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const i=so(e,"x","separableConv2d"),c=so(t,"depthwiseFilter","separableConv2d"),l=so(n,"pointwiseFilter","separableConv2d");let u=i,h=!1;if(3===i.rank&&(h=!0,u=Nc(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(4===u.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(u.rank,"."))),P(4===c.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),P(4===l.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(c.rank,"."))),P(1===l.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(l.shape[0],"."))),P(1===l.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(l.shape[1],".")));const d=c.shape[2],p=c.shape[3];P(l.shape[2]===d*p,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(d*p,", ")+"but got ".concat(l.shape[2],".")));const f=ll(u,c,a,r,s,o),m=Qc(f,l,1,"valid",s);return h?Nc(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const hh=async function(e,t){const n=so(e,"x","setdiff1d"),a=so(t,"y","setdiff1d");P(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),P(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),P(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),o=await a.data(),s=new Set(o);let i=0;for(let u=0;u<r.length;u++)s.has(r[u])||i++;const c=new Nr([i],n.dtype),l=new Nr([i],"int32");for(let u=0,h=0;u<r.length;u++)s.has(r[u])||(c.values[h]=r[u],l.values[h]=u,h++);return[c.toTensor(),l.toTensor()]};const dh=lo({sign_:function(e){const t={x:so(e,"x","sign")};return Zr.runKernel(ea,t)}});const ph=lo({sin_:function(e){const t={x:so(e,"x","sin","float32")};return Zr.runKernel(Jn,t)}});const fh=lo({sinh_:function(e){const t={x:so(e,"x","sinh")};return Zr.runKernel($n,t)}});const mh=lo({slice1d_:function(e,t,n){const a=so(e,"x","slice1d");return P(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),Fc(a,[t],[n])}});const gh=lo({slice2d_:function(e,t,n){const a=so(e,"x","slice2d");return P(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),Fc(a,t,n)}});const yh=lo({slice3d_:function(e,t,n){const a=so(e,"x","slice3d");return P(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),Fc(a,t,n)}});const bh=lo({slice4d_:function(e,t,n){const a=so(e,"x","slice4d");return P(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),Fc(a,t,n)}});const xh=lo({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=so(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const a={logits:n},r={dim:t};return Zr.runKernel(ia,a,r)}});const vh=lo({fft_:function(e){P("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Zr.runKernel(At,t)}});const wh=lo({ifft_:function(e){P("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return Zr.runKernel(Ut,t)}});const kh=lo({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=Nc(e,[n,t]);a=wh(r)}else{const r=[n,2*(t-1)],o=Nc(Ju(e),[n,t]),s=Nc(Gl(e),[n,t]),i=nh(Fc(o,[0,1],[n,t-2]),1),c=Os(nh(Fc(s,[0,1],[n,t-2]),1),Ps(-1)),l=Rc([o,i],1),u=Rc([s,c],1),h=Nc(uo(l,u),[r[0],r[1]]);a=wh(h)}if(a=Ju(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=Nc(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});const Sh=lo({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const a={x:so(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Zr.runKernel(sa,a,r)}});const Ih=lo({rfft_:function(e,t){P("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),o=e.shape.map((e=>e));o[e.shape.length-1]=t,r=Fc(e,a,o),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=Rc([e,gu(a)],e.shape.length-1),n=t}else r=e;const o=zs(r),s=Nc(uo(r,o),[a,n]),i=vh(s),c=Math.floor(n/2)+1,l=Ju(i),u=Gl(i),h=Sh(l,[c,n-c],l.shape.length-1),d=Sh(u,[c,n-c],u.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,Nc(uo(h[0],d[0]),p)}});const Ch=lo({squaredDifference_:function(e,t){let n=so(e,"a","squaredDifference"),a=so(t,"b","squaredDifference");[n,a]=Gr(n,a),ei(n.shape,a.shape);const r={a:n,b:a};return Zr.runKernel(pa,r,{})}});const Nh=lo({squeeze_:function(e,t){const n=so(e,"x","squeeze","string_or_numeric");return Nc(n,Q(n.shape,t).newShape)}});const Th=lo({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=io(e,"tensors","stack","string_or_numeric");P(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&P(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return Zr.runKernel(Cn,a,r)}});const Eh=lo({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:so(e,"x","step")},a={alpha:t};return Zr.runKernel(_a,n,a)}});const Rh=lo({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const l={x:so(e,"x","stridedSlice","string_or_numeric")},u={begin:t,end:n,strides:a,beginMask:r,endMask:o,ellipsisMask:s,newAxisMask:i,shrinkAxisMask:c};return Zr.runKernel(ga,l,u)}});const Ah=lo({tan_:function(e){const t={x:so(e,"x","tan","float32")};return Zr.runKernel(wa,t)}});function _h(e,t){W(e);const n=ao(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ho(e,null,n,t)}function Fh(e,t,n){if(W(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=ao(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ho(e,t,a,n)}function Oh(e,t,n){if(W(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=ao(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ho(e,t,a,n)}function Dh(e,t,n){if(W(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=ao(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ho(e,t,a,n)}function Mh(e,t,n){if(W(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=ao(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ho(e,t=t||a,a,n)}function zh(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(o+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(o+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(o+" update.rank != ".concat(r+e.length-a));for(let s=0;s<r;++s)if(n.shape[s]!==t.shape[s])throw new Error(o+" updates.shape[".concat(s,"] (").concat(n.shape[s],") != indices.shape[").concat(s,"] (").concat(t.shape[s],")."));for(let s=0;s<n.rank-r;++s)if(n.shape[s+r]!==e[s+a])throw new Error(o+" updates.shape[".concat(s+r,"] (").concat(n.shape[s+r],") != shape[").concat(s+r,"] (").concat(e[s+r],")"))}function Lh(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}zh(n,t,e)}function Ph(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,o=n.length;let s=1;for(let c=r;c<o;++c)s*=n[c];const i=r<1?1:r;return{sliceRank:r,numUpdates:U(t.shape)/i,sliceSize:s,strides:[...se(n.slice(0,r)),1],outputSize:U(n)}}const Bh=lo({tensorScatterUpdate_:function(e,t,n){const a=so(e,"tensor","tensorScatterupdate"),r=so(t,"indices","tensorScatterupdate","int32"),o=so(n,"updates","tensorScatterupdate");if(Lh(o,r,a.shape),a.dtype!==o.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(o.dtype,"."));const s={tensor:a,indices:r,updates:o};return Zr.runKernel(qn,s,{})}});const Wh=lo({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=so(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>r)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(r,") ")+"but got ".concat(t));const o={x:a},s={k:t,sorted:n},[i,c]=Zr.runKernel(Ia,o,s);return{values:i,indices:c}}});const Uh=lo({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(pe(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new Gu(t,n,a,!0,r),s=Ns(e,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Vh=lo({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=so(e,"x","unique","string_or_numeric");P(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[o,s]=Zr.runKernel(Ta,a,r);return{values:o,indices:s}}});const Gh=lo({unsortedSegmentSum_:function(e,t,n){const a=so(e,"x","unsortedSegmentSum"),r=so(t,"segmentIds","unsortedSegmentSum","int32");P(H(n),(()=>"numSegments must be of dtype int"));const o={x:a,segmentIds:r},s={numSegments:n};return Zr.runKernel(Ra,o,s)}});const Hh=lo({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=so(e,"x","unstack","string_or_numeric");P(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const a={value:n},r={axis:t};return Zr.runKernel(Ea,a,r)}});function jh(e,t){return uu(e,t,"right")}function Kh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Zr.makeVariable(e,t,n,a)}function qh(e,t){const n=[];for(let o=0;o<t.length;o++)t[o]&&n.push(o);const a=Ns(e,"int32"),r=Ns([n.length,e.length],"int32");for(let o=0;o<n.length;o++){const t=a.indexToLoc(n[o]),s=o*e.length;r.values.set(t,s)}return r.toTensor()}const Xh=async function(e){const t=so(e,"condition","whereAsync","bool"),n=await t.data(),a=qh(t.shape,n);return e!==t&&t.dispose(),a};const Yh=async function(e,t,n){const a=so(e,"tensor","boolMask"),r=so(t,"mask","boolMask","bool"),o=null==n?0:n,s=r.rank,i=a.shape;P(s>0,(()=>"mask cannot be scalar")),B(i.slice(o,o+s),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=o;m<o+s;m++)c*=i[m];const l=i.slice(0,o).concat([c],i.slice(o+s)),u=Nc(a,l),h=Nc(r,[-1]),d=await Xh(h),p=Nh(d,[1]),f=Wl(u,p,o);return e!==a&&a.dispose(),t!==r&&r.dispose(),p.dispose(),u.dispose(),h.dispose(),d.dispose(),f};const Qh=lo({transpose_:function(e,t,n){const a=so(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),P(a.rank===t.length,(()=>"Error in transpose: rank of input ".concat(a.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{P(e>=0&&e<a.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(a.rank-1)+" but got ".concat(t)))})),a.rank<=1)return a.clone();const r={x:a},o={perm:t};return"complex64"===a.dtype?bo((()=>{let e=Ju(a),t=Gl(a);return e=Zr.runKernel(Na,{x:e},o),t=Zr.runKernel(Na,{x:t},o),n&&(t=eu(t)),uo(e,t)})):Zr.runKernel(Na,r,o)}});const Zh=lo({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const o=so(e,"v","movingAverage"),s=so(t,"x","movingAverage"),i=so(n,"decay","movingAverage");var c,l;l=s,P((c=o).dtype===l.dtype,(()=>"The dtypes of the first(".concat(c.dtype,") and")+" second(".concat(l.dtype,") input must match"))),P(G(o.shape,s.shape),(()=>"Shape mismatch in v and x"));const u=Ps(1),h=Ys(u,i);let d=Os(Ys(s,o),h);if(r){P(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=so(a,"step","movingAverage");d=Fs(d,Ys(u,Xs(i,e)))}return As(o,d)}});const Jh=lo({scatterND_:function(e,t,n){pe(n);const a=so(e,"indices","scatterND","int32"),r=so(t,"updates","scatterND");Lh(r,a,n);const o={indices:a,updates:r},s={shape:n};return Zr.runKernel(Kn,o,s)}});const $h=lo({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;pe(n);const r=so(e,"sparseIndices","sparseToDense","int32"),o=so(t,"sparseValues","sparseToDense","string_or_numeric"),s=so(a,"defaultValue","sparseToDense",o.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(o,"."));const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,o,n,s);const i={sparseIndices:r,sparseValues:o,defaultValue:s},c={outputShape:n};return Zr.runKernel(da,i,c)}});const ed=lo({gatherND_:function(e,t){const n=so(t,"indices","gatherND","int32"),a={params:so(e,"x","gatherND","string_or_numeric"),indices:n};return Zr.runKernel(Lt,a)}});const td=lo({dropout_:function(e,t,n,a){const r=so(e,"x","dropout");if(P("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),P(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof Ar?r.clone():r;const o=function(e,t){if(null==t)return e.shape.slice();if(G(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),s=1-t,i=Fs(Bl(As(Yu(o,0,1,"float32",a),s)),s);return Os(r,i)}});function nd(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ad(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let o=0;o<e;++o){const s=2*Math.PI*o/(e+a-1);r[o]=t-n*Math.cos(s)}return _h(r,"float32")}const rd=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=so(e,"predictions","inTopK"),r=so(t,"targets","inTopK");P(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),P(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),B(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=a.shape[a.shape.length-1];P(n>0&&n<=o,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(o,"), but got ").concat(n)));const s=await a.data(),i=await r.data(),[c,l]=[s.length/o,o],u=Z("bool",c);for(let h=0;h<c;h++){const e=h*l,t=s.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),u[h]=0;for(let r=0;r<n;r++)if(a[r].index===i[h]){u[h]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),po(u,r.shape,"bool")};const od=lo({conv2DBackpropFilter_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",s=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=Nc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=Nc(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(4===i.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(i.shape,"."))),P(4===c.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(c.shape,"."))),P(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const l="NHWC"===o?i.shape[3]:i.shape[1],u="NHWC"===o?c.shape[3]:c.shape[1];P(l===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(l,") must ")+"match input depth in filter (".concat(n[2],"."))),P(u===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(u,") must ")+"match output depth for filter (".concat(n[3],")."))),Cc("conv2dDerFilter",r,s);const h={x:i,dy:c},d={strides:a,pad:r,dataFormat:o,dimRoundingMode:s,filterShape:n};return Zr.runKernel(tt,h,d)}});function sd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Os(e,Eh(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function id(e,t){let n=t;const a=$s(e.shape,t.shape);return a.length>0&&(n=Al(n,a)),Nc(n,e.shape)}function cd(e,t,n,a){if("linear"===t)return e;if("relu"===t)return eh(e);if("elu"===t)return yl(e);if("relu6"===t)return th(e);if("prelu"===t)return zu(e,n);if("leakyrelu"===t)return ql(e,a);if("sigmoid"===t)return _c(e);throw new Error("Unknown fused activation ".concat(t,"."))}const ld=(e,t)=>!(e>0)||"linear"===t;const ud=lo({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(l=l||"linear",!1===ld(Zr.state.gradientDepth,l)){P("NHWC"===o,(()=>"Error in fused conv2d: got dataFormat of ".concat(o," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=Qc(t,n,a,r,o,s,i);return null!=c&&(e=As(e,c)),cd(e,l,u,h)}const d=so(t,"x","conv2d","float32"),p=so(n,"filter","conv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Nc(d,[1,d.shape[0],d.shape[1],d.shape[2]])),P(4===f.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(f.rank,"."))),P(4===p.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(p.rank,"."))),Cc("fused conv2d",r,i);const g="NHWC"===o?f.shape[3]:f.shape[1];P(p.shape[2]===g,(()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(p.shape[2],"."))),P(kc(a,s),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(s,"'")));const y=fc(f.shape,p.shape,a,s,r,i);let b,x;if(null!=c&&(b=so(c,"bias","fused conv2d"),[b]=Gr(b,d),"NHWC"===o?ei(y.outShape,b.shape):(P(b.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(b.shape.length,"."))),P(0===b.shape.length||b.shape[0]===y.outChannels||1===b.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(b.shape,") is not ")+"compatible with the number of output channels "+"(".concat(y.outChannels,")"))))),null!=u){const e=u.shape;if(P(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)P(1===e[0]||e[0]===y.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(y.outChannels,").")));else if(3===e.length)try{ei(e,y.outShape)}catch(S){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(y.outShape,").");throw Error(t)}x=so(u,"prelu weights","fused conv2d")}const v=(e,t)=>{P("NHWC"===o,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(o," but only NHWC is currently supported.")));const[n,i,c,u]=t,h=sd(e,c,l);P(wc(s),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'")));const d=[Jc(i.shape,h,n,a,r),od(i,h,n.shape,a,r)];if(null!=u){const e=id(u,h);d.push(e)}return d},w={x:f,filter:p,bias:b,preluActivationWeights:x},k={strides:a,pad:r,dataFormat:o,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=Ls(((e,t,n)=>{let a=Zr.runKernel(Ma,w,k);return n([t,e,a]),m&&(a=Nc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}}));return e(f,p)}{const e=Ls(((e,t,n,a)=>{let r=Zr.runKernel(Ma,w,k);return a([t,e,r,n]),m&&(r=Nc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p,b)}}});const hd=lo({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,i=e;3===e.rank&&(i=Nc(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=Nc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:c},u={strides:a,pad:r,dimRoundingMode:s,dilations:o,filterShape:n};return Zr.runKernel(ft,l,u)}});const dd=lo({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,i=t,c=!1;3===t.rank&&(c=!0,i=Nc(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},u={strides:a,pad:r,dimRoundingMode:s,dilations:o,inputShape:e},h=Zr.runKernel(mt,l,u);return c?Nc(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const pd=lo({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:c,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}=e;if(!1===ld(Zr.state.gradientDepth,l)){let e=ll(t,n,a,r,o,s,i);return null!=c&&(e=As(e,c)),cd(e,l,u,h)}const d=so(t,"x","depthwiseConv2d","float32"),p=so(n,"filter","depthwiseConv2d","float32");let f=d,m=!1;3===d.rank&&(m=!0,f=Nc(d,[1,d.shape[0],d.shape[1],d.shape[2]])),P(4===f.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,"."))),P(4===p.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(p.rank,"."))),P(f.shape[3]===p.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],"."))),null==s&&(s=[1,1]),P(kc(a,s),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(s,"'"))),Cc("fused depthwiseConv2d",r,i);const g=fc(f.shape,p.shape,a,s,r,i,!0);let y,b;null!=c&&(y=so(c,"bias","fused conv2d"),[y]=Gr(y,d),ei(g.outShape,y.shape)),null!=u&&(b=so(u,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{P(wc(s),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(s,"'")));const[n,o,c,u]=t,h=sd(e,c,l),d=dd(o.shape,h,n,a,r,s,i),p=hd(o,h,n.shape,a,r,s,i);if(null!=u){return[d,p,id(y,h)]}return[d,p]},v={x:f,filter:p,bias:y,preluActivationWeights:b},w={strides:a,pad:r,dataFormat:o,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:h};if(null==c){const e=Ls(((e,t,n)=>{let a=Zr.runKernel(za,v,w);return n([t,e,a]),m&&(a=Nc(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,p)}{const e=Ls(((e,t,n,a)=>{let r=Zr.runKernel(za,v,w);return a([t,e,r,n]),m&&(r=Nc(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p,y)}}});const fd=lo({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:c=.2}=e;if(!1===ld(Zr.state.gradientDepth,s)){let e=Ac(t,n,a,r);return null!=o&&(e=As(e,o)),cd(e,s,i,c)}let l=so(t,"a","fused matMul"),u=so(n,"b","fused matMul");[l,u]=Gr(l,u);const h=a?l.shape[l.rank-2]:l.shape[l.rank-1],d=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=a?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),g=u.shape.slice(0,-2),y=U(m),b=U(g);P(h===d,(()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(d,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(u.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const x=ei(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),v=Nc(l,a?[y,h,p]:[y,p,h]),w=Nc(u,r?[b,f,d]:[b,d,f]);let k,S;null!=o&&(k=so(o,"bias","fused matMul"),[k]=Gr(k,l),ei(x,k.shape)),null!=i&&(S=so(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[n,i,c,l]=t,u=sd(Nc(e,c.shape),c,s);let h,d;if(a||r?!a&&r?(h=Ac(u,i,!1,!1),d=Ac(u,n,!0,!1)):a&&!r?(h=Ac(i,u,!1,!0),d=Ac(n,u,!1,!1)):(h=Ac(i,u,!0,!0),d=Ac(u,n,!0,!0)):(h=Ac(u,i,!1,!0),d=Ac(n,u,!0,!1)),null!=o){return[h,d,id(l,u)]}return[h,d]},C={a:v,b:w,bias:k,preluActivationWeights:S},N={transposeA:a,transposeB:r,activation:s,leakyreluAlpha:c};if(null==o){const e=Ls(((e,t,n)=>{const a=Zr.runKernel(Da,C,N);return n([e,t,a]),{value:Nc(a,x),gradFunc:I}}));return e(v,w)}{const e=Ls(((e,t,n,a)=>{const r=Zr.runKernel(Da,C,N);return a([e,t,r,n]),{value:Nc(r,x),gradFunc:I}}));return e(v,w,k)}}});const md=lo({hammingWindow_:function(e){return ad(e,.54,.46)}});const gd=lo({hannWindow_:function(e){return ad(e,.5,.5)}});const yd=lo({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=0;const s=[];for(;o+t<=e.size;)s.push(Fc(e,o,t)),o+=n;if(a)for(;o<e.size;){const a=o+t-e.size,i=Rc([Fc(e,o,t-a),Ks([a],r)]);s.push(i),o+=n}return 0===s.length?Fh([],[0,t]):Nc(Rc(s),[s.length,t])}});const bd=lo({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:gd;null==a&&(a=nd(t));const o=yd(e,t,n),s=Os(o,r(t));return Ih(s,a)}});const xd=lo({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=so(e,"image","cropAndResize"),i=so(t,"boxes","cropAndResize","float32"),c=so(n,"boxInd","cropAndResize","int32"),l=i.shape[0];P(4===s.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),P(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(l,",4] ")+"but had shape ".concat(i.shape,"."))),P(1===c.rank&&c.shape[0]===l,(()=>"Error in cropAndResize: boxInd must be have size [".concat(l,"] ")+"but had shape ".concat(i.shape,"."))),P(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),P(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),P("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const u={image:s,boxes:i,boxInd:c},h={method:r,extrapolationValue:o,cropSize:a};return Zr.runKernel(ut,u,h)}});const vd=lo({flipLeftRight_:function(e){const t=so(e,"image","flipLeftRight","float32");P(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return Zr.runKernel(Ft,n,{})}});const wd=lo({grayscaleToRGB_:function(e){const t=so(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];P(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),P(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Ll(t,r)}});const kd=lo({rgbToGrayscale_:function(e){const t=so(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];P(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),P(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,o=Ts(t,"float32"),s=_h([.2989,.587,.114]);let i;switch(t.rank){case 2:i=gl("ij,j->i",o,s);break;case 3:i=gl("ijk,k->ij",o,s);break;case 4:i=gl("ijkl,l->ijk",o,s);break;case 5:i=gl("ijklm,m->ijkl",o,s);break;case 6:i=gl("ijklmn,n->ijklm",o,s);break;default:throw new Error("Not a valid tensor rank.")}return i=Ml(i,-1),Ts(i,r)}});const Sd=lo({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=so(e,"image","rotateWithOffset","float32");P(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const o={image:r},s={radians:t,fillValue:n,center:a};return Zr.runKernel(Oa,o,s)}});function Id(e,t,n,a,r,o){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=e.shape[0];return n=Math.min(n,s),P(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),P(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),P(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),P(1===t.rank,(()=>"scores must be a 1D tensor")),P(t.shape[0]===s,(()=>"scores has incompatible shape with boxes. Expected ".concat(s,", ")+"but was ".concat(t.shape[0]))),P(0<=o&&o<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(o,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:o}}const Cd=lo({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=so(e,"boxes","nonMaxSuppression","float32"),s=so(t,"scores","nonMaxSuppression","float32"),i=Id(o,s,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Zr.runKernel(vn,{boxes:o,scores:s},c)}});function Nd(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,o=0,s=!1;for(;a<r;){o=a+(r-a>>>1);const i=n(t,e[o]);i>0?a=o+1:(r=o,s=!i)}return s?a:-a-1}(e,t,n||Td)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Td(e,t){return e>t?1:e<t?-1:0}function Ed(e,t,n,a,r){return _d(e,t,n,a,r,0)}function Rd(e,t,n,a,r,o){return _d(e,t,n,a,r,0,!1,o,!0)}function Ad(e,t,n,a,r,o){return _d(e,t,n,a,r,o,!0)}function _d(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(Dd);const u=o>0?-.5/o:0,h=[],d=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:o,suppressBeginIndex:s}=t;if(n<r)break;let i=!1;for(let c=h.length-1;c>=s;--c){const n=Fd(e,o,h[c]);if(n>=a){i=!0;break}if(t.score=t.score*Od(a,u,n),t.score<=r)break}t.suppressBeginIndex=h.length,i||(t.score===n?(h.push(o),d.push(t.score)):t.score>r&&Nd(l,t,Dd))}const p=h.length,f=n-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return s&&(m.selectedScores=d),c&&(m.validOutputs=p),m}function Fd(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),o=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(i-o)*(c-s),f=(h-l)*(d-u);if(p<=0||f<=0)return 0;const m=Math.max(o,l),g=Math.max(s,u),y=Math.min(i,h),b=Math.min(c,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function Od(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function Dd(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Md=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=so(e,"boxes","nonMaxSuppressionAsync"),s=so(t,"scores","nonMaxSuppressionAsync"),i=Id(o,s,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([o.data(),s.data()]),l=c[0],u=c[1],{selectedIndices:h}=Ed(l,u,n,a,r);return o!==e&&o.dispose(),s!==t&&s.dispose(),_h(h,"int32")};const zd=lo({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=so(e,"boxes","nonMaxSuppression"),i=so(t,"scores","nonMaxSuppression"),c=Id(s,i,n,a,r,o);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l={boxes:s,scores:i},u={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:o},h=Zr.runKernel(kn,l,u);return{selectedIndices:h[0],selectedScores:h[1]}}});const Ld=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=so(e,"boxes","nonMaxSuppressionAsync"),i=so(t,"scores","nonMaxSuppressionAsync"),c=Id(s,i,n,a,r,o);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const l=await Promise.all([s.data(),i.data()]),u=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=Ad(u,h,n,a,r,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:_h(d,"int32"),selectedScores:_h(p)}};const Pd=lo({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=so(e,"boxes","nonMaxSuppression"),i=so(t,"scores","nonMaxSuppression"),c=Id(s,i,n,a,r,null),l={boxes:s,scores:i},u={maxOutputSize:c.maxOutputSize,iouThreshold:c.iouThreshold,scoreThreshold:c.scoreThreshold,padToMaxOutputSize:o},h=Zr.runKernel(wn,l,u);return{selectedIndices:h[0],validOutputs:h[1]}}});const Bd=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=so(e,"boxes","nonMaxSuppressionAsync"),i=so(t,"scores","nonMaxSuppressionAsync"),c=Id(s,i,n,a,r,null),l=c.maxOutputSize,u=c.iouThreshold,h=c.scoreThreshold,[d,p]=await Promise.all([s.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Rd(d,p,l,u,h,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:_h(f,"int32"),validOutputs:Ps(m,"int32")}};const Wd=lo({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=so(e,"images","resizeBilinear");P(3===r.rank||4===r.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),P(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),P(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let o=r,s=!1;3===r.rank&&(s=!0,o=Nc(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:o},c={alignCorners:n,halfPixelCenters:a,size:t},l=Zr.runKernel(Wn,i,c);return s?Nc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Ud=lo({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=so(e,"images","resizeNearestNeighbor");P(3===r.rank||4===r.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(r.rank,"."))),P(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),P("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),P(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let o=r,s=!1;3===r.rank&&(s=!0,o=Nc(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,i={images:o},c={alignCorners:n,halfPixelCenters:a,size:t},l=Zr.runKernel(Pn,i,c);return s?Nc(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const Vd=lo({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=so(e,"image","threshold"),o=r.shape[0]*r.shape[1];let s,i,c,l,u=Os(_h([a]),255);if(P(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),P(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),P("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),P("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[s,i,c]=Sh(r,[1,1,1],-1);const e=Os(s,.2989),t=Os(i,.587),n=Os(c,.114);l=As(As(e,t),n)}else l=e;if("otsu"===t){u=function(e,t){let n,a,r,o,s,i,c=_h([-1]),l=_h([0]),u=_h([0]);for(let h=0;h<e.size-1;h++){n=Fc(e,0,h+1),a=Fc(e,h+1),s=Fs(Al(n),t),i=Fs(Al(a),t);const d=Al(Os(n,Zu(0,n.size)));r=Fs(d,Al(n));const p=Ks(a.shape,n.size),f=As(Zu(0,a.size),p),m=Os(a,f);o=Fs(Al(m),Al(a));const g=Ys(r,o),y=Ys(r,o),b=Os(s,i);u=Os(Os(b,g),y);const x=Ul(u,l);l=pl(x,u,l),c=pl(x,_h([h]),c)}return c}(Wc(Ts(ih(l),"int32"),po([]),256),o)}const h=n?Yl(l,u):Ul(l,u);return Ts(Os(h,255),"int32")}});const Gd=lo({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=arguments.length>5?arguments[5]:void 0;const s=so(e,"image","transform","float32"),i=so(t,"transforms","transform","float32");P(4===s.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(s.rank,"."))),P(2===i.rank&&(i.shape[0]===s.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),P(null==o||2===o.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(o,".")));const c={image:s,transforms:i},l={interpolation:n,fillMode:a,fillValue:r,outputShape:o};return Zr.runKernel(Ca,c,l)}});const Hd=lo({bandPart_:function(e,t,n){const a=so(e,"a","bandPart");P(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[o,s]=a.shape.slice(-2);let i,c;"number"===typeof t?(P(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),P(t<=o,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(o,")."))),i=so(t<0?o:t,"numLower","bandPart")):(P("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=pl(Xl(t,0),o,xu(t,o))),"number"===typeof n?(P(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),P(n<=s,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(s,")."))),c=so(n<0?s:n,"numUpper","bandPart")):(P("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=pl(Xl(n,0),s,xu(n,s)));const l=Nc(Zu(0,o,1,"int32"),[-1,1]),u=Zu(0,s,1,"int32"),h=Ys(l,u),d=ou(Yl(h,i),Vl(h,eu(c))),p=gu([o,s],a.dtype);return Nc(Th(Hh(Nc(a,[-1,o,s])).map((e=>pl(d,e,p)))),r)}});const jd=lo({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,P(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)P(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=Sh(e,e.shape[0],0).map((e=>Nh(e,[0])));P(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(Zr.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=Os(Al(Os(n[t],e)),n[t]);e=Ys(e,a)}return Fs(e,Fl(e,"euclidean"))})));return t?Th(n,0):n}});function Kd(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Zr.tidy((()=>{P(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Pl(n),o=Es(e);const s=Fh([[1]],[1,1]);let i=Es(s);const c=n>=a?a:n;for(let e=0;e<c;++e){const t=o,c=i,l=r;[i,o,r]=Zr.tidy((()=>{const t=Fc(o,[e,e],[n-e,1]),c=Fl(t),l=Fc(o,[e,e],[1,1]),u=pl(Ul(l,0),Fh([[-1]]),Fh([[1]])),h=Ys(l,Os(u,c)),d=Fs(t,h);i=1===d.shape[0]?Es(s):Rc([s,Fc(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=eu(Fs(Ac(u,h),c)),f=Fc(o,[e,0],[n-e,a]),m=Os(p,i),g=Qh(i);if(0===e)o=Ys(f,Ac(m,Ac(g,f)));else{const t=Ys(f,Ac(m,Ac(g,f)));o=Rc([Fc(o,[0,0],[e,a]),t],0)}const y=Qh(m),b=Fc(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Ys(b,Ac(Ac(b,i),y));else{const t=Ys(b,Ac(Ac(b,i),y));r=Rc([Fc(r,[0,0],[n,e]),t],1)}return[i,o,r]})),xo([t,c,l])}return!t&&n>a&&(r=Fc(r,[0,0],[n,a]),o=Fc(o,[0,0],[a,a])),[r,o]}))}const qd=lo({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(P(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Kd(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=Hh(Nc(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],o=[];a.forEach((e=>{const[n,a]=Kd(e,t);r.push(n),o.push(a)}));return[Nc(Th(r,0),e.shape),Nc(Th(o,0),e.shape)]}}});var Xd;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Xd||(Xd={}));const Yd=lo({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Xd.SUM_BY_NONZERO_WEIGHTS;const a=so(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=so(t,"weights","computeWeightedLoss"));const o=null==r?a:Os(a,r);if(n===Xd.NONE)return o;if(n===Xd.SUM)return Al(o);if(n===Xd.MEAN){if(null==r)return mu(o);{const e=a.size/r.size,t=Fs(Al(o),Al(r));return e>1?Fs(t,Ps(e)):t}}if(n===Xd.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Fs(Al(o),Ps(a.size));{const e=Os(r,yu(a.shape)),t=Ts(Al(Cu(e,Ps(0))),"float32");return Fs(Al(o),t)}}throw Error("Unknown reduction: ".concat(n))}});const Qd=lo({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xd.SUM_BY_NONZERO_WEIGHTS;const r=so(e,"labels","absoluteDifference"),o=so(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=so(n,"weights","absoluteDifference")),B(r.shape,o.shape,"Error in absoluteDifference: ");const i=Zs(Ys(r,o));return Yd(i,s,a)}});const Zd=lo({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS;const o=so(e,"labels","cosineDistance"),s=so(t,"predictions","cosineDistance");let i=null;null!=a&&(i=so(a,"weights","cosineDistance")),B(o.shape,s.shape,"Error in cosineDistance: ");const c=Ps(1),l=Ys(c,Al(Os(o,s),n,!0));return Yd(l,i,r)}});const Jd=lo({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xd.SUM_BY_NONZERO_WEIGHTS,r=so(e,"labels","hingeLoss");const o=so(t,"predictions","hingeLoss");let s=null;null!=n&&(s=so(n,"weights","hingeLoss")),B(r.shape,o.shape,"Error in hingeLoss: ");const i=Ps(1);r=Ys(Os(Ps(2),r),i);const c=eh(Ys(i,Os(r,o)));return Yd(c,s,a)}});const $d=lo({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS;const o=so(e,"labels","huberLoss"),s=so(t,"predictions","huberLoss");let i=null;null!=n&&(i=so(n,"weights","huberLoss")),B(o.shape,s.shape,"Error in huberLoss: ");const c=Ps(a),l=Zs(Ys(s,o)),u=xu(l,c),h=Ys(l,u),d=As(Os(Ps(.5),Ms(u)),Os(c,h));return Yd(d,i,r)}});const ep=lo({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS;const o=so(e,"labels","logLoss"),s=so(t,"predictions","logLoss");let i=null;null!=n&&(i=so(n,"weights","logLoss")),B(o.shape,s.shape,"Error in logLoss: ");const c=Ps(1),l=Ps(a),u=eu(Os(o,Jl(As(s,l)))),h=Os(Ys(c,o),Jl(As(Ys(c,s),l))),d=Ys(u,h);return Yd(d,i,r)}});const tp=lo({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xd.SUM_BY_NONZERO_WEIGHTS;const r=so(e,"labels","meanSquaredError"),o=so(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=so(n,"weights","meanSquaredError")),B(r.shape,o.shape,"Error in meanSquaredError: ");const i=Ch(r,o);return Yd(i,s,a)}});const np=lo({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS,o=so(e,"multiClassLabels","sigmoidCrossEntropy");const s=so(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=so(n,"weights","sigmoidCrossEntropy")),B(o.shape,s.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=Ps(a),t=Ps(1),n=Ps(.5);o=As(Os(o,Ys(t,e)),Os(n,e))}const c=function(e,t){const n=so(e,"labels","sigmoidCrossEntropyWithLogits"),a=so(t,"logits","sigmoidCrossEntropyWithLogits");B(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=eh(a),o=Os(a,n),s=$l(Dl(eu(Zs(a))));return As(Ys(r,o),s)}(o,s);return Yd(c,i,r)}});const ap=lo({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xd.SUM_BY_NONZERO_WEIGHTS,o=so(e,"onehotLabels","softmaxCrossEntropy");const s=so(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=so(n,"weights","softmaxCrossEntropy")),B(o.shape,s.shape,"Error in softmaxCrossEntropy: "),a>0){const e=Ps(a),t=Ps(1),n=Ps(o.shape[1]);o=As(Os(o,Ys(t,e)),Fs(e,n))}const c=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=Ls(((e,t,a)=>{const r=ru(t,[n],!0),o=Ys(Ts(t,"float32"),r);a([e,o]);const s=eu(Os(o,e));return{value:Al(s,[n]),gradFunc:(e,t)=>{const[a,r]=t,o=Sl(e.shape,[n]);return[Os(Nc(e,o),Ys(Ts(a,"float32"),Dl(r))),Os(Nc(e,o),Ys(Dl(r),Ts(a,"float32")))]}}}));return a(e,t)}(o,s);return Yd(c,i,r)}});const rp=lo({sparseFillEmptyRows_:function(e,t,n,a){const r=so(e,"indices","sparseFillEmptyRows","int32"),o=so(t,"values","sparseFillEmptyRows"),s=so(n,"denseShape","sparseFillEmptyRows","int32"),i=so(a,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==o.rank)throw new Error("Values should be Tensor1D but received shape ".concat(o.shape));if(1!==s.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(s.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const c={indices:r,values:o,denseShape:s,defaultValue:i},l=Zr.runKernel(ca,c);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const op=lo({sparseReshape_:function(e,t,n){const a=so(e,"inputIndices","sparseReshape","int32"),r=so(t,"inputShape","sparseReshape","int32"),o=so(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==o.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(o.shape));const s={inputIndices:a,inputShape:r,newShape:o},i=Zr.runKernel(la,s);return{outputIndices:i[0],outputShape:i[1]}}});const sp=lo({sparseSegmentMean_:function(e,t,n){const a=so(e,"data","sparseSegmentMean"),r=so(t,"indices","sparseSegmentMean","int32"),o=so(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(o.shape));const s={data:a,indices:r,segmentIds:o};return Zr.runKernel(ua,s)}});const ip=lo({sparseSegmentSum_:function(e,t,n){const a=so(e,"data","sparseSegmentSum"),r=so(t,"indices","sparseSegmentSum","int32"),o=so(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==o.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(o.shape));const s={data:a,indices:r,segmentIds:o};return Zr.runKernel(ha,s)}});const cp=lo({stringNGrams_:function(e,t,n,a,r,o,s,i){const c=so(e,"data","stringNGrams","string");if("string"!==c.dtype)throw new Error("Data must be of datatype string");if(1!==c.shape.length)throw new Error("Data must be a vector, saw: ".concat(c.shape));const l=so(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const u={separator:n,nGramWidths:a,leftPad:r,rightPad:o,padWidth:s,preserveShortSequences:i},h={data:c,dataSplits:l},d=Zr.runKernel(ya,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}});const lp=lo({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=so(e,"input","stringSplit","string"),r=so(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const o={skipEmpty:n},s={input:a,delimiter:r},i=Zr.runKernel(ba,s,o);return{indices:i[0],values:i[1],shape:i[2]}}});const up=lo({stringToHashBucketFast_:function(e,t){const n=so(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return Zr.runKernel(xa,r,a)}});const hp=lo({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=so(e,"input","staticRegexReplace","string"),o={pattern:t,rewrite:n,replaceGlobal:a};return Zr.runKernel(ma,{x:r},o)}}),dp={fft:vh,ifft:wh,rfft:Ih,irfft:kh},pp={hammingWindow:md,hannWindow:gd,frame:yd,stft:bd},fp={flipLeftRight:vd,grayscaleToRGB:wd,resizeNearestNeighbor:Ud,resizeBilinear:Wd,rgbToGrayscale:kd,rotateWithOffset:Sd,cropAndResize:xd,nonMaxSuppression:Cd,nonMaxSuppressionAsync:Md,nonMaxSuppressionWithScore:zd,nonMaxSuppressionWithScoreAsync:Ld,nonMaxSuppressionPadded:Pd,nonMaxSuppressionPaddedAsync:Bd,threshold:Vd,transform:Gd},mp={bandPart:Hd,gramSchmidt:jd,qr:qd},gp={absoluteDifference:Qd,computeWeightedLoss:Yd,cosineDistance:Zd,hingeLoss:Jd,huberLoss:$d,logLoss:ep,meanSquaredError:tp,sigmoidCrossEntropy:np,softmaxCrossEntropy:ap},yp={sparseFillEmptyRows:rp,sparseReshape:op,sparseSegmentMean:sp,sparseSegmentSum:ip},bp={stringNGrams:cp,stringSplit:lp,stringToHashBucketFast:up,staticRegexReplace:hp};const xp=class{static sgd(e){return new ai(e)}static momentum(e,t){return new ri(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new oi(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Qs(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new js(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new ni(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new qs(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},vp="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function wp(){return new Promise((e=>vp((()=>e()))))}function kp(e,t){const n=e[0].length;e.forEach(((e,t)=>{P(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),P(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let o=0;o<n;o++)P(o===t||e[o]===a[o],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function Sp(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var Ip;function Cp(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const o=n[r],s=a[a.length-n.length+r],i=a[s];if(o>=0)if(i>=0){if(i!==o)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(o," but shape[").concat(r+e,"] = ").concat(i))}else a[s]=o}return a}function Np(e){const t={FIRST_DIM_SIZE:Ip.FIRST_DIM_SIZE,VALUE_ROWIDS:Ip.VALUE_ROWIDS,ROW_LENGTHS:Ip.ROW_LENGTHS,ROW_SPLITS:Ip.ROW_SPLITS,ROW_LIMITS:Ip.ROW_LIMITS,ROW_STARTS:Ip.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function Tp(e){return 0===e.length?0:e[0]===Ip.FIRST_DIM_SIZE?e.length-1:e.length}function Ep(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Ip||(Ip={}));const Rp=30;function Ap(e){return e<=Rp?e:oe(e,Math.floor(Math.sqrt(e)))}function _p(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Fp(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Op(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function Dp(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let o=1;o<e.length;++o)o<=t.length?a?r.push(t[o-1]*e[o]):r.push(e[o]/t[o-1]):r.push(e[o]);return r}function Mp(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function zp(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}function Lp(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===U(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,o=r[r.length-1];let s=1;for(let h=0;h<r.length-1;++h)s*=r[h];const i=e.shape,c=r.slice();c.pop();let l=1;for(let h=o;h<n;++h)l*=i[h],c.push(i[h]);const u=[...se(e.shape).map((e=>e/l)),1].slice(0,o);return[c,s,l,u]}const Pp=1.7580993408473768,Bp=1.0507009873554805,Wp=.3275911,Up=.254829592,Vp=-.284496736,Gp=1.421413741,Hp=-1.453152027,jp=1.061405429;function Kp(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function qp(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function Xp(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Yp(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Qp(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Zp(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Jp(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const o=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(o),a[r]=Math.sin(o)}return{real:n,imag:a}}function $p(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const ef="->",tf=/->/g,nf=",",af="...";function rf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(tf,"").length)/ef.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(ef,'").'));const[a,r]=e.split(ef);P(-1===a.indexOf(af),(()=>'The ellipsis notation ("'.concat(af,'") is not supported yet.')));const o=a.split(nf),s=o.length;if(t!==s)throw new Error("Expected ".concat(s," input tensors, received ").concat(t));if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const e=r[h];if(!o.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let h=0;h<a.length;++h){const e=a[h];-1===i.indexOf(e)&&e!==nf&&i.push(e)}const c=new Array(o.length);for(let h=0;h<s;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error("Found duplicate axes in input component ".concat(o[h],". ")+"Support for duplicate axes in input is not implemented yet.");c[h]=[];for(let e=0;e<o[h].length;++e)c[h].push(i.indexOf(o[h][e]))}const l=i.length,u=[];for(let h=r.length;h<l;++h)u.push(h);return{allDims:i,summedDims:u,idDims:c}}function of(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function sf(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:P(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function cf(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let s=0;s<r;++s)a.push([]);const o=[];for(let s=0;s<n.length;++s){const e=uf(t,n[s]);for(const t of e)-1===o.indexOf(t)&&(a[s].push(t),o.push(t))}return{path:n,steps:a}}function lf(e){return e.every(((e,t)=>e===t))}function uf(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function hf(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)P(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);P(r<=1,(()=>"There should be only one negative value in split array."));const o=t.indexOf(-1);if(-1!==o){const a=t.reduce(((e,t)=>t>0?e+t:e));t[o]=e.shape[n]-a}P(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function df(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function pf(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function ff(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function mf(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function gf(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function yf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function bf(e,t){const n=U(e),a=U(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function xf(e,t){const n=U(e),a=U(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function vf(){return"segment ids must be >= 0"}function wf(){return"segment ids are not increasing"}function kf(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function Sf(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function If(e,t){let n,a=!1;for(e<=Rp?(n=e,a=!0):n=oe(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=oe(e,n+1);return n}function Cf(e,t,n){const a=[],r=e.length;for(let o=0;o<r;o++)o!==t?a.push(e[o]):a.push(n);return a}function Nf(e,t,n,a){const r=t.shape.length,o=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>o)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(o,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let h=0;h<a;++h)if(e.shape[h]!==t.shape[h])throw new Error("x.shape[".concat(h,"]: ").concat(e.shape[h]," should be equal to indices.shape[").concat(h,"]: ").concat(t.shape[h],"."));const s=e.shape[n],i=[];let c=1,l=1,u=1;for(let h=0;h<a;++h)i.push(e.shape[h]),c*=e.shape[h];for(let h=a;h<n;h++)i.push(e.shape[h]),l*=e.shape[h];for(let h=a;h<r;h++)i.push(t.shape[h]);for(let h=n+1;h<o;h++)i.push(e.shape[h]),u*=e.shape[h];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:s,outputShape:i}}function Tf(e){try{return e.map((e=>dr(e)))}catch(wJ){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(wJ))}}function Ef(e){return e.map((e=>hr(e)))}!function(){for(const e of si)Gs(e)}();const Rf={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(e,Eh(Ts(n,"float32"),-1))}}},Af={kernelName:Ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ms(Ts(n,"float32")),a=Ds(Ys(Ps(1),t));return eu(Fs(e,a))}}}},_f={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ds(Ys(Ms(Ts(n,"float32")),1));return Fs(e,t)}}}},Ff={kernelName:Ee,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ei(n.shape,a.shape);return{a:()=>{let t=e;const a=$s(n.shape,r);return a.length>0&&(t=Al(t,a)),Nc(t,n.shape)},b:()=>{let t=e;const n=$s(a.shape,r);return n.length>0&&(t=Al(t,n)),Nc(t,a.shape)}}}},Of={kernelName:Re,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},Df={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zs(n)}}},Mf={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>zs(n)}}},zf={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,Ds(Ys(Ps(1),Ms(Ts(n,"float32")))))}}},Lf={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ds(As(Ps(1),Ms(Ts(n,"float32"))));return Fs(e,t)}}}},Pf={kernelName:Pe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ei(n.shape,a.shape);return{a:()=>{const t=As(Ms(n),Ms(a));let o=Os(e,Fs(a,t));const s=$s(n.shape,r);return s.length>0&&(o=Al(o,s)),Nc(o,n.shape)},b:()=>{const t=As(Ms(n),Ms(a));let o=eu(Os(e,Fs(n,t)));const s=$s(a.shape,r);return s.length>0&&(o=Al(o,s)),Nc(o,a.shape)}}}},Bf={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,As(Ms(Ts(n,"float32")),1))}}},Wf={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,Ys(Ps(1),Ms(Ts(n,"float32"))))}}};const Uf=lo({avgPool3dGrad_:function(e,t,n,a,r,o){const s=so(e,"dy","avgPool3dGrad"),i=so(t,"input","avgPool3dGrad");let c=s,l=i,u=!1;4===i.rank&&(u=!0,c=Nc(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]),l=Nc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),P(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),Cc("avgPool3dGrad",r,o);const h={dy:c,input:l},d={filterSize:n,strides:a,pad:r,dimRoundingMode:o},p=Zr.runKernel(Ve,h,d);return u?Nc(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Vf={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:o,pad:s,dimRoundingMode:i}=n;return{x:()=>Uf(e,a,r,o,s,i)}}};const Gf=lo({avgPoolGrad_:function(e,t,n,a,r){const o=so(e,"dy","avgPoolGrad"),s=so(t,"input","avgPoolGrad");P(s.rank===o.rank,(()=>"Rank of input (".concat(s.rank,") does not match rank of dy (").concat(o.rank,")")));let i=s,c=o,l=!1;3===s.rank&&(l=!0,i=Nc(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=Nc(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),P(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},h={filterSize:n,strides:a,pad:r},d=Zr.runKernel(We,u,h);return l?Nc(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Hf={kernelName:Be,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:o,pad:s}=n;return{x:()=>Gf(e,a,r,o,s)}}},jf={kernelName:Ge,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:o,transposeB:s}=n;return o||s?!o&&s?{a:()=>Ac(e,r,!1,!1),b:()=>Ac(e,a,!0,!1)}:o&&!s?{a:()=>Ac(r,e,!1,!0),b:()=>Ac(a,e,!1,!1)}:{a:()=>Ac(r,e,!0,!0),b:()=>Ac(e,a,!0,!0)}:{a:()=>Ac(e,r,!1,!0),b:()=>Ac(a,e,!0,!1)}}},Kf={kernelName:He,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>Du(e,a,r)}}},qf={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,o=a.shape,s=Array.from(o);for(let c=r.length-1;c>=0;c--)if(r[c]===o[c])s[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(o,"]."));const i=[];for(let c=0;c<s.length;c++)s[c]>1&&i.push(c);return{x:()=>Al(e,i,!0)}}},Xf={kernelName:Xe,gradFunc:e=>({x:()=>e.clone()})},Yf={kernelName:Ye,gradFunc:e=>({x:()=>zs(e)})},Qf={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:o}=n;return{x:()=>pl(ou(Vl(a,r),Yl(a,o)),e,zs(e))}}},Zf={kernelName:Je,inputsToSave:["x"],gradFunc:Rf.gradFunc},Jf={kernelName:$e,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,o=Y(r,t[0].shape)[0],s=a.map((e=>e[o]));return Sh(e,s,o).map((e=>()=>e))}},$f={kernelName:et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:o,strides:s,pad:i,dataFormat:c}=n;return P(wc(o),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'"))),{x:()=>Jc(a.shape,e,r,s,i,c),filter:()=>od(a,e,r.shape,s,i,c)}}},em={kernelName:nt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:o,pad:s,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Qc(e,r,o,s,i,1,c),filter:()=>od(e,a,r.shape,o,s,i,c)}}};const tm=lo({conv3DBackpropFilter_:function(e,t,n,a,r){let o=e;4===e.rank&&(o=Nc(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let s=t;4===s.rank&&(s=Nc(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(5===o.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,"."))),P(5===s.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(s.shape,"."))),P(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),P(o.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),P(s.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(s.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:o,dy:s},c={strides:a,pad:r,filterShape:n};return Zr.runKernel(rt,i,c)}}),nm={kernelName:at,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:o}=n;P(wc(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[s,i]=t;return{x:()=>tl(s.shape,e,i,r,o),filter:()=>tm(s,e,i.shape,r,o)}}},am={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(eu(ph(Ts(n,"float32"))),e)}}},rm={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(fh(Ts(n,"float32")),e)}}},om={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:o,reverse:s}=n;return{x:()=>{const t=Cl([r],a.rank);let n=sl(e,r,o,!s);return null!=t&&(n=Qh(n,t)),n}}}},sm={kernelName:pt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:o,dimRoundingMode:s}=n,i=null==a?[1,1]:a;P(wc(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return P(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),P(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),P(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),P(kc(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),Cc("depthwiseConv2d",o,s),{x:()=>dd(c.shape,e,l,r,o,i,s),filter:()=>hd(c,e,l.shape,r,o,i,s)}}},im={kernelName:yt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,o={x:a,filter:r,dy:e},s={x:a,filter:r,dy:e};return{x:()=>Zr.runKernel(bt,o,n),filter:()=>Zr.runKernel(xt,s,n)}}},cm={kernelName:St,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Zr.runKernel(It,a)}}},lm={kernelName:Ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Os(Dl(eu(Ms(n))),2/Math.sqrt(Math.PI));return{x:()=>Os(e,a)}}},um={kernelName:Tt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(e,n)}}},hm={kernelName:Et,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Nc(e,n.shape)}}},dm={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(e,Dl(n))}}},pm={kernelName:Ot,gradFunc:e=>({x:()=>zs(e)})},fm={kernelName:Dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ei(n.shape,a.shape);return{a:()=>{const t=Fs(e,Ts(a,"float32")),o=$s(n.shape,r);return o.length>0?Nc(Al(t,o),n.shape):t},b:()=>{let t=Os(e,Ts(n,"float32"));const o=$s(a.shape,r);o.length>0&&(t=Nc(Al(t,o),a.shape));const s=Ms(a);return eu(Fs(t,Ts(s,"float32")))}}}},mm={kernelName:Mt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,o,s,i]=t,c=null==i?Ps(1):i,l=$s(o.shape,r.shape),u=[];if(1===o.rank){for(let e=0;e<r.shape.length-1;++e)u.push(r.shape[e]);u.push(1)}const h=Ys(r,o),d=Os(e,c),p=ch(As(s,Ps(a))),f=Os(Os(Os(p,p),p),Ps(-.5));return{x:()=>1===o.rank?Nc(Os(Os(e,Ll(Nc(p,[1,1,1,o.shape[0]]),u)),c),r.shape):Nc(Os(Os(e,p),c),r.shape),mean:()=>{let e=Os(Os(p,Ps(-1)),d);return 1===o.rank&&(e=Al(e,l)),Nc(e,o.shape)},variance:()=>{let e=Os(Os(f,h),d);return 1===o.rank&&(e=Al(e,l)),Nc(e,o.shape)},scale:()=>{const t=Os(h,p);let n=Os(e,t);return 1===o.rank&&(n=Al(n,l)),Nc(n,o.shape)},offset:()=>{let t=e;return 1===o.rank&&(t=Al(t,l)),Nc(t,o.shape)}}}},gm={kernelName:zt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:o,batchDims:s}=n,i=Y(o,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,s=a.slice(0,i),c=s.length,l=a.slice(o,a.length).slice(1),u=l.length,h=ym(0,c),d=ym(c+1,c+1+u),p=bm([s,[r],l]),f=Nc(n,p),m=Nc(t,[r]),g=bm([[c],h,d]),y=Qh(f,g);let b=Gh(y,m,e.shape[i]);const x=Nl(g);return b=Qh(b,x),b};if(1===s){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=Th(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function ym(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function bm(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const xm={kernelName:Bt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>zs(n),b:()=>zs(a)}}},vm={kernelName:Wt,gradFunc:e=>({x:()=>Ts(e,"float32")})},wm={kernelName:Gt,gradFunc:e=>({x:()=>zs(e)})},km={kernelName:Ht,gradFunc:e=>({x:()=>zs(e)})},Sm={kernelName:jt,gradFunc:e=>({x:()=>zs(e)})},Im={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,o=Ul(a,0);return{x:()=>pl(o,e,Os(e,r))}}},Cm={kernelName:Zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,As(n,1))}}},Nm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,Ts(n,"float32"))}}},Tm={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=Dl(a);return Ys(e,Os(Al(e,r,!0),t))}}}};const Em=lo({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return Zr.runKernel(nn,a,r)}}),Rm={kernelName:tn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:o,bias:s,alpha:i,beta:c}=n;return{x:()=>Em(a,r,e,o,s,i,c)}}};function Am(e,t,n,a){return t.rank<n.rank&&(t=Nc(t,Sl(t.shape,a))),e.rank<n.rank&&(e=Nc(e,Sl(e.shape,a))),{x:()=>Os(e,Ts(dl(n,t),e.dtype))}}const _m={kernelName:an,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,o=t[0],s=Am(e,t[1],o,Y(r,o.shape));return{x:()=>s.x()}}},Fm={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Os(e,Ts(Vl(n,a),"float32")),b:()=>Os(e,Ts(Xl(n,a),"float32"))}}};const Om=lo({maxPool3dGrad_:function(e,t,n,a,r,o,s){const i=so(e,"dy","maxPool3dGrad"),c=so(t,"input","maxPool3dGrad"),l=so(n,"output","maxPool3dGrad");let u=i,h=c,d=l,p=!1;4===c.rank&&(p=!0,u=Nc(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=Nc(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=Nc(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),P(5===h.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(h.rank,"."))),P(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(d.rank,"."))),Cc("maxPool3dGrad",o,s);const f={dy:u,input:h,output:d},m={filterSize:a,strides:r,pad:o,dimRoundingMode:s},g=Zr.runKernel(ln,f,m);return p?Nc(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Dm={kernelName:cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=n;return{x:()=>Om(e,a,r,o,s,i,c)}}};const Mm=lo({maxPoolGrad_:function(e,t,n,a,r,o,s){const i=so(e,"dy","maxPoolGrad"),c=so(t,"input","maxPoolGrad"),l=so(n,"output","maxPoolGrad");P(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),P(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),P(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),Cc("maxPoolGrad",o,s);const u={dy:i,input:c,output:l},h={filterSize:a,strides:r,pad:o,dimRoundingMode:s};return Zr.runKernel(sn,u,h)}}),zm={kernelName:on,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:o,strides:s,pad:i}=n;return{x:()=>Mm(e,a,r,o,s,i)}}},Lm={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,o=r.map((e=>e[0]));return{x:()=>Fc(e,o,a.shape)}}},Pm={kernelName:Cn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return Hh(e,a).map((e=>()=>e))}},Bm={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,o=r.map((e=>e[0]));return{x:()=>Fc(e,o,a.shape)}}},Wm={kernelName:Tn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,o=n,s=a,i=ei(o.shape,s.shape);return{a:()=>{const t=Ts(s,"float32");let n=Os(e,Os(t,Xs(o,Ys(t,Ps(1)))));const a=$s(o.shape,i);return a.length>0&&(n=Al(n,a)),Nc(n,o.shape)},b:()=>{const t=Ul(o,0),n=pl(t,Jl(o),zs(o));let a=Os(e,Os(r,n));const c=$s(s.shape,i);return c.length>0&&(a=Al(a,c)),Nc(a,s.shape)}}}};function Um(e,t,n){const a=e.shape.length,r=a-n.length,o=Cl(n,a);let s=e;null!=o&&(s=Qh(e,o));const i=s.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=Nc(t,a),o=ol(e,n,!0,!1),s=ol(e,n,!0,!0),i=Os(o,s);return Os(r,i)}(s.reshape(i),t,r);if(l=l.reshape(s.shape),null!=o){const e=Nl(o);l=Qh(l,e)}return l}const Vm={kernelName:Qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ul(n,Ps(0)),a=Ps(Pp),r=Ps(Bp),o=Os(e,r),s=Os(Os(e,a),Dl(Ts(n,"float32")));return pl(t,o,s)}}}},Gm={kernelName:oa,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>Mc(e,a,r)}}},Hm={kernelName:sa,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>Rc(e,a)}}},jm={kernelName:Sa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=zs(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=As(t,Fc(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let o=0;o<r[1];++o)t=As(t,Fc(e,[n*a.shape[0],o*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let o=0;o<r[1];++o)for(let s=0;s<r[2];++s)t=As(t,Fc(e,[n*a.shape[0],o*a.shape[1],s*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let o=0;o<r[1];++o)for(let s=0;s<r[2];++s)for(let i=0;i<r[3];++i)t=As(t,Fc(e,[n*a.shape[0],o*a.shape[1],s*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}};const Km=[Rf,Af,_f,Ff,Of,Df,Mf,zf,Lf,Pf,Bf,Wf,Vf,Hf,jf,Kf,qf,Xf,Yf,Qf,Zf,Jf,em,$f,nm,am,rm,om,sm,im,{kernelName:wt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ei(n.shape,a.shape);return{a:()=>{const t=Fs(e,Ts(a,"float32")),o=$s(n.shape,r);return o.length>0?Nc(Al(t,o),n.shape):t},b:()=>{let t=Os(e,Ts(n,"float32"));const o=$s(a.shape,r);o.length>0&&(t=Nc(Al(t,o),a.shape));const s=Ms(a);return eu(Fs(t,Ts(s,"float32")))}}}},cm,lm,um,hm,dm,fm,pm,mm,gm,xm,vm,wm,km,Sm,Im,Cm,Nm,Tm,Rm,_m,_m,Fm,Dm,zm,{kernelName:hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,o=Y(r,a.shape),s=U(kl(a.shape,o)[1]);return{x:()=>{const t=a.shape.slice();o.forEach((e=>{t[e]=1}));const n=Nc(e,t);return Fs(Os(n,yu(a.shape,"float32")),s)}}}},{kernelName:dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[o,s]=t,i=Am(e,s,o,Y(r,o.shape));return{x:()=>i.x()}}},{kernelName:pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Os(e,Ts(Yl(n,a),"float32")),b:()=>Os(e,Ts(Ul(n,a),"float32"))}}},Lm,{kernelName:mn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ei(n.shape,a.shape);return{a:()=>{const t=$s(n.shape,r);return t.length>0?Nc(Al(e,t),n.shape):e},b:()=>{const t=Os(e,eu(Bl(Fs(n,a)))),o=$s(a.shape,r);return o.length>0?Nc(Al(t,o),a.shape):t}}}},{kernelName:yn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ei(n.shape,a.shape);return{a:()=>{const t=Os(e,Ts(a,"float32")),o=$s(n.shape,r);return o.length>0?Nc(Al(t,o),n.shape):t},b:()=>{const t=Os(e,Ts(n,"float32")),o=$s(a.shape,r);return o.length>0?Nc(Al(t,o),a.shape):t}}}},{kernelName:bn,gradFunc:e=>({x:()=>eu(e)})},{kernelName:In,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>gu(n.shape,"float32")}}},{kernelName:Sn,gradFunc:e=>({x:()=>zs(e)})},Pm,Bm,Bm,Wm,{kernelName:En,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=Ul(n,0);return{x:()=>pl(r,e,Os(e,a)),alpha:()=>{let t=pl(r,zs(e),Os(e,n));const o=$s(a.shape,e.shape);return o.length>0&&(t=Al(t,o)),Nc(t,a.shape)}}}},{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let o=[];return o=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Um(a,e,o)}}},{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,eu(Ms(n)))}}},{kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=Os(Yl(n,6),Eh(n));return{x:()=>Os(e,Ts(a,"float32"))}}},{kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(e,Ts(Eh(n),"float32"))}}},{kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Nc(e,n.shape)}}},{kernelName:Wn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Zr.runKernel(Un,r,n)}}},{kernelName:Pn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Zr.runKernel(Bn,r,n)}}},{kernelName:Gn,gradFunc:(e,t,n)=>{const{dims:a}=n,r=Y(a,e.shape);return{x:()=>nh(e,r)}}},{kernelName:Hn,gradFunc:e=>({x:()=>zs(e)})},{kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>eu(Fs(e,Os(Xs(n,1.5),2)))}}},{kernelName:Yn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ts(zs(n),"float32"),t:()=>Os(e,Ts(n,e.dtype)),e:()=>Os(e,Ts(su(n),e.dtype))}}},Vm,{kernelName:ta,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(e,Os(n,Ys(Ps(1),n)))}}},{kernelName:ea,gradFunc:e=>({x:()=>zs(e)})},{kernelName:Jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(al(Ts(n,"float32")),e)}}},{kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(rl(Ts(n,"float32")),e)}}},{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:o}=n,s=a.shape,[i,c]=Qi(a,r,o),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],s[u]-i[u]-c[u]]);return{x:()=>Ru(e,l)}}},{kernelName:ia,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,o=Os(e,a);return{logits:()=>Ys(o,Os(Al(o,[r],true),a))}}},{kernelName:na,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(e,_c(n))}}},Gm,Gm,Hm,Hm,{kernelName:aa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,Os(Ds(Ts(n,"float32")),2))}}},{kernelName:pa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Ps(2);return{a:()=>Os(e,Os(r,Ys(n,a))),b:()=>Os(e,Os(r,Ys(a,n)))}}},{kernelName:fa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(e,Os(Ts(n,"float32"),2))}}},{kernelName:_a,gradFunc:e=>({x:()=>zs(e)})},{kernelName:va,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=ei(n.shape,a.shape);return{a:()=>{let t=e;const a=$s(n.shape,r);return a.length>0&&(t=Al(t,a)),Nc(t,n.shape)},b:()=>{let t=e;const n=$s(a.shape,r);return n.length>0&&(t=Al(t,n)),Nc(eu(t),a.shape)}}}},{kernelName:ra,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:o}=n;Y(o,a.shape).forEach((e=>{r[e]=1}));const s=Nc(e,r),i=Os(s,yu(a.shape,"float32"));return{x:()=>i}}},{kernelName:wa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Fs(e,Ms(al(n)))}}},{kernelName:ka,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Os(Ys(Ps(1),Ms(n)),e)}}},jm,{kernelName:Na,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,o=Nl(r);return{x:()=>Qh(e,o)}}},{kernelName:Ea,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>Th(e,r)}}},{kernelName:Ra,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=ti(t,zs(t)),a=Wl(e,n);let r=Vl(t,Ps(0,"int32"));const o=a.rank-r.rank;for(let i=0;i<o;++i)r=Ml(r,i+1);r=ou(r,yu(a.shape,"bool"));const s=zs(a);return pl(r,a,s)}(e,n)}}},{kernelName:Aa,gradFunc:e=>({x:()=>zs(e)})}];for(const n of Km)ja(n);_r().prototype.abs=function(){return this.throwIfDisposed(),Zs(this)},_r().prototype.acos=function(){return this.throwIfDisposed(),$i(this)},_r().prototype.acosh=function(){return this.throwIfDisposed(),ec(this)},_r().prototype.add=function(e){return this.throwIfDisposed(),As(this,e)},_r().prototype.all=function(e,t){return this.throwIfDisposed(),nc(this,e,t)},_r().prototype.any=function(e,t){return this.throwIfDisposed(),ac(this,e,t)},_r().prototype.argMax=function(e){return this.throwIfDisposed(),rc(this,e)},_r().prototype.argMin=function(e){return this.throwIfDisposed(),oc(this,e)},_r().prototype.asScalar=function(){return this.throwIfDisposed(),P(1===this.size,(()=>"The array must have only 1 element.")),Nc(this,[])},_r().prototype.asType=function(e){return this.throwIfDisposed(),Ts(this,e)},_r().prototype.as1D=function(){return this.throwIfDisposed(),Nc(this,[this.size])},_r().prototype.as2D=function(e,t){return this.throwIfDisposed(),Nc(this,[e,t])},_r().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Nc(this,[e,t,n])},_r().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),Nc(this,[e,t,n,a])},_r().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),Nc(this,[e,t,n,a,r])},_r().prototype.asin=function(){return this.throwIfDisposed(),sc(this)},_r().prototype.asinh=function(){return this.throwIfDisposed(),ic(this)},_r().prototype.atan=function(){return this.throwIfDisposed(),cc(this)},_r().prototype.atan2=function(e){return this.throwIfDisposed(),lc(this,e)},_r().prototype.atanh=function(){return this.throwIfDisposed(),uc(this)},_r().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Tc(this,e,t,n,a)},_r().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Mc(this,e,t)},_r().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),zc(this,e,t,n,a,r)},_r().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Gc(this,e)},_r().prototype.cast=function(e){return this.throwIfDisposed(),Ts(this,e)},_r().prototype.ceil=function(){return this.throwIfDisposed(),Hc(this)},_r().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),jc(this,e,t)},_r().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ar&&(e=[e]),Rc([this,...e],t)},_r().prototype.conv1d=function(e,t,n,a,r,o){return this.throwIfDisposed(),Zc(this,e,t,n,a,r,o)},_r().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),$c(this,e,t,n,a,r)},_r().prototype.conv2d=function(e,t,n,a,r,o){return this.throwIfDisposed(),Qc(this,e,t,n,a,r,o)},_r().prototype.cos=function(){return this.throwIfDisposed(),al(this)},_r().prototype.cosh=function(){return this.throwIfDisposed(),rl(this)},_r().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),ol(this,e,t,n)},_r().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),sl(this,e,t,n)},_r().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),cl(this,e,t)},_r().prototype.depthwiseConv2d=function(e,t,n,a,r,o){return this.throwIfDisposed(),ll(this,e,t,n,a,r,o)},_r().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),hl(this,e,t,n,a,r)},_r().prototype.divNoNan=function(e){return this.throwIfDisposed(),fl(this,e)},_r().prototype.div=function(e){return this.throwIfDisposed(),Fs(this,e)},_r().prototype.dot=function(e){return this.throwIfDisposed(),ml(this,e)},_r().prototype.elu=function(){return this.throwIfDisposed(),yl(this)},_r().prototype.equal=function(e){return this.throwIfDisposed(),dl(this,e)},_r().prototype.erf=function(){return this.throwIfDisposed(),xl(this)},_r().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Ol(this,e,t)},_r().prototype.exp=function(){return this.throwIfDisposed(),Dl(this)},_r().prototype.expandDims=function(e){return this.throwIfDisposed(),Ml(this,e)},_r().prototype.expm1=function(){return this.throwIfDisposed(),zl(this)},_r().prototype.fft=function(){return this.throwIfDisposed(),vh(this)},_r().prototype.flatten=function(){return this.throwIfDisposed(),Nc(this,[this.size])},_r().prototype.floor=function(){return this.throwIfDisposed(),Bl(this)},_r().prototype.floorDiv=function(e){return this.throwIfDisposed(),_s(this,e)},_r().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Wl(this,e,t,n)},_r().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Vl(this,e)},_r().prototype.greater=function(e){return this.throwIfDisposed(),Ul(this,e)},_r().prototype.ifft=function(){return this.throwIfDisposed(),wh(this)},_r().prototype.irfft=function(){return this.throwIfDisposed(),kh(this)},_r().prototype.isFinite=function(){return this.throwIfDisposed(),Hl(this)},_r().prototype.isInf=function(){return this.throwIfDisposed(),jl(this)},_r().prototype.isNaN=function(){return this.throwIfDisposed(),Kl(this)},_r().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ql(this,e)},_r().prototype.lessEqual=function(e){return this.throwIfDisposed(),Yl(this,e)},_r().prototype.less=function(e){return this.throwIfDisposed(),Xl(this,e)},_r().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Zl(this,e,t,n,a)},_r().prototype.logSigmoid=function(){return this.throwIfDisposed(),nu(this)},_r().prototype.logSoftmax=function(e){return this.throwIfDisposed(),au(this,e)},_r().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ru(this,e,t)},_r().prototype.log=function(){return this.throwIfDisposed(),Jl(this)},_r().prototype.log1p=function(){return this.throwIfDisposed(),$l(this)},_r().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ou(this,e)},_r().prototype.logicalNot=function(){return this.throwIfDisposed(),su(this)},_r().prototype.logicalOr=function(e){return this.throwIfDisposed(),iu(this,e)},_r().prototype.logicalXor=function(e){return this.throwIfDisposed(),cu(this,e)},_r().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Ac(this,e,t,n)},_r().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),du(this,e,t,n,a)},_r().prototype.max=function(e,t){return this.throwIfDisposed(),El(this,e,t)},_r().prototype.maximum=function(e){return this.throwIfDisposed(),ti(this,e)},_r().prototype.mean=function(e,t){return this.throwIfDisposed(),mu(this,e,t)},_r().prototype.min=function(e,t){return this.throwIfDisposed(),Rl(this,e,t)},_r().prototype.minimum=function(e){return this.throwIfDisposed(),xu(this,e)},_r().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),vu(this,e,t)},_r().prototype.mod=function(e){return this.throwIfDisposed(),wu(this,e)},_r().prototype.mul=function(e){return this.throwIfDisposed(),Os(this,e)},_r().prototype.neg=function(){return this.throwIfDisposed(),eu(this)},_r().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Fl(this,e,t,n)},_r().prototype.notEqual=function(e){return this.throwIfDisposed(),Cu(this,e)},_r().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Nu(this,e,t,n)},_r().prototype.onesLike=function(){return this.throwIfDisposed(),Tu(this)},_r().prototype.pad=function(e,t){return this.throwIfDisposed(),Ru(this,e,t)},_r().prototype.pool=function(e,t,n,a,r,o){return this.throwIfDisposed(),Mu(this,e,t,n,a,r,o)},_r().prototype.pow=function(e){return this.throwIfDisposed(),Xs(this,e)},_r().prototype.prelu=function(e){return this.throwIfDisposed(),zu(this,e)},_r().prototype.prod=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},_r().prototype.reciprocal=function(){return this.throwIfDisposed(),$u(this)},_r().prototype.relu=function(){return this.throwIfDisposed(),eh(this)},_r().prototype.relu6=function(){return this.throwIfDisposed(),th(this)},_r().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Nc(this,e.shape)},_r().prototype.reshape=function(e){return this.throwIfDisposed(),Nc(this,e)},_r().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Wd(this,e,t,n)},_r().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Ud(this,e,t,n)},_r().prototype.reverse=function(e){return this.throwIfDisposed(),nh(this,e)},_r().prototype.rfft=function(){return this.throwIfDisposed(),Ih(this)},_r().prototype.round=function(){return this.throwIfDisposed(),ih(this)},_r().prototype.rsqrt=function(){return this.throwIfDisposed(),ch(this)},_r().prototype.selu=function(){return this.throwIfDisposed(),lh(this)},_r().prototype.separableConv2d=function(e,t,n,a,r,o){return this.throwIfDisposed(),uh(this,e,t,n,a,r,o)},_r().prototype.sigmoid=function(){return this.throwIfDisposed(),_c(this)},_r().prototype.sign=function(){return this.throwIfDisposed(),dh(this)},_r().prototype.sin=function(){return this.throwIfDisposed(),ph(this)},_r().prototype.sinh=function(){return this.throwIfDisposed(),fh(this)},_r().prototype.slice=function(e,t){return this.throwIfDisposed(),Fc(this,e,t)},_r().prototype.softmax=function(e){return this.throwIfDisposed(),xh(this,e)},_r().prototype.softplus=function(){return this.throwIfDisposed(),tu(this)},_r().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Du(this,e,t)},_r().prototype.split=function(e,t){return this.throwIfDisposed(),Sh(this,e,t)},_r().prototype.sqrt=function(){return this.throwIfDisposed(),Ds(this)},_r().prototype.square=function(){return this.throwIfDisposed(),Ms(this)},_r().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ch(this,e)},_r().prototype.squeeze=function(e){return this.throwIfDisposed(),Nh(this,e)},_r().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ar?[this,e]:[this,...e];return Th(n,t)},_r().prototype.step=function(e){return this.throwIfDisposed(),Eh(this,e)},_r().prototype.stridedSlice=function(e,t,n,a,r,o,s,i){return this.throwIfDisposed(),Rh(this,e,t,n,a,r,o,s,i)},_r().prototype.sub=function(e){return this.throwIfDisposed(),Ys(this,e)},_r().prototype.sum=function(e,t){return this.throwIfDisposed(),Al(this,e,t)},_r().prototype.tan=function(){return this.throwIfDisposed(),Ah(this)},_r().prototype.tanh=function(){return this.throwIfDisposed(),Oc(this)},_r().prototype.tile=function(e){return this.throwIfDisposed(),Ll(this,e)},_r().prototype.toBool=function(){return this.throwIfDisposed(),Ts(this,"bool")},_r().prototype.toFloat=function(){return this.throwIfDisposed(),Ts(this,"float32")},_r().prototype.toInt=function(){return this.throwIfDisposed(),Ts(this,"int32")},_r().prototype.topk=function(e,t){return this.throwIfDisposed(),Wh(this,e,t)},_r().prototype.transpose=function(e){return this.throwIfDisposed(),Qh(this,e)},_r().prototype.unique=function(e){return this.throwIfDisposed(),Vh(this,e)},_r().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},_r().prototype.unstack=function(e){return this.throwIfDisposed(),Hh(this,e)},_r().prototype.where=function(e,t){return this.throwIfDisposed(),pl(e,this,t)},_r().prototype.zerosLike=function(){return this.throwIfDisposed(),zs(this)};class qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,qm.prototype)}}class Xm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Xm.prototype)}}class Ym extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ym.prototype)}}class Qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qm.prototype)}}class Zm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zm.prototype)}}Error;class Jm{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function $m(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function eg(e,t){if(!e)throw new Zm(t)}function tg(e,t){let n=0;for(const a of e)a===t&&n++;return n}function ng(e){return 1===e.length?e[0]:e}function ag(e){return Array.isArray(e)?e:[e]}function rg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function og(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let sg={};function ig(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function cg(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>cg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?cg(t):e[n]=t.value)}}}function lg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let o;if(r in n)o=n[r];else if(r in sg)o=sg[r];else if(o=t[r],null==o)throw new Ym("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return o}{const o=e;if(null==o.className||null==o.config)throw new Ym("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(o),".\n")+"'className' and 'config' must set.");const s=o.className;let i,c;if(s in n?[i,c]=n[s]:s in sg?[i,c]=sg.className:s in t&&([i,c]=t[s]),null==i)throw new Ym("Unknown ".concat(a,": ").concat(s,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(sg))e[n]=sg[n];for(const r of Object.keys(n))e[r]=n[r];o.config.customObjects=e;const t=Object.assign({},sg);for(const r of Object.keys(n))sg[r]=n[r];cg(o.config);const a=c(i,o.config,n,r);return sg=Object.assign({},t),a}{const e=Object.assign({},sg);for(const a of Object.keys(n))sg[a]=n[a];const t=new i(o.config);return sg=Object.assign({},e),t}}}function ug(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function hg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function dg(e){if(null==e)throw new Ym("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function pg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Ym("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function fg(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return eg(n>=0),eg(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function mg(e,t){Array.isArray(e)?(P(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>mg(e,"element ".concat(n+1," of ").concat(t))))):P(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(gg(e),".")))}function gg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>gg(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function yg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let bg=0;function xg(){return bg++}const vg={};function wg(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in vg||(vg[e]=0),vg[e]+=1,e+vg[e].toString()}const kg=["channelsFirst","channelsLast"],Sg=["nearest","bilinear"],Ig=["valid","same","causal"],Cg=["max","avg"],Ng=["sum","mul","concat","ave"],Tg=new Map;function Eg(e){pg(kg,"DataFormat",e)}function Rg(e){pg(Ig,"PaddingMode",e)}function Ag(e){pg(Cg,"PoolMode",e)}const _g=[],Fg="/";function Og(e,t){_g.push(e);try{const e=t();return _g.pop(),e}catch(n){throw _g.pop(),n}}function Dg(e){if(!Lg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===_g.length?"":_g.join(Fg)+Fg)+e}function Mg(e){if(!Lg(e))throw new Error("Not a valid tensor name: '"+e+"'");Tg.has(e)||Tg.set(e,0);const t=Tg.get(e);if(Tg.set(e,Tg.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return Tg.set(n,1),n}return e}const zg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Lg(e){return!!e.match(zg)}function Pg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Bg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function Wg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function Ug(e,t){if(t<e)throw new Ym("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let Vg;function Gg(){return null==Vg&&(Vg=So().epsilon()),Vg}function Hg(e,t){return Ts(e,t)}function jg(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Nc(e,n)}function Kg(e,t,n){return bo((()=>{switch(e.rank){case 1:return mh(e,t,n);case 2:return gh(e,[t,0],[n,e.shape[1]]);case 3:return yh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return bh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Fc(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Fc(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Ym("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function qg(e,t,n){return bo((()=>{switch(e.rank){case 1:return mh(e,t,n);case 2:return gh(e,[0,t],[e.shape[0],n]);case 3:return yh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return bh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Ym("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Xg(e,t,n,a){return bo((()=>{switch(e.rank){case 1:return mh(e,t,n);case 2:switch(a){case 1:return Kg(e,t,n);case 2:return qg(e,t,n);default:throw new Ym("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return Kg(e,t,n);case 2:return yh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return qg(e,t,n);default:throw new Ym("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return Kg(e,t,n);case 2:return bh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return bh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return qg(e,t,n);default:throw new Ym("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Ym("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Yg(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Rc(e,n)}function Qg(e,t){switch(e.rank){case 1:return Kc([e,t]);case 2:return qc([e,t],0);case 3:return Xc([e,t],0);case 4:return Yc([e,t],0);default:throw new Ym("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Zg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Ym("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return Ll(e,t)}function Jg(e){return qu(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,arguments.length>3?arguments[3]:void 0,arguments.length>4?arguments[4]:void 0)}function $g(e,t,n,a){if(e.rank<2||t.rank<2)throw new Qm("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Qm("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){return fd({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?ny(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),o=r.pop();e=Nc(e,[-1,o]);const s=t.shape.slice(),i=s.pop(),c=s.pop(),l=[...s,i],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Nc(Qh(t,u),[c,-1]);const h=[...r,...l];return Nc(fd({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?ny(e.rank,a,"channelsLast"):null,activation:n}),h)}}function ey(e,t,n){return bo((()=>(t=Array.isArray(t)?_h(t,"int32"):Ts(t,"int32"),Wl(e,t,n))))}function ty(e){return Os(e,e)}function ny(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Ym("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?Nc(t,[1,a[0],1,1,1]):Nc(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?Nc(t,[1,1,1,1,a[0]]):Nc(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?Nc(t,[1,a[0],1,1]):Nc(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?Nc(t,[1,1,1,a[0]]):Nc(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?Nc(t,[1,a[0],1]):Nc(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?Nc(t,[1,1,a[0]]):Nc(t,[1].concat(a))}else if(e<3)return t;throw new Ym("Unsupported input rank by biasAdd: ".concat(t.rank))}function ay(e,t,n){return bo((()=>(null==n&&(n="channelsLast"),Eg(n),As(e,ny(e.rank,t,n)))))}function ry(e,t,n,a){return bo((()=>td(e,t,n,a)))}function oy(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const sy=["fanIn","fanOut","fanAvg"],iy=["normal","uniform","truncatedNormal"];class cy extends Us{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ly extends cy{apply(e,t){return gu(e,t)}}ly.className="Zeros",Gs(ly);class uy extends cy{apply(e,t){return yu(e,t)}}uy.className="Ones",Gs(uy);class hy extends cy{constructor(e){if(super(),"object"!==typeof e)throw new Ym("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Ym("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return bo((()=>Os(Ps(this.value),yu(e,t))))}getConfig(){return{value:this.value}}}hy.className="Constant",Gs(hy);class dy extends cy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yu(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}dy.className="RandomUniform",Gs(dy);class py extends cy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm("randomNormal does not support dType ".concat(t,"."));return Jg(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}py.className="RandomNormal",Gs(py);class fy extends cy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm("truncatedNormal does not support dType ".concat(t,"."));return Uh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}fy.className="TruncatedNormal",Gs(fy);class my extends cy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return bo((()=>{if(2!==e.length||e[0]!==e[1])throw new Ym("Identity matrix initializer can only be used for 2D square matrices.");return Os(this.gain,Pl(e[0]))}))}getConfig(){return{gain:this.gain}}}my.className="Identity",Gs(my);class gy extends cy{constructor(e){if(super(),e.scale<0)throw new Ym("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,pg(sy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){pg(iy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Eg(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=Pg(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=Pg(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=Pg(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let o=this.scale;if("fanIn"===this.mode?o/=Math.max(1,a):"fanOut"===this.mode?o/=Math.max(1,r):o/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(o);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm("".concat(this.getClassName()," does not support dType ").concat(t,"."));return Uh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*o);return Yu(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}gy.className="VarianceScaling",Gs(gy);class yy extends gy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gy.className}}yy.className="GlorotUniform",Gs(yy);class by extends gy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gy.className}}by.className="GlorotNormal",Gs(by);class xy extends gy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gy.className}}xy.className="HeNormal",Gs(xy);class vy extends gy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gy.className}}vy.className="HeUniform",Gs(vy);class wy extends gy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return gy.className}}wy.className="LeCunNormal",Gs(wy);class ky extends gy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return gy.className}}ky.className="LeCunUniform",Gs(ky);class Sy extends cy{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return bo((()=>{if(e.length<2)throw new Qm("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=U(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const o=Jg([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),s=mp.qr(o,!1);let i=s[0];const c=s[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=Os(i,c.sign()),n<a&&(i=i.transpose()),Os(Ps(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Sy.className="Orthogonal",Gs(Sy);const Iy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Cy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lg(e,Vs.getMap().classNameMap,t,"initializer")}function Ny(e){return ig(e)}function Ty(e){if("string"===typeof e){const t=e in Iy?Iy[e]:e;if("GlorotNormal"===t)return new by;if("GlorotUniform"===t)return new yy;if("HeNormal"===t)return new xy;if("HeUniform"===t)return new vy;if("LeCunNormal"===t)return new wy;if("LeCunUniform"===t)return new ky;{const e={};return e.className=t,e.config={},Cy(e)}}return e instanceof cy?e:Cy(e)}function Ey(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ry(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ay(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Ym("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function _y(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Ym("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Fy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Oy="Variable";class Dy{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Oy,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=xg(),n=null==n?Oy:n,this.originalName=Dg(n),this.name=Mg(this.originalName),this.trainable_=a,this.constraint=r,this.val=Kh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function My(e){return e.map((e=>e.read()))}function zy(e){e.forEach((e=>{e[0].write(e[1])}))}class Ly{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Py{constructor(e,t,n,a,r,o,s){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=s,this.id=xg(),null!=o&&(this.originalName=Dg(o),this.name=Mg(this.originalName)),this.rank=t.length}}let By=0;class Wy{constructor(e,t){this.callArgs=t,this.id=By++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Uy=0;class Vy extends Us{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Uy++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=rg(e)+"_"+wg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Xm("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Ym("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return ng(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ng(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new qm("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new qm("Layer ".concat(this.name)+" is not connected, no input to return.");return ng(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new qm("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new qm("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return ng(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=ag(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=ag(this.inputSpec);if(t.length!==n.length)throw new Ym("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const o=e.rank;if(null!=r.ndim&&o!==r.ndim)throw new Ym("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(o));if(null!=r.maxNDim&&o>r.maxNDim)throw new Ym("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(o));if(null!=r.minNDim&&o<r.minNDim)throw new Ym("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(o,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new Ym("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),o=r.axes[e],s=n>=0?t[n]:t[t.length+n];if(null!=o&&-1===[o,null].indexOf(s))throw new Ym("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(o," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],o=e.shape[t];if(null!=n&&null!=o&&n!==o)throw new Ym("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ag(e),a=function(e){let t=!0;for(const n of ag(e))if(!(n instanceof Py)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of ag(e))if(n instanceof Py){t=!1;break}return t}(e);if(a===r)throw new Ym("Arguments to apply() must be all SymbolicTensors or all Tensors");return Og(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ag(e))t.push(n.shape);this.build(ng(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=ag(a),o=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),o.push(e);if(a=ng(o),null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=ag(e);const t=[];for(const n of e)t.push(n.shape);return ng(t)}(e),a=this.computeOutputShape(n);let r;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new Py(o,n,this,ag(e),t,this.name,a))):new Py(o,a,this,ag(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new qm("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new qm("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Xm("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Fy(this.weights)}build(e){this.built=!0}getWeights(){return My(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){bo((()=>{const t=this.weights;if(t.length!==e.length)throw new Ym('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=My(t);for(let r=0;r<a.length;++r){const o=a[r],s=t[r],i=e[r];if(!G(o.shape,i.shape))throw new Ym("Layer weight shape ".concat(o.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([s,i])}zy(n)}))}addWeight(e,t,n,a,r,o,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Ym("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Ty("zeros"));const c=a.apply(t,n),l=new Dy(c,n,e,o,s);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==o&&(o=!0),o?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ag(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=ag(t),o=ag(a);if(r.length!==o.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let s=0;s<r.length;s++)r[s].kerasMask=o[s]}addInboundNode(e,t,n,a,r,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=ag(e);t=ag(t),n=ag(n),a=ag(a),r=Ry(r),o=Ry(o);const c=[],l=[],u=[];for(const h of i)c.push(h.sourceLayer),l.push(h.nodeIndex),u.push(h.tensorIndex);new Wy({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:o},s);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Gy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=Gy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class Hy extends Vy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:wg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Ym("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Ym("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Ym("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new Py(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Wy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Ym("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Hy.className="InputLayer",Gs(Hy);class jy{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof jy)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Ym("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ts(t,e.dtype)}catch(wJ){throw new Ym("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Py){if(null==this.id2Value[e.id])throw new Ym("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ym("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof Py){if(null==this.id2Value[e.id])throw new Ym("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Ym("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&xo(this.id2Mask)}}const Ky=new Jm,qy=new Jm;function Xy(e,t,n,a){const r=null!=n&&n.training,o=Array.isArray(e),s=o?e:[e],i=s.map((e=>e.name)),c=[],l=t.names();for(const f of i)-1!==l.indexOf(f)?c.push(t.getValue(f)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+t.names().sort().join(",");let h,d=Ky.get(u);if(null==d){const e=function(e,t){P(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=Qy(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const o of e){const{sorted:e,recipientMap:s}=Qy(o,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in s)null==a[t]&&(a[t]=new Set),s[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Yy(a)}}(s,t);d=e.sorted,h=e.recipientCounts,Ky.put(u,d),qy.put(u,h)}h={},r||Object.assign(h,qy.get(u));const p=new jy(t);for(let f=0;f<d.length;++f){if(null!=a){const e=yo().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[f],o=e.sourceLayer;if(o instanceof Hy)continue;const s=[],l=[],u=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),a=p.getMask(n);s.push(e),l.push(a),null!=a&&(m=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||u.push(e))}m&&((n=n||{}).mask=l[0]);const g=ag(o.apply(s,n));let y=null;o.supportsMasking&&(y=o.computeMask(s,l));const b=Zy(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){p.hasKey(x[t])||p.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(x[t].name);-1!==e&&(c[e]=g[t])}r||xo(u)}return p.disposeMasks(),o?c:c[0]}function Yy(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Qy(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const o=[],s=[];for(o.push(e);o.length>0;){const e=o[o.length-1];if(n.has(e.name)){o.pop();continue}const t=s[s.length-1]===o.length-1;if(0===e.inputs.length||t)o.pop(),a.push(e),n.add(e.name),t&&s.pop();else{s.push(o.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||o.push(t)}}return{sorted:a,recipientMap:r}}function Zy(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Jy(e,t){return bo((()=>Ds(Al(Os(e,e),t,!0))))}ve().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Ky&&Ky.setMaxEntries(e),null!=qy&&qy.setMaxEntries(e)}));class $y extends Us{getConfig(){return{}}}class eb extends $y{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bo((()=>{const t=Jy(e,this.axis),n=jc(t,0,this.maxValue);return Os(e,Fs(n,As(Gg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}eb.className="MaxNorm",Gs(eb);class tb extends $y{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bo((()=>Fs(e,As(Gg(),Jy(e,this.axis)))))}getConfig(){return{axis:this.axis}}}tb.className="UnitNorm",Gs(tb);class nb extends $y{apply(e){return eh(e)}}nb.className="NonNeg",Gs(nb);class ab extends $y{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return bo((()=>{const t=Jy(e,this.axis),n=As(Os(this.rate,jc(t,this.minValue,this.maxValue)),Os(1-this.rate,t));return Os(e,Fs(n,As(Gg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}ab.className="MinMaxNorm",Gs(ab);const rb={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ob(e){return ig(e)}function sb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lg(e,Vs.getMap().classNameMap,t,"constraint")}function ib(e){if(null==e)return null;if("string"===typeof e){return sb({className:e in rb?rb[e]:e,config:{}})}return e instanceof $y?e:sb(e)}async function cb(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const o=e[r];if("number"!==typeof o){const e=o;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];xo(a)}}function lb(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var ub;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ub||(ub={}));class hb{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class db{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class pb extends hb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=bo((()=>As(this.totals[a],Os(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:bo((()=>{const e=Os(Fs(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),vo(t[n])})))}}class fb extends hb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let o=0;o<a.length;++o)if("number"!==typeof a[o]){const s=a[o];e.push(s.data()),t.push(r),n.push(o)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class mb extends hb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||wp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");ne(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():ur();return function(){const o=null!=n?n():ur();return o-r<t||(r=o,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await cb(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await cb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await cb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await cb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await cb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):ne(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await cb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await cb(e),await this.trainEnd(e))}}function gb(e,t){if(null==e&&(e={}),e instanceof hb)return[e];if(Array.isArray(e)&&e[0]instanceof hb)return e;return ag(e).map((e=>new mb(e,t)))}class yb{constructor(){}static registerCallbackConstructor(e,t){P(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),yb.checkForDuplicate(t),null==yb.constructors[e]&&(yb.constructors[e]=[]),yb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in yb.constructors){yb.constructors[+t].forEach((t=>{if(t===e)throw new Ym("Duplicate callback constructor.")}))}}static clear(){yb.constructors={}}static createCallbacks(e){const t=[];for(const n in yb.constructors){const a=+n;e>=a&&t.push(...yb.constructors[a])}return t.map((e=>new e))}}function bb(e,t,n,a,r,o,s,i,c){const l=new fb,u=[new pb,...yb.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const h=new db(u);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:o,batchSize:s,verbose:t,doValidation:i,metrics:c}),{callbackList:h,history:l}}function xb(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return lg(e,Vs.getMap().classNameMap,t,"layer",n)}function vb(e,t){return bo((()=>{"float32"!==e.dtype&&(e=Ts(e,"float32"));const n=Al(ty(e),t,!0),a=Ks(n.shape,Gg()),r=Ds(ti(n,a));return Fs(e,r)}))}function wb(e,t){return bo((()=>mu(ty(Ys(t,e)),-1)))}function kb(e,t){return bo((()=>mu(Zs(Ys(t,e)),-1)))}function Sb(e,t){return bo((()=>{const n=Ys(e,t),a=jc(Zs(e),Gg(),Number.MAX_VALUE),r=Zs(Fs(n,a));return Os(100,mu(r,-1))}))}function Ib(e,t){return bo((()=>{const n=jc(t,Gg(),Number.MAX_VALUE),a=Jl(As(1,n)),r=jc(e,Gg(),Number.MAX_VALUE),o=Jl(As(1,r));return mu(ty(Ys(a,o)),-1)}))}function Cb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return bo((()=>{if(n)t=xh(t);else{const e=Al(t,t.shape.length-1,!0);t=Fs(t,e)}return t=jc(t,Gg(),1-Gg()),eu(Al(Os(Ts(e,"float32"),Jl(t)),t.shape.length-1))}))}function Nb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return bo((()=>{const a=Ts(Bl(function(e){const t=[Pg(e.shape)];return Nc(e,t)}(e)),"int32"),r=(t=jc(t,Gg(),1-Gg())).shape;return Cb(Nc(Nu(a,r[r.length-1]),r),t,n)}))}function Tb(e,t){return bo((()=>{let n;return n=jc(t,Gg(),1-Gg()),n=Jl(Fs(n,Ys(1,n))),mu(function(e,t){if(!G(e.shape,t.shape))throw new Ym("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return bo((()=>{const n=eh(t),a=eu(Zs(t));return As(Ys(n,Os(t,e)),$l(Dl(a)))}))}(e,n),-1)}))}function Eb(e,t){return bo((()=>{const n=jc(e,Gg(),1),a=jc(t,Gg(),1);return Al(Os(e,Jl(Fs(n,a))),-1)}))}function Rb(e,t){return bo((()=>{const n=vb(e,-1),a=vb(t,-1),r=Os(n,a);return eu(Al(r,-1))}))}yb.constructors={};const Ab={meanSquaredError:wb,meanAbsoluteError:kb,meanAbsolutePercentageError:Sb,meanSquaredLogarithmicError:Ib,squaredHinge:function(e,t){return bo((()=>{const n=ti(0,Ys(1,Os(e,t)));return mu(ty(n),-1)}))},hinge:function(e,t){return bo((()=>{const n=ti(0,Ys(1,Os(e,t)));return mu(n,-1)}))},categoricalHinge:function(e,t){return bo((()=>{const n=Al(Os(e,t),-1),a=El(Os(Ys(1,e),t),-1);return ti(0,As(1,Ys(a,n)))}))},logcosh:function(e,t){return bo((()=>{const n=Math.log(2),a=Ys(t,e),r=Ys(As(a,tu(Os(-2,a))),n);return mu(r,-1)}))},categoricalCrossentropy:Cb,sparseCategoricalCrossentropy:Nb,binaryCrossentropy:Tb,kullbackLeiblerDivergence:Eb,poisson:function(e,t){return bo((()=>{const n=Jl(As(Gg(),t));return mu(Ys(t,Os(e,n)),-1)}))},cosineProximity:Rb};function _b(e){if("string"===typeof e){if(e in Ab)return Ab[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Ym(t)}return e}function Fb(e,t){return bo((()=>{const n=Os(.5,Tu(t)),a=Hg(Ul(t,n),e.dtype);return mu(dl(e,a),-1)}))}function Ob(e,t){return bo((()=>Hg(dl(rc(e,-1),rc(t,-1)),"float32")))}function Db(e,t){return bo((()=>Ts(Al(ou(dl(e,1),dl(t,1))),"float32")))}function Mb(e,t){return Tb(e,t)}function zb(e,t){return e.rank===t.rank&&(e=Nh(e,[e.rank-1])),(t=rc(t,-1)).dtype!==e.dtype&&(t=Ts(t,e.dtype)),Ts(dl(e,t),"float32")}const Lb=Cb,Pb=Nb,Bb={binaryAccuracy:Fb,categoricalAccuracy:Ob,precision:function(e,t){return bo((()=>{const n=Db(e,t),a=function(e,t){return bo((()=>Ts(Al(ou(dl(e,0),dl(t,1))),"float32")))}(e,t),r=As(n,a);return Ts(pl(Ul(r,0),Fs(n,r),0),"float32")}))},categoricalCrossentropy:Lb,sparseCategoricalCrossentropy:Pb,mse:wb,MSE:wb,mae:kb,MAE:kb,mape:Sb,MAPE:Sb,cosine:Rb};function Wb(e){if("string"===typeof e&&e in Bb)return Bb[e];if("string"!==typeof e&&null!=e)return e;throw new Ym("Unknown metric ".concat(e))}function Ub(e){if(eg(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Ab))if(Ab[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Bb))if(Bb[n]===e){t=n;break}return void 0!==t?t:e.name}}const Vb=1048576;function Gb(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Hb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Vb&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(Vb,"."))}}function Hb(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Hb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Hb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function jb(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),o=["Layer (type)","Input Shape","Output shape","Param #"];let s;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){o.push("Receives inputs"),s=[];for(const t in e.nodesByDepth)s.push(...e.nodesByDepth[t])}a("_".repeat(t)),Kb(o,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?qb(i[u],n,a):Xb(i[u],n,s,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?Fy(e.collectedTrainableWeights):Fy(e.trainableWeights);return t}(e),l=Fy(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function Kb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function qb(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(wJ){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(wJ){a="multiple"}const o=e.name,s=e.getClassName();Kb(["".concat(o," (").concat(s,")"),r,a,e.countParams().toString()],t,n)}function Xb(e,t,n,a){let r,o;try{o=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(wJ){o="multiple"}try{r=JSON.stringify(e.outputShape)}catch(wJ){r="multiple"}const s=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],a=u.tensorIndices[e];s.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===s.length?"":s[0];Kb(["".concat(i," (").concat(c,")"),o,r,e.countParams().toString(),l],t,a);for(let u=1;u<s.length;++u)Kb(["","","","",s[u]],t,a)}function Yb(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Qb(e,t){if(null===e)return null;if("string"===typeof e)return og(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Yb(t,r,a)?n.push(a):n.push(Qb(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=og(n);t[e]=Qb(a,e)}}return t}}function Zb(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return rg(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Yb(t,r,a)?n.push(a):n.push(Zb(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=rg(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?Zb(a,n):a}return t}}const Jb="4.20.0";class $b extends Vy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=wg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],hg(this.inputs).length!==this.inputs.length)throw new Ym("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));hg(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;eg(0===t,"input layer has >1 nodes"),eg(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Hy))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},o={},s=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new Xm("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add($b.nodeKey(a,r)),a.id in o||(o[a.id]=Object.keys(o).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let o=0;o<u;o++){const e=l.inputTensors[o],a=l.inboundLayers[o],r=l.nodeIndices[o],s=l.tensorIndices[o];i(e,t,n,a,r,s)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);s.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=s.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const o=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,o),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],o=y.nodeIndices[a],s=r.inboundNodes[o],i=null==t[s.id]?0:t[s.id];t[s.id]=Math.max(e+1,i),n[s.id]=s}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const d={};for(const y in a){const e=a[y];e in d||(d[e]=[]),d[e].push(r[y])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(ug);this.layers=[];for(const y of p){const e=d[y];e.sort(((e,t)=>{const n=o[e.id],a=o[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof $b&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(ug);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Xm("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Xm('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Wy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Ym("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const s of this.layers)for(const[e,t]of s.weights.entries()){const o=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[o])throw new Ym("Duplicate weight name: ".concat(o));n[o]=t,a++}const o=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])o.push([n[a],e[s]]);else if(t)throw new Ym("Provided weight data has no target variable: ".concat(s));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Ym("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}zy(o)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(Jb),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Zb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return bo((()=>{e=ag(e);const n=new jy;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Xy(this.outputs,n,t)}))}computeMask(e,t){return bo((()=>{let n;return e=ag(e),n=null==t?$m(null,e.length):ag(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Ry(e);if(t.length!==this.inputLayers.length)throw new Ym("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let s=0;s<t.length;s++){const e=this.inputLayers[s],a=t[s];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ug);if(a.length>1)for(const s of a){const e=this.nodesByDepth[s];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let s=0;s<t.inboundLayers.length;s++){const e=t.inboundLayers[s],r=t.nodeIndices[s],o=t.tensorIndices[s],i=n["".concat(e.name,"_").concat(r,"_").concat(o)];a.push(i)}const r=Ry(e.computeOutputShape(ng(a))),o=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(o,"_").concat(t)]=r[t]}}}const r=[],o=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],t=this.outputLayersNodeIndices[s],n=this.outputLayersTensorIndices[s],a="".concat(e.name,"_").concat(t,"_").concat(n);o.push(a)}for(let s=0;s<o.length;s++){const e=o[s];eg(e in n),r.push(n[e])}return ng(r)}runInternalGraph(e,t){null==t&&(t=$m(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],o=t[i];n[a.id]=[r,o]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ug);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,o=new Array;for(const t of a)t.id in n&&o.push(n[t.id]);if(o.length===a.length){let a,s,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===o.length){const[t,n]=o[0];null==l.mask&&(l.mask=n),i=ag(e.call(t,l)),c=ag(e.computeMask(t,n)),a=[t],s=[n]}else a=o.map((e=>e[0])),s=o.map((e=>e[1])),null==l.mask&&(l.mask=s),i=ag(e.call(a,l)),c=ag(e.computeMask(a,s));if(e.activityRegularizer)throw new Qm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],o=c[e];n[t.id]=[a,o]}}}}const r=[],o=[],s=[];for(const i of this.outputs){eg(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];s.push(e.shape),r.push(e),o.push(t)}return[r,o,s]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof $b?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=$b.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Ym("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Ym("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Ym("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return bo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=$b.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),a=o.getConfig(),r=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],a=$b.nodeKey(o,n);let s={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),s=e.callArgs}catch(wJ){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),s={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],o=e.nodeIndices[a],i=e.tensorIndices[a];let c=t[$b.nodeKey(r,o)];null==c&&(c=0),n.push([r.name,c,i,s])}r.push(n)}}}const s={};s.name=o.name,s.className=e,s.config=a,s.inboundNodes=r,n.push(s)}e.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],r=$b.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];a.push([e.name,s,i])}e.inputLayers=a;const r=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=$b.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];r.push([e.name,s,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function o(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function s(e,t){const n=[];let r;for(const s of t){const i=s[0],c=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(i in a))return void o(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void o(e,t);const h=u.inboundNodes[c];n.push(h.outputTensors[l])}n.length>0&&e.apply(ng(n),r)}function i(e){const r=e.name,s=xb(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(n),a[r]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Ym("Corrupted configuration, expected array for nodeData: ".concat(e));o(s,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!dg(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)s(t,n)}}const u=[],h=[],d=t.inputLayers;for(const f of d){const e=f[0],t=f[1],n=f[2];eg(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];eg(e in a);const r=a[e].inboundNodes[t].outputTensors;h.push(r[n])}return new e({inputs:u,outputs:h,name:c})}get stateful(){if(this._stateful)throw new Ym("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){bo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ex(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function tx(e,t){return ex(e,t,"classWeight")}async function nx(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=bo((()=>{if(1===e.shape.length)return Es(e);if(2===e.shape.length){if(e.shape[1]>1){return rc(e,1)}if(1===e.shape[1])return Nc(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());xo(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),_h(r,"float32")}return null}function ax(e,t){return Os(e,t)}function rx(e,t){let n,a;const r=t;n=r.xs,a=r.ys,P(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const o=ox("input",e.inputNames,n),s=ox("output",e.outputNames,a),i=o[0].shape[0];P(o.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(o.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),P(s.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(s.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<o.length;c++)P(o[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<s.length;c++)P(s[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:o,ys:s}}function ox(e,t,n){if(n instanceof Ar)return[n];if(Array.isArray(n))return P(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new Ym("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function sx(e,t,n){const a=null!=n.batchesPerEpoch;if(P(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),P(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),P(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),P(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),P(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let o,s;if(r)if(ix(n.validationData))P(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new Qm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);o=e.xs,s=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const u=gb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=bb(u,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await d.onEpochBegin(f);let u=0,h=0;for(a||(m=await t.iterator());!a||u<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=rx(e,t.value),o={};o.batch=h,o.size=a[0].shape[0],await d.onBatchBegin(h,o);const s=[];if(null!=n.classWeight){const t=tx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)s.push(await nx(r[e],null,t[e]))}const l=a.concat(r).concat(s),p=i(l);xo(l);for(let e=0;e<c.length;++e){const t=c[e],n=p[e];o[t]=n,vo(n)}await d.onBatchEnd(h,o),lb(o),h++,u++}if(a?u>=n.batchesPerEpoch:t.done){if(r){let t;t=ix(n.validationData)?ag(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ag(e.evaluate(o,s,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,l),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function ix(e){return"function"===typeof e.iterator}function cx(e){P(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function lx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Kg(e,t,n-t))):Kg(e,t,n-t)}function ux(e,t){return bo((()=>null==e?null:Array.isArray(e)?e.map((e=>ux(e,t))):ey(e,"int32"===t.dtype?t:Ts(t,"int32"))))}function hx(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function dx(e){const t=[];e instanceof Ar&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(jg(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function px(e,t){if(null==e)return;const n=[];if(t instanceof Ar)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof Ar)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function fx(e){return Array.isArray(e)}function mx(e){return!function(e){return e instanceof Ar}(e)&&!fx(e)}function gx(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(fx(e)&&e.length>0)t=!0;else if(mx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Ym("Error when checking model ".concat(o," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(mx(e)){a=[];for(const n of t){if(null==e[n])throw new Ym('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(fx(e)){if(e.length!==t.length)throw new Ym("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new Ym("The model ".concat(o," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=dx(a),null!=n)for(let s=0;s<t.length;++s){if(null==n[s])continue;const e=a[s];if(e.shape.length!==n[s].length)throw new Ym("Error when checking ".concat(o,": expected ").concat(t[s]," ")+"to have ".concat(n[s].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[s].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[s][t];if(null!=i&&i>=0&&a!==i)throw new Ym("".concat(o," expected a batch of elements where each ")+"example has shape [".concat(n[s].slice(1,n[s].length),"] ")+"(i.e.,tensor shape [*,".concat(n[s].slice(1,n[s].length),"])")+" but the ".concat(o," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function yx(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Ym("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new Ym("The model expects ".concat(t.length," ").concat(o," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let s=0;s<t.length;++s){if(null==n[s])continue;const e=a[s];if(e.shape.length!==n[s].length)throw new Ym("Error when checking ".concat(o,": expected ").concat(t[s]," ")+"to have ".concat(n[s].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[s].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[s][a];if(null!=c&&c!==i)throw new Ym("Error when checking ".concat(o,": expected ")+"".concat(t[s]," to have shape ").concat(JSON.stringify(n[s])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class bx extends $b{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Ym("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");jb(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>xp.adagrad(.01),Adadelta:()=>xp.adadelta(1,.95,Gg()),Adam:()=>xp.adam(.001,.9,.999,Gg()),Adamax:()=>xp.adamax(.002,.9,.999,Gg(),0),RMSProp:()=>xp.rmsprop(.001,.9,0,Gg()),SGD:()=>xp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Ym("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Hs))throw new Ym("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Ym("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>_b(e)))}else{const n=_b(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Ym('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(_b(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const e=this.internalOutputShapes[o],t=this.outputNames[o];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[o])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Og("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Og("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,o;for(const s of t){if("string"===typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Tb?-1!==["accuracy","acc"].indexOf(s)?a=Fb:-1!==["crossentropy","ce"].indexOf(s)&&(a=Mb):this.lossFunctions[e]===Nb?-1!==["accuracy","acc"].indexOf(s)?a=zb:-1!==["crossentropy","ce"].indexOf(s)&&(a=Pb):-1!==["accuracy","acc"].indexOf(s)?a=Ob:-1!==["crossentropy","ce"].indexOf(s)&&(a=Lb),-1!==["accuracy","acc"].indexOf(s)?r="acc":-1!==["crossentropy","ce"].indexOf(s)&&(r="ce"),o=a,n=""+r}else{const e=Wb(s);o=e,n=""+Ub(s)}let t;Og(n,(()=>{t=o})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;cx(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return ng(this.testLoop(t,e,a,n.verbose,n.steps))}finally{px(r[0],e),px(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let o=[];if(n.verbose>0)throw new Qm("Verbose mode is not implemented yet.");P(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const s="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!a||c<n.batches;){const t=await s.next();if(o=bo((()=>{if(t.value){const{xs:n,ys:a}=rx(e,t.value),s=n.concat(a),l=bo((()=>r(s)));if(xo(s),0===c)for(let e=0;e<l.length;++e)o.push(Ps(0));const u=s[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=o[e];o[e]=bo((()=>As(o[e],Os(u,t)))),c>0&&xo(n)}xo(l),i+=u,++c}return o})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<o.length;++l){const e=o[l];o[l]=Fs(o[l],i),xo(e)}return ng(o)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new Ym("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Ym("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Ym("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),o=new jy;if(e instanceof Ar&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Ym("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)o.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Ym("No value is provided for the model's input ".concat(i.name));o.add(i,t)}const s=Xy(r,o);return n?s:s[0]}retrieveSymbolicTensors(e){const t=$m(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],o=r.map((e=>e.name));for(let a=0;a<e.length;++a){const s=o.indexOf(e[a]);if(-1!==s&&(t[a]=r[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Ym("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return bo((()=>{const a=this.checkNumSamples(e);if(n)throw new Qm("Verbose predictLoop() is not implemented yet.");const r=hx(a,t),o=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){bo((()=>{const n=r[t][0],a=r[t][1],o=lx(e,n,a),s=[];if(Array.isArray(o))for(let e=0;e<o.length;++e)s.push({key:this.inputs[e],value:o[e]});else s.push({key:this.inputs[0],value:o});const i=new jy(s);return Xy(this.outputs,i)})).forEach(((e,t)=>o[t].push(e)))}return ng(o.map((e=>Rc(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=dx(e);yx(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return cx(e),this.predictLoop(n,e)}finally{px(n,e)}}predictOnBatch(e){yx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Xm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===Nb?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t){const n=hg(e.map((e=>e.shape[0])));n.sort();const a=hg(t.map((e=>e.shape[0])));if(a.sort(),n.length>1)throw new Ym("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(a.length>1)throw new Ym("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(n.length>0&&a.length>0&&!G(n,a))throw new Ym("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(n[0]," input sample(s) and ").concat(a[0]," target ")+"sample(s).")}(e=gx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=gx(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[wb,Tb,Cb];for(let r=0;r<e.length;++r){const o=e[r],s=t[r],i=n[r];if(null!=s){if(s===Cb&&1===o.shape[o.shape.length-1])throw new Ym("You are passing a target array of shape ".concat(o.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(s)){const e=o.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Ym("A target Tensor with shape ".concat(o.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Ym("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=arguments.length>5?arguments[5]:void 0;const[s,i]=this.standardizeUserDataXY(e,t,r,o);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=tx(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await nx(i[t],null,e[t]))}return[s,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return bo((()=>{const o=this.checkNumSamples(t,n,r,"steps"),s=[];if(a>0)throw new Qm("Verbose mode is not implemented yet.");if(null!=r)throw new Qm("steps mode in testLoop() is not implemented yet");{const a=hx(o,n),r=_h(Ug(0,o));for(let n=0;n<a.length;++n){const o=a[n][0],i=a[n][1],c=Kg(r,o,i-o),l=ux(t,c),u=e(l);if(0===n)for(let e=0;e<u.length;++e)s.push(Ps(0));for(let e=0;e<u.length;++e){const t=u[e];s[e]=As(s[e],Os(i-o,t))}}for(let e=0;e<s.length;++e)s[e]=Fs(s[e],o)}return s}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(tg(e,a)>1){const t=tg(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),o=[],s=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const s=new jy(e),i=Xy(this.outputs,s,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=ax(e,r[n]));const o=mu(e);t.push(o),c=0===n?e:As(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=mu(t(a[r],i[r]))}vo(e),o.push(e)}return c=mu(c),this.calculateLosses().forEach((e=>{c=As(c,e)})),c}),!0,s)].concat(o)}}makeTestFunction(){this.testFunction=e=>bo((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let e=0;e<this.inputs.length;++e)o.push({key:this.inputs[e],value:a[e]});const s=new jy(o),i=Xy(this.outputs,s);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],o=mu(a(r[e],i[e]));n=0===e?o:As(n,o),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],o=mu(n(r[a],i[a]));t.push(o)}return t}))}async fit(e,t){let n,a,r,o,s,i,c,l,u,h=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const d=null==h.batchSize?32:h.batchSize;cx(d);const p=!1,f=await this.standardizeUserData(e,t,h.sampleWeight,h.classWeight,p,d);n=f[0],a=f[1],u=f[2];let m,g=!1;if(null!=h.validationData&&h.validationData.length>0){if(g=!0,2!==h.validationData.length)throw 3===h.validationData.length?new Qm("validationData including sample weights is not supported yet."):new Ym("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(h.validationData," is invalid."));s=h.validationData[0],i=h.validationData[1];const e=!0,t=await this.standardizeUserData(s,i,null,null,e,d);c=t[0],l=t[1],m=c.concat(l)}else if(null!=h.validationSplit&&h.validationSplit>0&&h.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-h.validationSplit)),t=n[0].shape[0];c=lx(n,e,t),r=n,n=lx(n,0,e),l=lx(a,e,t),o=a,a=lx(a,0,e),m=c.concat(l)}else null!=h.validationSteps&&(g=!0);const y=n.concat(a).concat(u);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;g?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=gb(h.callbacks,h.yieldEvery);return await this.fitLoop(b,y,x,d,h.epochs,h.verbose,k,v,m,h.shuffle,w,h.initialEpoch,null,null)}finally{this.isTraining=!1,px(n,e),px(a,t),px(r,e),px(o,t),px(c,s),px(l,i),null!=u&&xo(u)}}async fitLoop(e,t,n,a,r,o,s,i,c,l,u,h,d,p){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=i&&null!=c&&(f=!0),null!=p&&(f=!0,null==d))throw new Ym("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,d,"steps_per_epoch");let g;null!=m&&(g=Ug(0,m)),null==o&&(o=1);const{callbackList:y,history:b}=bb(s,o,r,h,m,d,a,f,u);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<r;++x){await y.onEpochBegin(x);const r={};if(null!=d)throw new Qm("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Qm("batch shuffling is not implemneted yet");l&&O(g);const o=_h(g),s=hx(m,a);for(let l=0;l<s.length;++l){const u={};if(await y.onBatchBegin(l,u),bo((()=>{const h=s[l][0],d=s[l][1],p=Kg(o,h,d-h);u.batch=l,u.size=d-h;const m=ux(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];u[t]=a,vo(a)}if(l===s.length-1&&f){const e=this.testLoop(i,c,a);for(let t=0;t<n.length;++t){const a=n[t],o=e[t];vo(o),r["val_"+a]=o}}})),await y.onBatchEnd(l,u),lb(u),this.stopTraining_)break}o.dispose()}if(await y.onEpochEnd(x,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return sx(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],o=this.makeTrainFunction()(a.concat(r)),s=[];for(const i of o){const e=await i.data();s.push(e[0])}return xo(o),px(n[0],e),px(n[1],t),ng(s)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let o=0;o<a.length;++o)n&&!a[o].trainable||t.push({name:a[o].originalName,tensor:r[o]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=yo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-yo().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=rg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>rg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=rg(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[rg(Ub(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>rg(Ub(e))));{const e={};for(const t in this.metrics)e[t]=rg(Ub(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xb(Qb(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=og(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>og(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=og(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>og(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=og(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=jo(e);if(0===t.length)throw new Ym("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Ym("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Ym("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Co(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Jb),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Co(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Mo([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Gb(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Gb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}bx.className="Model",Gs(bx);class xx extends bx{}xx.className="Functional",Gs(xx);class vx extends bx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:wg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Ym("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof vx||e instanceof bx;let n;if(t){if(n=e,1!==n.outputs.length)throw new Ym("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Ym("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Ym("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Ym("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Hy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Ym("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Ym("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Gy(this.outputs[0])}this.inboundNodes=[],new Wy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:$m(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(_y(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new bx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Xm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Ym("Legacy serialization format not supported yet.");n=t}else P(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const o=new e(r);if(!(o instanceof vx))throw new Qm("Sequential.fromConfig called on non-Sequential input: ".concat(o));for(const s of n){const e=xb(s,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(e){if(null==this.model)throw new Ym("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Ym("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}vx.className="Sequential",Gs(vx);class wx extends Us{getConfig(){return{}}}class kx extends wx{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Qm("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return yl(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}kx.className="elu",Gs(kx);class Sx extends wx{apply(e){return lh(e)}}Sx.className="selu",Gs(Sx);class Ix extends wx{apply(e){return eh(e)}}Ix.className="relu",Gs(Ix);class Cx extends wx{apply(e){return bo((()=>xu(6,eh(e))))}}Cx.className="relu6",Gs(Cx);class Nx extends wx{apply(e){return e}}Nx.className="linear",Gs(Nx);class Tx extends wx{apply(e){return _c(e)}}Tx.className="sigmoid",Gs(Tx);class Ex extends wx{apply(e){return function(e){return bo((()=>{const t=As(.5,Os(.2,e));return jc(t,0,1)}))}(e)}}Ex.className="hardSigmoid",Gs(Ex);class Rx extends wx{apply(e){return tu(e)}}Rx.className="softplus",Gs(Rx);class Ax extends wx{apply(e){return function(e){return bo((()=>Fs(e,As(Zs(e),1))))}(e)}}Ax.className="softsign",Gs(Ax);class _x extends wx{apply(e){return Oc(e)}}_x.className="tanh",Gs(_x);class Fx extends wx{apply(e){return xh(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Fx.className="softmax",Gs(Fx);class Ox extends wx{apply(e){return au(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1)}}Ox.className="logSoftmax",Gs(Ox);class Dx extends wx{apply(e){return bo((()=>bo((()=>{const t=Math.sqrt(2),n=Os(.5,As(1,xl(Fs(e,t))));return Os(e,n)}))))}}Dx.className="gelu",Gs(Dx);class Mx extends wx{apply(e){return bo((()=>Os(.5,Os(e,As(1,Oc(Os(Ds(Fs(2,Math.PI)),As(e,Os(.044715,Xs(e,3))))))))))}}Mx.className="gelu_new",Gs(Mx);class zx extends wx{apply(e){return bo((()=>Os(e,Oc(tu(e)))))}}zx.className="mish",Gs(zx);class Lx extends wx{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return bo((()=>Os(_c(Os(e,t)),e)))}}function Px(e){return e.getClassName()}function Bx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lg(e,Vs.getMap().classNameMap,t,"activation")}function Wx(e){if(null==e){const e={className:"linear",config:{}};return Bx(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Bx(t)}return e instanceof wx?e:Bx(e)}function Ux(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}Lx.className="swish",Gs(Lx);class Vx extends Us{}class Gx extends Vx{constructor(e){super(),Ux(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return bo((()=>{let t=gu([1]);return this.hasL1&&(t=As(t,Al(Os(this.l1,Zs(e))))),this.hasL2&&(t=As(t,Al(Os(this.l2,ty(e))))),Nc(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Gx.className="L1L2",Gs(Gx);const Hx={l1l2:"L1L2"};function jx(e){return ig(e)}function Kx(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return lg(e,Vs.getMap().classNameMap,t,"regularizer")}function qx(e){if(null==e)return null;if("string"===typeof e){return Kx({className:e in Hx?Hx[e]:e,config:{}})}return e instanceof Vx?e:Kx(e)}class Xx extends Vy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ay(e);let n=eh(e);return null!=this.maxValue&&(n=jc(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Xx.className="ReLU",Gs(Xx);class Yx extends Vy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ay(e);return ql(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Yx.className="LeakyReLU",Gs(Yx);class Qx extends Vy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Ty(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qx(e.alphaRegularizer),this.alphaConstraint=ib(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Ym("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=_y(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new Ly({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ay(e),zu(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ny(this.alphaInitializer),alphaRegularizer:jx(this.alphaRegularizer),alphaConstraint:ob(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Qx.className="PReLU",Gs(Qx);class Zx extends Vy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Qm("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ay(e);return yl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Zx.className="ELU",Gs(Zx);class Jx extends Vy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ay(e);return Os(n,Ts(Ul(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Jx.className="ThresholdedReLU",Gs(Jx);class $x extends Vy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Fx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return bo((()=>{let n=Ay(e);const a=t.mask;if(null!=a){const e=Os(Ys(yu(n.shape),Ts(a,n.dtype)),Ps(-1e9));n=As(n,e)}return this.axis instanceof Array?this.axis.length>1?Dl(Ys(n,ru(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ev(e,t,n){if("number"===typeof e)return $m(e,t);if(e.length!==t)throw new Ym("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const o=e[r];if((a=o)!==parseInt(a.toString(),10))throw new Ym("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(o))}return e;var a}function tv(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function nv(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+Wg([n-t,0]);else{if("same"!==a)throw new Ym("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function av(e,t){return bo((()=>(Eg(t),"channelsFirst"===t?Qh(e,[0,2,3,1]):e)))}function rv(e,t){return bo((()=>(Eg(t),"channelsFirst"===t?Qh(e,[0,2,3,4,1]):e)))}function ov(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return bo((()=>{if(null==o&&(o="channelsLast"),Eg(o),3!==e.shape.length)throw new Ym("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Ym("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Ym("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===o&&(e=Qh(e,[0,2,1])),"causal"===r)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Zc(e,t,a,"same"===r?"same":"valid","NWC",s);return null!=n&&(i=ay(i,n)),i}))}function sv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return bo((()=>{if(null==o&&(o="channelsLast"),Eg(o),3!==e.rank&&4!==e.rank)throw new Ym("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Ym("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=av(e,o);if("causal"===r)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=ud({x:c,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:s,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===o&&(c=Qh(c,[0,3,1,2])),c}))}function iv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0;return bo((()=>{if(null==o&&(o="channelsLast"),Eg(o),4!==e.rank&&5!==e.rank)throw new Ym("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Ym("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=rv(e,o);if("causal"===r)throw new Qm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=el(i,t,a,"same"===r?"same":"valid","NDHWC",s),null!=n&&(i=ay(i,n)),"channelsFirst"===o&&(i=Qh(i,[0,4,1,2,3])),i}))}$x.className="Softmax",Gs($x);class cv extends Vy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",cv.verifyArgs(t),this.rank=e,mg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Qm("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=ev(t.kernelSize,e,"kernelSize"),this.strides=ev(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Rg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Eg(this.dataFormat),this.activation=Wx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Ty(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ib(t.biasConstraint),this.biasRegularizer=qx(t.biasRegularizer),this.activityRegularizer=qx(t.activityRegularizer),this.dilationRate=ev(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Ym("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Ym("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Ym("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(eg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!fg(e.kernelSize,"number",1,3))throw new Ym("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Px(this.activation),useBias:this.useBias,biasInitializer:Ny(this.biasInitializer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),biasConstraint:ob(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class lv extends cv{constructor(e,t){super(e,t),this.kernel=null,lv.verifyArgs(t),this.filters=t.filters,mg(this.filters,"filters"),this.kernelInitializer=Ty(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ib(t.kernelConstraint),this.kernelRegularizer=qx(t.kernelRegularizer)}build(e){e=_y(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ym("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return bo((()=>{let t;e=Ay(e);const n=null==this.bias?null:this.bias.read(),a=yg(this.activation.getClassName());if(null!=a&&2===this.rank)t=sv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=ov(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=sv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Qm("convolutions greater than 3D are not implemented yet.");t=iv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=_y(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=tv(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:Ny(this.kernelInitializer),kernelRegularizer:jx(this.kernelRegularizer),kernelConstraint:ob(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Ym("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class uv extends lv{constructor(e){super(2,e),uv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!fg(e.kernelSize,"number",1,2))throw new Ym("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}uv.className="Conv2D",Gs(uv);class hv extends lv{constructor(e){super(3,e),hv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Ym("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}hv.className="Conv3D",Gs(hv);class dv extends uv{constructor(e){if(super(e),this.inputSpec=[new Ly({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Ym("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=_y(e)).length)throw new Ym("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ym("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ly({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return bo((()=>{let t=Ay(e);if(4!==t.shape.length)throw new Ym("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,o;"channelsFirst"===this.dataFormat?(r=2,o=3):(r=1,o=2);const s=n[r],i=n[o],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1],d=[a,nv(s,u,c,this.padding),nv(i,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qh(t,[0,2,3,1]));let p=$c(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Qh(p,[0,3,1,2])),null!=this.bias&&(p=ay(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=_y(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const o=this.kernelSize[0],s=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=nv(t[a],i,o,this.padding),t[r]=nv(t[r],c,s,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dv.className="Conv2DTranspose",Gs(dv);class pv extends hv{constructor(e){if(super(e),this.inputSpec=[new Ly({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Ym("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=_y(e)).length)throw new Ym("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Ym("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ly({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return bo((()=>{let t=Ay(e);if(5!==t.shape.length)throw new Ym("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,o,s;"channelsFirst"===this.dataFormat?(s=2,r=3,o=4):(s=1,r=2,o=3);const i=n[s],c=n[r],l=n[o],u=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,nv(i,p,u,this.padding),nv(c,f,h,this.padding),nv(l,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qh(t,[0,2,3,4,1]));let y=nl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Qh(y,[0,4,1,2,3])),null!==this.bias&&(y=ay(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=_y(e)).slice();let n,a,r,o;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,o=4):(n=4,a=1,r=2,o=3);const s=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[a]=nv(t[a],l,s,this.padding),t[r]=nv(t[r],u,i,this.padding),t[o]=nv(t[o],h,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}pv.className="Conv3DTranspose",Gs(pv);class fv extends lv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Ym("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Ym("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Ym("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Ty(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qx(t.depthwiseRegularizer),this.depthwiseConstraint=ib(t.depthwiseConstraint),this.pointwiseInitializer=Ty(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qx(t.pointwiseRegularizer),this.pointwiseConstraint=ib(t.pointwiseConstraint)}build(e){if((e=_y(e)).length<this.rank+2)throw new Ym("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Ym("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let s=0;s<this.rank;++s)r.push(1);r.push(n*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new Ly({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return bo((()=>{let t;if(e=Ay(e),1===this.rank)throw new Qm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Qh(e,[0,2,3,1])),t=uh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=ay(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Qh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ny(this.depthwiseInitializer),e.pointwiseInitializer=Ny(this.pointwiseInitializer),e.depthwiseRegularizer=jx(this.depthwiseRegularizer),e.pointwiseRegularizer=jx(this.pointwiseRegularizer),e.depthwiseConstraint=ob(this.depthwiseConstraint),e.pointwiseConstraint=ob(this.pointwiseConstraint),e}}fv.className="SeparableConv";class mv extends fv{constructor(e){super(2,e)}}mv.className="SeparableConv2D",Gs(mv);class gv extends lv{constructor(e){super(1,e),gv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!fg(e.kernelSize,"number",1,1))throw new Ym("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}gv.className="Conv1D",Gs(gv);class yv extends Vy{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return bo((()=>{if(e=Ay(e),"channelsLast"===this.dataFormat){const t=Xg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Xg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}yv.className="Cropping2D",Gs(yv);class bv extends Vy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,pg(Sg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return bo((()=>{let t=Ay(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Qh(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?fp.resizeNearestNeighbor(t,[e,a]):fp.resizeBilinear(t,[e,a]);return Qh(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?fp.resizeNearestNeighbor(t,[e,a]):fp.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}bv.className="UpSampling2D",Gs(bv);class xv extends cv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Ty(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ib(e.depthwiseConstraint),this.depthwiseRegularizer=qx(e.depthwiseRegularizer)}build(e){if((e=_y(e)).length<4)throw new Ym("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Ym("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bo((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0;return bo((()=>{null==r&&(r="channelsLast"),Eg(r);let s=av(e,r);if(4!==e.rank)throw new Ym("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Ym("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return s=ll(s,t,n,"same"===a?"same":"valid","NHWC",o),"channelsFirst"===r&&(s=Qh(s,[0,3,1,2])),s}))}(e=Ay(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=ay(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=_y(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=tv(t,this.kernelSize[0],this.padding,this.strides[0]),o=tv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,o]:[e[0],r,o,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ny(this.depthwiseInitializer),e.depthwiseRegularizer=jx(this.depthwiseRegularizer),e.depthwiseConstraint=ob(this.depthwiseRegularizer),e}}function vv(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Ym("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function wv(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return bo((()=>{const c=t.shape.length;if(c<3)throw new Ym("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(Ug(2,c));if(t=Qh(t,l),null!=o)throw new Qm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");s&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=Ts(Ts(r,"bool"),"float32"),r.rank===c-1&&(r=Ml(r,-1)),r=Qh(r,l)),a&&(t=nh(t,0),null!=r&&(r=nh(r,0)));const u=[];let h,d=n;const p=t.shape[0],f=Hh(t);let m,g;null!=r&&(m=Hh(r));for(let t=0;t<p;++t){const n=f[t],a=bo((()=>e(n,d)));if(null==r)h=a[0],d=a[1];else{const e=bo((()=>{const e=m[t],n=Ys(Tu(e),e);return{output:As(Os(a[0],e),Os(d[0],n)),newStates:d.map(((t,r)=>As(Os(a[1][r],e),Os(t,n))))}}));h=e.output,d=e.newStates}i&&u.push(h)}if(i){g=Th(u,1)}return[h,g,d]}))}xv.className="DepthwiseConv2D",Gs(xv);class kv extends Vy{constructor(e){let t;if(super(e),null==e.cell)throw new Ym("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Av({cells:e.cell}):e.cell,null==t.stateSize)throw new Ym("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ly({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return Ug(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ey(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return bo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Qm("Constants support is not implemented in RNN yet.");Ey(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ly({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!G(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Ym("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new Ly({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];bo((()=>{if(!this.stateful)throw new qm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Ym("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>gu([n,e]))):this.states_=[gu([n,this.cell.stateSize])];else if(null==e)xo(this.states_),null!=this.keptStates&&(xo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>gu([n,e]))):this.states_[0]=gu([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ym("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):xo(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,o=[n,r];if(!G(a.shape,o))throw new Ym("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(o,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>vo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=vv(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let o=[],s=[];if(null!=n){t.initialState=n,o=o.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ly({shape:e.shape}));s=s.concat(this.stateSpec)}null!=a&&(t.constants=a,o=o.concat(a),this.numConstants=a.length);if(o[0]instanceof Py){const n=[e].concat(o),a=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return bo((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Ay(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==o)throw new Ym("RNN Layer has ".concat(o," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:a},i=wv(((e,t)=>{const n=this.cell.call([e].concat(t),s);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const h=this.returnSequences?l:c;return this.returnState?[h].concat(u):h}))}getInitialState(e){return bo((()=>{let t=gu(e.shape);return t=Al(t,[1,2]),t=jg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Zg(t,[1,e]):t)):this.cell.stateSize>1?[Zg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===kv.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=xb(t.cell,n);return new e(Object.assign(t,{cell:a}))}}kv.className="RNN",Gs(kv);class Sv extends Vy{}class Iv extends Sv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mg(this.units,"units"),this.activation=Wx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ty(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ty(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ty(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qx(e.kernelRegularizer),this.recurrentRegularizer=qx(e.recurrentRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.kernelConstraint=ib(e.kernelConstraint),this.recurrentConstraint=ib(e.recurrentConstraint),this.biasConstraint=ib(e.biasConstraint),this.dropout=Bg([1,Wg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bg([1,Wg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=_y(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bo((()=>{if(2!==e.length)throw new Ym("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_v({ones:()=>Tu(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_v({ones:()=>Tu(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,s=this.recurrentDropoutMask;r=$g(null!=o?Os(e,o):e,this.kernel.read()),null!=this.bias&&(r=ay(r,this.bias.read())),null!=s&&(n=Os(n,s));let i=As(r,$g(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Px(this.activation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:jx(this.kernelRegularizer),recurrentRegularizer:jx(this.recurrentRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ob(this.kernelConstraint),recurrentConstraint:ob(this.recurrentConstraint),biasConstraint:ob(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Iv.className="SimpleRNNCell",Gs(Iv);class Cv extends kv{constructor(e){e.cell=new Iv(e),super(e)}call(e,t){return bo((()=>{null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Cv.className="SimpleRNN",Gs(Cv);class Nv extends Sv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Ym("GRUCell does not support reset_after parameter set to true.");this.units=e.units,mg(this.units,"units"),this.activation=Wx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ty(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ty(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ty(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qx(e.kernelRegularizer),this.recurrentRegularizer=qx(e.recurrentRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.kernelConstraint=ib(e.kernelConstraint),this.recurrentConstraint=ib(e.recurrentConstraint),this.biasConstraint=ib(e.biasConstraint),this.dropout=Bg([1,Wg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bg([1,Wg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=_y(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return bo((()=>{if(2!==e.length)throw new Ym("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_v({ones:()=>Tu(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_v({ones:()=>Tu(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,o=this.recurrentDropoutMask;let s,i,c;0<this.dropout&&this.dropout<1&&(e=Os(e,r[0]));let l=$g(e,this.kernel.read());this.useBias&&(l=ay(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Os(a,o[0]));const u=this.recurrentKernel.read(),[h,d]=Sh(u,[2*this.units,this.units],u.rank-1),p=$g(a,h),[f,m,g]=Sh(l,3,l.rank-1),[y,b]=Sh(p,2,p.rank-1);s=this.recurrentActivation.apply(As(f,y)),i=this.recurrentActivation.apply(As(m,b));const x=$g(Os(i,a),d);c=this.activation.apply(As(g,x));const v=As(Os(s,a),Os(As(1,eu(s)),c));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Px(this.activation),recurrentActivation:Px(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:jx(this.kernelRegularizer),recurrentRegularizer:jx(this.recurrentRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ob(this.kernelConstraint),recurrentConstraint:ob(this.recurrentConstraint),biasConstraint:ob(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Nv.className="GRUCell",Gs(Nv);class Tv extends kv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Nv(e),super(e)}call(e,t){return bo((()=>{null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Tv.className="GRU",Gs(Tv);class Ev extends Sv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,mg(this.units,"units"),this.activation=Wx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Ty(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Ty(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Ty(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=qx(e.kernelRegularizer),this.recurrentRegularizer=qx(e.recurrentRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.kernelConstraint=ib(e.kernelConstraint),this.recurrentConstraint=ib(e.recurrentConstraint),this.biasConstraint=ib(e.biasConstraint),this.dropout=Bg([1,Wg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Bg([1,Wg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=_y(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends cy{apply(t,a){const r=e.apply([n]),o=(new uy).apply([n]),s=e.apply([2*n]);return Qg(Qg(r,o),s)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return bo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Ym("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_v({ones:()=>Tu(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_v({ones:()=>Tu(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,s=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(e=Os(e,o[0]));let h=$g(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Os(a,s[0])),h=As(h,$g(a,this.recurrentKernel.read())),this.useBias&&(h=ay(h,this.bias.read()));const[d,p,f,m]=Sh(h,4,h.rank-1);i=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(p),l=As(Os(c,r),Os(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=Os(u,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Px(this.activation),recurrentActivation:Px(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),recurrentInitializer:Ny(this.recurrentInitializer),biasInitializer:Ny(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:jx(this.kernelRegularizer),recurrentRegularizer:jx(this.recurrentRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ob(this.kernelConstraint),recurrentConstraint:ob(this.recurrentConstraint),biasConstraint:ob(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ev.className="LSTMCell",Gs(Ev);class Rv extends kv{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ev(e),super(e)}call(e,t){return bo((()=>{null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Rv.className="LSTM",Gs(Rv);class Av extends Sv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return bo((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let o;for(let s=0;s<this.cells.length;++s){const i=this.cells[s];n=a[s],o=0===s?[e[0]].concat(n):[o[0]].concat(n),o=i.call(o,t),r.push(o.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[o[0]].concat(n)}))}build(e){let t;Ey(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Og("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(xb(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return My(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}zy(t)}}function _v(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:o}=e,s=()=>null!=o?o(t(),n):ry(t(),n),i=()=>oy(s,t,a);if(!r||r<=1)return vo(i().clone());return Array(r).fill(void 0).map(i).map((e=>vo(e.clone())))}Av.className="StackedRNNCells",Gs(Av);var Fv=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class Ov extends kv{constructor(e){if(e.unroll)throw new Qm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Qm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ly({ndim:5})]}call(e,t){return bo((()=>{if(null!=this.cell.dropoutMask&&(xo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(xo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Ym("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return bo((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=gu([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];bo((()=>{if(!this.stateful)throw new qm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Ym("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>gu(r))):this.states_=[gu(r)];else if(null==e)xo(this.states_),null!=this.keptStates&&(xo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>gu(r))):this.states_[0]=gu(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Ym("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):xo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!G(n.shape,a))throw new Ym("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>vo(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:o,dilationRate:s}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=tv(c,a[0],r,o[0],s[0]),h=tv(l,a[1],r,o[1],s[1]);return[...e.slice(0,2),...i?[n,u,h]:[u,h,n]]}}Ov.className="ConvRNN2D";class Dv extends Ev{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:o,dilationRate:s}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,mg(this.filters,"filters"),this.kernelSize=ev(n,2,"kernelSize"),this.kernelSize.forEach((e=>mg(e,"kernelSize"))),this.strides=ev(a||1,2,"strides"),this.strides.forEach((e=>mg(e,"strides"))),this.padding=r||"valid",Rg(this.padding),this.dataFormat=o||"channelsLast",Eg(this.dataFormat),this.dilationRate=ev(s||1,2,"dilationRate"),this.dilationRate.forEach((e=>mg(e,"dilationRate")))}build(e){var t;e=_y(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Ym("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends cy{apply(e,t){return Yg([n.apply([a]),yu([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return bo((()=>{if(3!==e.length)throw new Ym("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],o=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_v({ones:()=>Tu(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=(e,t,n)=>t&&t[n]?Os(t[n],e):e;let c=i(a,s,0),l=i(a,s,1),u=i(a,s,2),h=i(a,s,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_v({ones:()=>Tu(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=i(r,d,0),f=i(r,d,1),m=i(r,d,2),g=i(r,d,3);const[y,b,x,v]=Sh(this.kernel.read(),4,3),[w,k,S,I]=this.useBias?Sh(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,x,S,this.padding),h=this.inputConv(h,v,I,this.padding);const[C,N,T,E]=Sh(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,C),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,E);const R=this.recurrentActivation.apply(As(c,p)),A=this.recurrentActivation.apply(As(l,f)),_=As(Os(A,o),Os(R,this.activation.apply(As(u,m)))),F=Os(this.recurrentActivation.apply(As(h,g)),this.activation.apply(_));return[F,F,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Fv(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=Qc(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?ay(r,n,this.dataFormat):r}recurrentConv(e,t){return Qc(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Dv.className="ConvLSTM2DCell",Gs(Dv);class Mv extends Ov{constructor(e){const t=new Dv(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Mv.className="ConvLSTM2D",Gs(Mv);class zv extends Vy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Ay(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return oy((()=>ry(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}zv.className="Dropout",Gs(zv);class Lv extends zv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Lv.className="SpatialDropout1D",Gs(Lv);class Pv extends Vy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,mg(this.units,"units"),this.activation=Wx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Ty(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Ty(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ib(e.kernelConstraint),this.biasConstraint=ib(e.biasConstraint),this.kernelRegularizer=qx(e.kernelRegularizer),this.biasRegularizer=qx(e.biasRegularizer),this.activityRegularizer=qx(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=_y(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=_y(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Ay(e),a=yg(this.activation.getClassName());let r;return null!=a?r=$g(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=$g(n,this.kernel.read()),null!=this.bias&&(r=ay(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:Px(this.activation),useBias:this.useBias,kernelInitializer:Ny(this.kernelInitializer),biasInitializer:Ny(this.biasInitializer),kernelRegularizer:jx(this.kernelRegularizer),biasRegularizer:jx(this.biasRegularizer),activityRegularizer:jx(this.activityRegularizer),kernelConstraint:ob(this.kernelConstraint),biasConstraint:ob(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Pv.className="Dense",Gs(Pv);class Bv extends Vy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=_y(e);for(const t of e.slice(1))if(null==t)throw new Ym('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],Pg(e,1)]}call(e,t){return bo((()=>{this.invokeCallHook(e,t);let n=Ay(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Qh(n,e)}return function(e){if(e.rank<=1)throw new Ym("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],Pg(e.shape,1)];return Nc(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Bv.className="Flatten",Gs(Bv);class Wv extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.activation=Wx(e.activation)}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Ay(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Px(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Wv.className="Activation",Gs(Wv);class Uv extends Vy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return bo((()=>{return e=Ay(e),t=e,n=this.n,bo((()=>{if(2!==t.shape.length)throw new Ym("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Zg(jg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Uv.className="RepeatVector",Gs(Uv);class Vv extends Vy{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,o=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==o)throw new Ym("Can only specifiy one unknown dimension.");o=i}else r*=e}const s=Pg(e);if(null!==o){if(0===r||s%r!==0)throw new Ym(n);a[o]=s/r}else if(s!==r)throw new Ym(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Ay(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return Nc(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Vv.className="Reshape",Gs(Vv);class Gv extends Vy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=Ug(1,e.dims.length+1);if(!G(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ly({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=_y(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return Qh(Ay(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Gv.className="Permute",Gs(Gv);class Hv extends Vy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ay(e);return ac(Cu(n,this.maskValue),-1)}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Ay(e),a=ac(Cu(n,this.maskValue),-1,!0);return Os(n,Ts(a,n.dtype))}))}}Hv.className="Masking",Gs(Hv);class jv extends Vy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ag(e.inputLength))}this.inputDim=e.inputDim,mg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,mg(this.outputDim,"outputDim"),this.embeddingsInitializer=Ty(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qx(e.embeddingsRegularizer),this.activityRegularizer=qx(e.activityRegularizer),this.embeddingsConstraint=ib(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return bo((()=>this.maskZero?(e=Ay(e),Cu(e,zs(e))):null))}computeOutputShape(e){if(e=_y(e),null==this.inputLength)return[...e,this.outputDim];const t=ag(this.inputLength);if(t.length!==e.length-1)throw new Ym('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],o=e[a+1];if(null!=r&&null!=o&&r!==o)throw new Ym('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=o),n++}}return[e[0],...t,this.outputDim]}call(e,t){return bo((()=>{this.invokeCallHook(e,t);let n=Ay(e);"int32"!==n.dtype&&(n=Hg(n,"int32"));const a=ey(this.embeddings.read(),Nc(n,[n.size]));return Nc(a,_y(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ny(this.embeddingsInitializer),embeddingsRegularizer:jx(this.embeddingsRegularizer),activityRegularizer:jx(this.activityRegularizer),embeddingsConstraint:ob(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}jv.className="Embedding",Gs(jv);class Kv extends Vy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Qm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],o=t[a];if(null==r||null==o||r<0||o<0)n.push(null);else if(1===r)n.push(o);else if(1===o)n.push(r);else{if(r!==o)throw new Ym("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[_y(e)]),e.length<2)throw new Ym("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=hg(t),t.length>1)throw new Ym("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===hg(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return bo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=Wg(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=jg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const o of e){const e=o.rank;if(null==e){const e=o.shape,a=e[0],r=e.slice(1).concat([a]);let s=Nc(o,[a].concat(Pg(e.slice(1))));s=Qh(s,[1,0]),s=Nc(s,r),t.push(s),n=!0}else if(e>1){const a=Ug(1,e).concat([0]);t.push(Qh(o,a)),n=!0}else t.push(o)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=Nc(Qh(Nc(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Ug(0,r-1));a=Qh(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=hg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return bo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Ym("`mask` should be an Array");if(!Array.isArray(e))throw new Ym("`inputs` should be an Array");if(t.length!==e.length)throw new Ym("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Ml(e,0))))[0];for(let e=1;e<t.length-1;++e)n=ou(n,t[e]);return n}))}}class qv extends Kv{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=As(t,e[n]);return t}))}}qv.className="Add",Gs(qv);class Xv extends Kv{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Os(t,e[n]);return t}))}}Xv.className="Multiply",Gs(Xv);class Yv extends Kv{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=As(t,e[n]);return Os(1/e.length,t)}))}}Yv.className="Average",Gs(Yv);class Qv extends Kv{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ti(t,e[n]);return t}))}}Qv.className="Maximum",Gs(Qv);class Zv extends Kv{constructor(e){super(e)}mergeFunction(e){return bo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=xu(t,e[n]);return t}))}}Zv.className="Minimum",Gs(Zv);class Jv extends Kv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Ym("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(G(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Ym("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return bo((()=>Yg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Ym("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Ym("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Ym("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Ym("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return bo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let o=0;o<e.length;++o)null==t[o]?a.push(Ts(Tu(e[o]),"bool")):t[o].rank<e[o].rank?a.push(Ml(t[o],-1)):a.push(t[o]);const r=Rc(a,this.axis);return nc(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function $v(e,t){for(;e<0;)e+=t;return e}Jv.className="Concatenate",Gs(Jv);class ew extends Kv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){P(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Ym("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new Ym("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>$v(t,e[n].shape.length))):[$v(this.axes,n.shape.length),$v(this.axes,a.shape.length)],this.normalize&&(n=vb(n,t[0]),a=vb(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Qm("batchDot is not implemented for tensors of 4D or higher rank yet");if(P(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),P(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Qm("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const o=n;return bo((()=>{let n,s;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Nc(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=Nc(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)s=o[0]===o[1]?Al(Os(e,t),o[0]):Al(Os(Qh(e,[1,0]),t),o[1]);else{const n=o[0]!==e.shape.length-1,a=o[1]===t.shape.length-1;s=Ac(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);s=Nh(s,t)}return 1===s.shape.length&&(s=Ml(s,1)),s}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[$v(this.axes,e.length),$v(this.axes,t.length)],n}computeOutputShape(e){P(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}ew.className="Dot",Gs(ew);class tw extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Ay(e);return oy((()=>As(Jg(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}tw.className="GaussianNoise",Gs(tw);class nw extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bo((()=>{this.invokeCallHook(e,t);const n=Ay(e);if(this.rate>0&&this.rate<1){return oy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Os(n,Jg(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}nw.className="GaussianDropout",Gs(nw);class aw extends Vy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ay(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return bo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Ay(e),a=-1.7580993408473766;let r=Vl(Yu(n),this.rate);r=Hg(r,"float32");const o=((1-this.rate)*(1+this.rate*a**2))**-.5,s=-o*a*this.rate,i=As(Os(t,r),Os(As(r,-1),a));return As(Os(i,o),s)};return oy(a,(()=>Ay(e)),t.training||!1)}return e}))}}function rw(e,t,n,a,r){let o,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)o=Lc(e,t,n,a,r,s);else if(3===e.rank)o=Pc(e,t,n,a,r,s);else{if(4!==e.rank)throw new Qm("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");o=Bc(e,t,n,a,r,s)}return o}function ow(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return G(a.slice().sort(),Ug(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return bo((()=>{const o=ku(e,a),s=o.mean,i=o.variance;return[rw(e,s,i,n,t,r),s,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return bo((()=>{const o=ku(e,a),s=o.mean,i=o.variance,c=[];for(const t of Ug(0,e.rank))-1!==a.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=Nc(s,c),u=Nc(i,c),h=null==t?null:Nc(t,c),d=null==n?null:Nc(n,c);return[rw(e,l,u,d,h,r),s,i]}))}(e,t,n,a,r)}aw.className="AlphaDropout",Gs(aw);class sw extends Vy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ty(e.betaInitializer||"zeros"),this.gammaInitializer=Ty(e.gammaInitializer||"ones"),this.movingMeanInitializer=Ty(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Ty(e.movingVarianceInitializer||"ones"),this.betaConstraint=ib(e.betaConstraint),this.gammaConstraint=ib(e.gammaConstraint),this.betaRegularizer=qx(e.betaRegularizer),this.gammaRegularizer=qx(e.gammaRegularizer)}build(e){e=_y(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Ym("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new Ly({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return bo((()=>{const n=null!=t.training&&t.training,a=Ay(e),r=a.shape,o=r.length,s=Ug(0,o),i=this.axis>=0?this.axis:this.axis+o;s.splice(i,1);const c=$m(1,o);c[i]=r[i];const l=s.slice();l.sort();const u=!G(l,Ug(0,o).slice(0,o-1));if(!n)return(()=>{if(u){const e=Nc(this.movingMean.read(),c),t=Nc(this.movingVariance.read(),c),n=this.center?Nc(this.beta.read(),c):null,r=this.scale?Nc(this.gamma.read(),c):null;return rw(a,e,t,n,r,this.epsilon)}return rw(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=ow(a,this.gamma.read(),this.beta.read(),s,this.epsilon),f=(e,t,n)=>{bo((()=>{const a=1-n,r=e.read(),o=Os(Ys(r,t),a);e.write(Ys(r,o))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ny(this.betaInitializer),gammaInitializer:Ny(this.gammaInitializer),movingMeanInitializer:Ny(this.movingMeanInitializer),movingVarianceInitializer:Ny(this.movingVarianceInitializer),betaRegularizer:jx(this.betaRegularizer),gammaRegularizer:jx(this.gammaRegularizer),betaConstraint:ob(this.betaConstraint),gammaConstraint:ob(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}sw.className="BatchNormalization",Gs(sw);class iw extends Vy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Ty(e.betaInitializer||"zeros"),this.gammaInitializer=Ty(e.gammaInitializer||"ones"),this.betaRegularizer=qx(e.betaRegularizer),this.gammaRegularizer=qx(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=_y(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==hg(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=Ay(e),a=n.shape,r=a.length;return bo((()=>{let{mean:e,variance:t}=ku(n,this.axis,!0);const o=$m(1,r);for(const n of this.axis)o[n]=a[n];const s=e=>null!=e&&e.shape.length!==r?Nc(e,o):e;let i=this.scale?s(this.gamma.read()):null,c=this.center?s(this.beta.read()):null;const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return e=Ll(e,l),t=Ll(t,l),null!=i&&(i=Ll(i,u)),null!=c&&(c=Ll(c,u)),rw(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ny(this.betaInitializer),gammaInitializer:Ny(this.gammaInitializer),betaRegularizer:jx(this.betaRegularizer),gammaRegularizer:jx(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}iw.className="LayerNormalization",Gs(iw);class cw extends Vy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Ym("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Ym("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Ym("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ly({ndim:4})]}computeOutputShape(e){let t,n;return e=_y(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return bo((()=>{return t=Ay(e),n=this.padding,a=this.dataFormat,bo((()=>{if(4!==t.rank)throw new Ym("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Ym("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Ym("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ru(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function lw(e,t,n,a,r,o){return bo((()=>{let s;Eg(r),Ag(o),Rg(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),e=av(e,r);const i="same"===a?"same":"valid";return s="max"===o?du(e,t,n,i):Tc(e,t,n,i),"channelsFirst"===r&&(s=Qh(s,[0,3,1,2])),s}))}function uw(e,t,n,a,r,o){return bo((()=>{let s;Eg(r),Ag(o),Rg(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==o&&(o="max"),e=rv(e,r);const i="same"===a?"same":"valid";return s="max"===o?pu(e,t,n,i):Ec(e,t,n,i),"channelsFirst"===r&&(s=Qh(s,[0,4,1,2,3])),s}))}cw.className="ZeroPadding2D",Gs(cw);class hw extends Vy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Ym("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(mg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Ym("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}mg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Rg(this.padding),this.inputSpec=[new Ly({ndim:3})]}computeOutputShape(e){const t=tv((e=_y(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return bo((()=>{this.invokeCallHook(e,t),e=jg(Ay(e),2);const n=this.poolingFunction(Ay(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Nh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class dw extends hw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Eg(r),Rg(a),lw(e,t,n,a,r,"max")}}dw.className="MaxPooling1D",Gs(dw);class pw extends hw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Eg(r),Rg(a),lw(e,t,n,a,r,"avg")}}pw.className="AveragePooling1D",Gs(pw);class fw extends Vy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Ym("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];mg(this.poolSize,"poolSize"),mg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),Rg(this.padding),this.inputSpec=[new Ly({ndim:4})]}computeOutputShape(e){e=_y(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=tv(t,this.poolSize[0],this.padding,this.strides[0]),n=tv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return bo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ay(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class mw extends fw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Eg(r),Rg(a),lw(e,t,n,a,r,"max")}}mw.className="MaxPooling2D",Gs(mw);class gw extends fw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Eg(r),Rg(a),lw(e,t,n,a,r,"avg")}}gw.className="AveragePooling2D",Gs(gw);class yw extends Vy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Ym("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];mg(this.poolSize,"poolSize"),mg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),Rg(this.padding),this.inputSpec=[new Ly({ndim:5})]}computeOutputShape(e){e=_y(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=tv(t,this.poolSize[0],this.padding,this.strides[0]),n=tv(n,this.poolSize[1],this.padding,this.strides[1]),a=tv(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return bo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ay(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class bw extends yw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Eg(r),Rg(a),uw(e,t,n,a,r,"max")}}bw.className="MaxPooling3D",Gs(bw);class xw extends yw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Eg(r),Rg(a),uw(e,t,n,a,r,"avg")}}xw.className="AveragePooling3D",Gs(xw);class vw extends Vy{constructor(e){super(e),this.inputSpec=[new Ly({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Qm}}class ww extends vw{constructor(e){super(e||{})}call(e,t){return bo((()=>{const t=Ay(e);return mu(t,1)}))}}ww.className="GlobalAveragePooling1D",Gs(ww);class kw extends vw{constructor(e){super(e||{})}call(e,t){return bo((()=>{const t=Ay(e);return El(t,1)}))}}kw.className="GlobalMaxPooling1D",Gs(kw);class Sw extends Vy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Eg(this.dataFormat),this.inputSpec=[new Ly({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Qm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Iw extends Sw{call(e,t){return bo((()=>{const t=Ay(e);return"channelsLast"===this.dataFormat?mu(t,[1,2]):mu(t,[2,3])}))}}Iw.className="GlobalAveragePooling2D",Gs(Iw);class Cw extends Sw{call(e,t){return bo((()=>{const t=Ay(e);return"channelsLast"===this.dataFormat?El(t,[1,2]):El(t,[2,3])}))}}Cw.className="GlobalMaxPooling2D",Gs(Cw);class Nw extends Vy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=xb(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class Tw extends Nw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=_y(e)).length<3)throw new Ym("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=_y(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return bo((()=>wv(((e,n)=>[Ay(this.layer.call(e,t)),[]]),e=Ay(e),[],!1,null,null,!1,!0)[1]))}}Tw.className="TimeDistributed",Gs(Tw);class Ew extends Nw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=xb(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=xb(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,pg(Ng,"BidirectionalMergeMode",r),e.weights)throw new Qm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):ng(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=vv(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const o=[],s=[];if(null!=n){const e=n.length;if(e%2>0)throw new Ym("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,o.push(...n);const a=n.map((e=>new Ly({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),s.push(...a)}if(null!=a)throw new Qm("Support for constants in Bidirectional layers is not implemented yet.");const i=o[0]instanceof Py;for(const c of o)if(c instanceof Py!==i)throw new Ym("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(o),a=this.inputSpec.concat(s),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return bo((()=>{const n=t.initialState;let a,r,o,s;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const o=n.slice(0,n.length/2),s=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(a)&&(o=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=nh(r,1)),"concat"===this.mergeMode?s=Yg([a,r]):"sum"===this.mergeMode?s=As(a,r):"ave"===this.mergeMode?s=Os(.5,As(a,r)):"mul"===this.mergeMode?s=Os(a,r):null==this.mergeMode&&(s=[a,r]),this.returnState?null==this.mergeMode?s.concat(o):[s].concat(o):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Og(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Og(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=xb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Qm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}Ew.className="Bidirectional",Gs(Ew);class Rw extends Vy{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return bo((()=>("float32"!==(e=Ay(e)).dtype&&(e=Hg(e,"float32")),As(Os(e,this.scale),this.offset))))}}Rw.className="Rescaling",Gs(Rw);const{resizeBilinear:Aw,cropAndResize:_w}=fp;class Fw extends Vy{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,o,s,i){return bo((()=>{let c,l=!1;const u=[t/o,n/s,(a+t)/o,(r+n)/s],h=[];3===e.rank?(l=!0,c=Th([e])):c=e;for(let e=0;e<c.shape[0];e++)h.push(u);const d=po(h,[h.length,4]),p=Zu(0,h.length,1,"int32"),f=_w(c,d,p,[a,r],"nearest");return Hg(l?Ay(Hh(f)):f,i)}))}upsize(e,t,n,a){return bo((()=>Hg(Aw(e,[t,n]),a)))}call(e,t){return bo((()=>{const t=Ay(e),n=t.dtype,a=t.shape,r=a[a.length-3],o=a[a.length-2];let s=0;r!==this.height&&(s=Math.floor((r-this.height)/2));let i=0;return o!==this.width&&(i=Math.floor((o-this.width)/2),0===i&&(i=1)),s>=0&&i>=0?this.centerCrop(t,s,i,this.height,this.width,r,o,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=_y(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Fw.className="CenterCrop",Gs(Fw);class Ow extends Vy{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=_y(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return bo((()=>{let n;if("int32"!==(e=Ay(e)).dtype&&(e=Hg(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Ym("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Ay(t.countWeights)}const a=El(e),r=Rl(e),o=Ul(this.numTokens,a).bufferSync().get(0),s=Vl(r,0).bufferSync().get(0);if(!o||!s)throw new Ym("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Ay(e);if("int32"!==r.dtype&&(r=Hg(r,"int32")),"int"===t)return r;const o=r.shape;if(0===r.rank&&(r=Ml(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=Ml(r,-1)),r.rank>2)throw new Ym("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(o)+" which would result in output rank ".concat(r.rank,"."));const s=["multiHot","oneHot"].includes(t),i=r;let c;if(c=il(i,"undefined"!==typeof a&&"count"===t?a:[],n,s),"tfIdf"!==t)return c;if(a)return Os(c,a);throw new Ym("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Ow.className="CategoryEncoding",Gs(Ow);const Dw=new Set(["bilinear","nearest"]);class Mw extends Vy{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Dw.has(e.interpolation))throw new Ym("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=_y(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return bo((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return fp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return fp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...Dw]," are supported"))}))}}Mw.className="Resizing",Gs(Mw);class zw{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}zw.className="RandomSeed";class Lw extends Vy{constructor(e){super(e),this.randomGenerator=new zw(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Lw.className="BaseRandomLayer";const Pw=new Set(["bilinear","nearest"]);class Bw extends Lw{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Ym("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Ym("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Ym("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!Pw.has(n))throw new Ym("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=_y(e))[2];return[this.imgHeight,-1,t]}call(e,t){return bo((()=>{const t=Ay(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Yu([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return fp.resizeBilinear(e,r);case"nearest":return fp.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...Pw]," are supported"))}}))}}Bw.className="RandomWidth",Gs(Bw);var Ww,Uw;ve().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(Ww||(Ww={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Uw||(Uw={}));const Vw={};function Gw(e){return Vw[e]}function Hw(e,t,n,a,r){const o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){const e=o.inputIndexStart,s=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===o.type)return jw(t.inputNames[i],n,a,r);if("tensors"===o.type){const o=t.inputs.slice(e,s);return t.inputNames.slice(e,s).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=o[t])||void 0===n?void 0:n.op)})).map((e=>jw(e,n,a,r)))}const c=jw(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===o.type?l[0]:ce(c.shape,l)}const s=t.attrParams[e];return s&&s.value}function jw(e,t,n,a){const[r,o]=Yw(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const s=n.currentContextIds.find((e=>!!t[Xw(r,e)]));return void 0!==s?t[Xw(r,s)][o]:void 0}function Kw(e,t,n){return t[Xw(e,n.currentContextId)]}function qw(e,t){const[n,a,r]=Yw(e,t);return[Xw(n,t&&t.currentContextId),a,r]}function Xw(e,t){return t?"".concat(e,"-").concat(t):e}function Yw(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function Qw(e,t,n){let a=Hw("pad",e,t,n);if("explicit"===a){a=Hw("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function Zw(e){return e.kept?e:Es(e)}const Jw=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$w=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ek=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],tk=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],nk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],ak=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],rk=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ok=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],sk=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],ik=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],ck=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],lk=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],uk=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],hk=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],dk=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],pk=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],fk=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],mk=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],gk=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class yk{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[s,i,c,l,u,h,d,p,f,m,g,y,b,x,v,w,k,S,I].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],o=[],s=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||o.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const h=Object.keys(s);h.forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=qw(e),o=s[a];if(null!=o.outputs){const e=o.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))})),0===Object.keys(u).length?h.forEach((e=>{const t=s[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=qw(e),n=s[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=qw(e),n=s[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:s,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:d};return o.length>0&&(p.initNodes=o),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Gw(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=xk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=Rk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Rk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=wk(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=wk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=Ek(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ek(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=vk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=_k(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=_k(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=Tk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Tk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=Ak(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ak(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=Ik(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ik(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=Ck(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Ck(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=Sk(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Sk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],o=[];e.signature.inputArg.forEach((e=>{const[t]=qw(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:kk(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,o]=qw(e),s=a[r];if(null!=s.outputs){const e=s.outputs.indexOf(o);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))}));const s=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=qw(s[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,o.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:o,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function bk(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=ve().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function xk(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?bk(r.s,a):n}function vk(e,t,n){const a=e[t];return a?a.b:n}function wk(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function kk(e){switch("string"===typeof e&&(e=Ww[e]),e){case Ww.DT_FLOAT:case Ww.DT_HALF:return"float32";case Ww.DT_INT32:case Ww.DT_INT64:case Ww.DT_INT8:case Ww.DT_UINT8:return"int32";case Ww.DT_BOOL:return"bool";case Ww.DT_DOUBLE:return"float32";case Ww.DT_STRING:return"string";case Ww.DT_COMPLEX64:case Ww.DT_COMPLEX128:return"complex64";default:return null}}function Sk(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function Ik(e,t,n){const a=e[t];return a&&a.type?kk(a.type):n}function Ck(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>kk(e))):n}function Nk(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function Tk(e,t,n){const a=e[t];return a&&a.shape?Nk(a.shape):n}function Ek(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function Rk(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>bk(e,a))):n}function Ak(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>Nk(e))):n}function _k(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class Fk{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return jw(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return jw(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return wk(this.node.rawAttrs,e,t);if(null!=n.s)return xk(this.node.rawAttrs,e,t);if(null!=n.b)return vk(this.node.rawAttrs,e,t);if(null!=n.shape)return Tk(this.node.rawAttrs,e,t);if(null!=n.type)return Ik(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Ek(this.node.rawAttrs,e,t);if(null!=n.list.s)return Rk(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Ak(this.node.rawAttrs,e,t);if(null!=n.list.b)return _k(this.node.rawAttrs,e,t);if(null!=n.list.type)return Ck(this.node.rawAttrs,e,t)}return t}}function Ok(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){P(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],o=t[a];P(r<0||o<0||r===o,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function Dk(e){return"number"!==typeof e&&!e.some((e=>e<0))}function Mk(e,t,n){let a=zk(e,n);const r=!Dk(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=zk(e.shape,a)})),!Dk(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function zk(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],o=t[a];if(r>=0&&o>=0&&r!==o)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:o}return n}class Lk{constructor(e,t,n,a,r,o,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=Ps(0),vo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Ok(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,vo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return po([],[0].concat(this.elementShape));const n=this.readMany(e);return Ok(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Th(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return po([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return Ok(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Rc(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,Hh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,o=[];bo((()=>{t=Nc(t,[1,n,r]);for(let n=0;n<e.length;++n){const s=[0,0===n?0:a[n-1],0],i=[1,e[n],r];o[n]=Nc(Fc(t,s,i),this.elementShape)}return o}));const s=[];for(let i=0;i<e.length;i++)s[i]=i;this.writeMany(s,o)}}class Pk{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));Ok(t,e.shape,"TensorList shape mismatch: "),vo(e)})),this.idTensor=Ps(0),this.maxNumElements=a,vo(this.idTensor)}copy(){return new Pk([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));Ok(e,this.elementShape,"TensorList shape mismatch: ");const a=Mk(this.elementShape,this.tensors,e);return bo((()=>{const e=this.tensors.map((e=>Nc(e,a)));return Th(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Mk(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,Ok(a.shape,e,"TensorList shape mismatch: "),Nc(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(Ok(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");vo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Pk([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));Ok(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=Mk(this.elementShape,this.tensors,t);return Nc(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));Ok(this.elementShape,t.shape,"TensorList shape mismatch: "),vo(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));Ok(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=Mk(this.elementShape,this.tensors,n);return 0===e.length?po([],[0].concat(a)):bo((()=>{const t=e.map((e=>Nc(this.tensors[e],a)));return Th(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));Ok(this.elementShape,t,"TensorList shape mismatch: ");const n=Mk(this.elementShape,this.tensors,t);return 0===this.size()?po([],[0].concat(n)):bo((()=>{const e=this.tensors.map((e=>Nc(e,n)));return Rc(e,0)}))}}const Bk=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=Hw("thenBranch",e,t,n),r=Hw("elseBranch",e,t,n),o=Hw("cond",e,t,n),s=Hw("args",e,t,n);return(await o.data())[0]?n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=Hw("body",e,t,n),r=Hw("cond",e,t,n),o=Hw("args",e,t,n),s=await n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map((e=>e.id));let c=await s[0].data();s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=o;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const o=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await o[0].data(),o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[Zw(Hw("pred",e,t,n))];case"Switch":{const a=Hw("pred",e,t,n);let r=Hw("data",e,t,n);return r.kept||(r=Zw(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==jw(e,t,n)));if(a){return[Zw(jw(a,t,n))]}return}case"Enter":{const a=Hw("frameName",e,t,n),r=Hw("tensor",e,t,n);return n.enterFrame(a),[Zw(r)]}case"Exit":{const a=Hw("tensor",e,t,n);return n.exitFrame(),[Zw(a)]}case"NextIteration":{const a=Hw("tensor",e,t,n);return n.nextIteration(),[Zw(a)]}case"TensorArrayV3":{const a=Hw("size",e,t,n),r=Hw("dtype",e,t,n),o=Hw("elementShape",e,t,n),s=Hw("dynamicSize",e,t,n),i=Hw("clearAfterRead",e,t,n),c=Hw("identicalElementShapes",e,t,n),l=Hw("name",e,t,n),u=new Lk(l,r,a,o,c,s,i);return n.addTensorArray(u),[u.idTensor,Ps(1)]}case"TensorArrayWriteV3":{const a=Hw("tensorArrayId",e,t,n),r=Hw("index",e,t,n),o=Hw("tensor",e,t,n),s=n.getTensorArray(a.id);return s.write(r,o),[s.idTensor]}case"TensorArrayReadV3":{const a=Hw("tensorArrayId",e,t,n),r=Hw("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=Hw("tensorArrayId",e,t,n),r=Hw("indices",e,t,n),o=Hw("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,o)]}case"TensorArrayScatterV3":{const a=Hw("tensorArrayId",e,t,n),r=Hw("indices",e,t,n),o=Hw("tensor",e,t,n),s=n.getTensorArray(a.id);return s.scatter(r,o),[s.idTensor]}case"TensorArrayConcatV3":{const a=Hw("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),o=Hw("dtype",e,t,n);return[r.concat(o)]}case"TensorArraySplitV3":{const a=Hw("tensorArrayId",e,t,n),r=Hw("tensor",e,t,n),o=Hw("lengths",e,t,n),s=n.getTensorArray(a.id);return s.split(o,r),[s.idTensor]}case"TensorArraySizeV3":{const a=Hw("tensorArrayId",e,t,n);return[Ps(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=Hw("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=Hw("tensorListId",e,t,n),r=Hw("index",e,t,n),o=Hw("tensor",e,t,n),s=n.getTensorList(a.id);return s.setItem(r,o),[s.idTensor]}case"TensorListGetItem":{const a=Hw("tensorListId",e,t,n),r=Hw("index",e,t,n),o=Hw("elementShape",e,t,n),s=Hw("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,o,s)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Hw("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const o=new Pk([],n,e.dtype,a),s=Hh(e,0);return t.forEach(((e,t)=>{o.setItem(e,s[t])})),o}(Hw("tensor",e,t,n),a,Hw("elementShape",e,t,n),Hw("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=Hw("elementShape",e,t,n),r=Hw("elementDType",e,t,n);let o;o="TensorListReserve"===e.op?"numElements":"maxNumElements";const s=Hw(o,e,t,n),i=function(e,t,n,a){return new Pk([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:s);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=Hw("tensorListId",e,t,n),r=Hw("indices",e,t,n),o=Hw("elementShape",e,t,n),s=Hw("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,s,o)]}case"TensorListStack":{const a=Hw("tensorListId",e,t,n),r=Hw("elementShape",e,t,n),o=Hw("elementDType",e,t,n),s=Hw("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,o,s)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));Ok(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=Hh(e);return new Pk(r,t,a)}(Hw("tensor",e,t,n),Hw("elementShape",e,t,n),Hw("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=Hw("tensorListId",e,t,n),r=n.getTensorList(a.id),o=Hw("dtype",e,t,n),s=Hw("elementShape",e,t,n);return[r.concat(o,s)]}case"TensorListPushBack":{const a=Hw("tensorListId",e,t,n),r=Hw("tensor",e,t,n),o=n.getTensorList(a.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const a=Hw("tensorListId",e,t,n),r=Hw("elementShape",e,t,n),o=Hw("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,o)]}case"TensorListSplit":{const a=Hw("tensor",e,t,n),r=Hw("elementShape",e,t,n),o=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const o=zk(e.shape.slice(1),n),s=0===a?0:e.size/a,i=bo((()=>{const n=[];e=Nc(e,[1,a,s]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],s];n[a]=Nc(Fc(e,i,c),o)}return e.dispose(),n})),c=new Pk([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,Hw("lengths",e,t,n),r);return n.addTensorList(o),[o.idTensor]}case"TensorListLength":{const a=Hw("tensorListId",e,t,n);return[Ps(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{const a=Hw("tensorListId",e,t,n),r=Hw("size",e,t,n),o=n.getTensorList(a.id).resize(r);return n.addTensorList(o),[o.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Wk(e,t,n){const[a,r]=Hw("fusedOps",e,t,n),o="biasadd"===a,s=!o,i="prelu"===r,c="fusedbatchnorm"===a,l=Hw("numArgs",e,t,n);if(o){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=Hw("strides",e,t,n),h=Qw(e,t,n),d=Hw("dataFormat",e,t,n).toUpperCase(),p=Hw("dilations",e,t,n);let[f,m]=Hw("args",e,t,n);s&&(m=f,f=void 0);return{stride:u,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:Hw("leakyreluAlpha",e,t,n)}}function Uk(e,t,n){return{boxes:Hw("boxes",e,t,n),scores:Hw("scores",e,t,n),maxOutputSize:Hw("maxOutputSize",e,t,n),iouThreshold:Hw("iouThreshold",e,t,n),scoreThreshold:Hw("scoreThreshold",e,t,n),softNmsSigma:Hw("softNmsSigma",e,t,n)}}class Vk{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Ps(0),this.tensorMap=new Map,vo(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ps(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),bo((()=>{const e=Hh(t),a=n.length,r=e.length;P(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];vo(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return bo((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],o=this.findWithDefault(r,t);e.push(o)}return Th(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function Gk(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:bo;const o=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(Hw("a",e,t,n),Hw("b",e,t,n))];case"AddN":return[a.addN(Hw("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(Hw("a",e,t,n),Hw("b",e,t,n))];case"Mul":return[a.mul(Hw("a",e,t,n),Hw("b",e,t,n))];case"RealDiv":case"Div":return[a.div(Hw("a",e,t,n),Hw("b",e,t,n))];case"DivNoNan":return[a.divNoNan(Hw("a",e,t,n),Hw("b",e,t,n))];case"FloorDiv":return[a.floorDiv(Hw("a",e,t,n),Hw("b",e,t,n))];case"Sub":return[a.sub(Hw("a",e,t,n),Hw("b",e,t,n))];case"Minimum":return[a.minimum(Hw("a",e,t,n),Hw("b",e,t,n))];case"Maximum":return[a.maximum(Hw("a",e,t,n),Hw("b",e,t,n))];case"Pow":return[a.pow(Hw("a",e,t,n),Hw("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(Hw("a",e,t,n),Hw("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(Hw("x",e,t,n))];case"Acos":return[a.acos(Hw("x",e,t,n))];case"Acosh":return[a.acosh(Hw("x",e,t,n))];case"Asin":return[a.asin(Hw("x",e,t,n))];case"Asinh":return[a.asinh(Hw("x",e,t,n))];case"Atan":return[a.atan(Hw("x",e,t,n))];case"Atan2":return[a.atan2(Hw("x",e,t,n),Hw("y",e,t,n))];case"Atanh":return[a.atanh(Hw("x",e,t,n))];case"Ceil":return[a.ceil(Hw("x",e,t,n))];case"Complex":return[a.complex(Hw("real",e,t,n),Hw("imag",e,t,n))];case"Cos":return[a.cos(Hw("x",e,t,n))];case"Cosh":return[a.cosh(Hw("x",e,t,n))];case"Elu":return[a.elu(Hw("x",e,t,n))];case"Erf":return[a.erf(Hw("x",e,t,n))];case"Exp":return[a.exp(Hw("x",e,t,n))];case"Expm1":return[a.expm1(Hw("x",e,t,n))];case"Floor":return[a.floor(Hw("x",e,t,n))];case"Log":return[a.log(Hw("x",e,t,n))];case"Log1p":return[a.log1p(Hw("x",e,t,n))];case"Imag":return[a.imag(Hw("x",e,t,n))];case"Neg":return[a.neg(Hw("x",e,t,n))];case"Reciprocal":return[a.reciprocal(Hw("x",e,t,n))];case"Real":return[a.real(Hw("x",e,t,n))];case"Relu":return[a.relu(Hw("x",e,t,n))];case"Round":return[a.round(Hw("x",e,t,n))];case"Selu":return[a.selu(Hw("x",e,t,n))];case"Sigmoid":return[a.sigmoid(Hw("x",e,t,n))];case"Sin":return[a.sin(Hw("x",e,t,n))];case"Sign":return[a.sign(Hw("x",e,t,n))];case"Sinh":return[a.sinh(Hw("x",e,t,n))];case"Softplus":return[a.softplus(Hw("x",e,t,n))];case"Sqrt":return[a.sqrt(Hw("x",e,t,n))];case"Square":return[a.square(Hw("x",e,t,n))];case"Tanh":return[a.tanh(Hw("x",e,t,n))];case"Tan":return[a.tan(Hw("x",e,t,n))];case"ClipByValue":return[a.clipByValue(Hw("x",e,t,n),Hw("clipValueMin",e,t,n),Hw("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(Hw("x",e,t,n))];case"Rsqrt":return[a.rsqrt(jw(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(Hw("x",e,t,n),Hw("alpha",e,t,n))];case"Prelu":return[a.prelu(Hw("x",e,t,n),Hw("alpha",e,t,n))];case"IsNan":return[a.isNaN(jw(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(jw(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(jw(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return Bk(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"Conv1D":{const r=Hw("stride",e,t,n),o=Hw("pad",e,t,n),s=Hw("dataFormat",e,t,n).toUpperCase(),i=Hw("dilation",e,t,n);return[a.conv1d(Hw("x",e,t,n),Hw("filter",e,t,n),r,o,s,i)]}case"Conv2D":{const r=Hw("strides",e,t,n),o=Qw(e,t,n),s=Hw("dataFormat",e,t,n).toUpperCase(),i=Hw("dilations",e,t,n);return[a.conv2d(Hw("x",e,t,n),Hw("filter",e,t,n),[r[1],r[2]],o,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:o,dataFormat:s,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=Wk(e,t,n);return[a.fused.conv2d({x:Hw("x",e,t,n),filter:Hw("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:o,dataFormat:s,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:h}=Wk(e,t,n);return[a.fused.depthwiseConv2d({x:Hw("x",e,t,n),filter:Hw("filter",e,t,n),strides:[r[1],r[2]],pad:o,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Hw("outputShape",e,t,n),o=Hw("strides",e,t,n),s=Qw(e,t,n);return[a.conv2dTranspose(Hw("x",e,t,n),Hw("filter",e,t,n),r,[o[1],o[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Hw("strides",e,t,n),o=Qw(e,t,n),s=Hw("dilations",e,t,n),i=Hw("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(Hw("input",e,t,n),Hw("filter",e,t,n),[r[1],r[2]],o,i,[s[1],s[2]])]}case"Conv3D":{const r=Hw("strides",e,t,n),o=Hw("pad",e,t,n),s=Hw("dataFormat",e,t,n).toUpperCase(),i=Hw("dilations",e,t,n);return[a.conv3d(Hw("x",e,t,n),Hw("filter",e,t,n),[r[1],r[2],r[3]],o,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Hw("strides",e,t,n),o=Hw("pad",e,t,n),s=Hw("kernelSize",e,t,n);return[a.avgPool(Hw("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPool":{const r=Hw("strides",e,t,n),o=Hw("pad",e,t,n),s=Hw("kernelSize",e,t,n);return[a.maxPool(Hw("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o)]}case"MaxPoolWithArgmax":{const r=Hw("strides",e,t,n),o=Hw("pad",e,t,n),s=Hw("kernelSize",e,t,n),i=Hw("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(Hw("x",e,t,n),[s[1],s[2]],[r[1],r[2]],o,i);return[c,l]}case"AvgPool3D":{const r=Hw("strides",e,t,n),o=Hw("pad",e,t,n),s=Hw("kernelSize",e,t,n);return[a.avgPool3d(Hw("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"MaxPool3D":{const r=Hw("strides",e,t,n),o=Hw("pad",e,t,n),s=Hw("kernelSize",e,t,n);return[a.maxPool3d(Hw("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],o)]}case"Dilation2D":{const r=Hw("strides",e,t,n),o=Hw("pad",e,t,n),s=Hw("dilations",e,t,n),i=r[1],c=r[2],l=s[1],u=s[2];return[a.dilation2d(Hw("x",e,t,n),Hw("filter",e,t,n),[i,c],o,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"Fill":{const r=Hw("shape",e,t,n),o=Hw("dtype",e,t,n),s=Hw("value",e,t,n);return[a.fill(r,s,o)]}case"LinSpace":{const r=Hw("start",e,t,n),o=Hw("stop",e,t,n),s=Hw("num",e,t,n);return[a.linspace(r,o,s)]}case"Multinomial":{const r=Hw("logits",e,t,n),o=Hw("numSamples",e,t,n),s=Hw("seed",e,t,n);return[a.multinomial(r,o,s)]}case"OneHot":{const r=Hw("indices",e,t,n),o=Hw("depth",e,t,n),s=Hw("onValue",e,t,n),i=Hw("offValue",e,t,n),c=Hw("dtype",e,t,n);return[a.oneHot(r,o,s,i,c)]}case"Ones":return[a.ones(Hw("shape",e,t,n),Hw("dtype",e,t,n))];case"OnesLike":return[a.onesLike(Hw("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(Hw("shape",e,t,n),Hw("dtype",e,t,n),Hw("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(Hw("shape",e,t,n),Hw("minval",e,t,n),Hw("maxval",e,t,n),Hw("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(Hw("shape",e,t,n),Hw("minval",e,t,n),Hw("maxval",e,t,n),Hw("seed",e,t,n))];case"Range":{const r=Hw("start",e,t,n),o=Hw("stop",e,t,n),s=Hw("step",e,t,n);return[a.range(r,o,s,Hw("dtype",e,t,n))]}case"TruncatedNormal":{const r=Hw("shape",e,t,n),o=Hw("mean",e,t,n),s=Hw("stdDev",e,t,n),i=Hw("seed",e,t,n);return[a.truncatedNormal(r,o,s,Hw("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(Hw("shape",e,t,n),Hw("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(Hw("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:C;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Uk(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,o,s,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=Uk(e,t,n),l=Hw("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,o,s,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=Uk(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,o,s,i,c)]}case"Where":{const a=r.cast(Hw("condition",e,t,n),"bool"),o=[await r.whereAsync(a)];return a.dispose(),o}case"ListDiff":return r.setdiff1dAsync(Hw("x",e,t,n),Hw("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"LowerBound":{const r=Hw("sortedSequence",e,t,n),o=Hw("values",e,t,n);return[a.lowerBound(r,o)]}case"TopKV2":{const r=Hw("x",e,t,n),o=Hw("k",e,t,n),s=Hw("sorted",e,t,n),i=a.topk(r,o,s);return[i.values,i.indices]}case"UpperBound":{const r=Hw("sortedSequence",e,t,n),o=Hw("values",e,t,n);return[a.upperBound(r,o)]}case"Unique":{const r=Hw("x",e,t,n),o=a.unique(r);return[o.values,o.indices]}case"UniqueV2":{const r=Hw("x",e,t,n),o=Hw("axis",e,t,n),s=a.unique(r,o);return[s.values,s.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"ResizeBilinear":{const r=Hw("images",e,t,n),o=Hw("size",e,t,n),s=Hw("alignCorners",e,t,n),i=Hw("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[o[0],o[1]],s,i)]}case"ResizeNearestNeighbor":{const r=Hw("images",e,t,n),o=Hw("size",e,t,n),s=Hw("alignCorners",e,t,n),i=Hw("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[o[0],o[1]],s,i)]}case"CropAndResize":{const r=Hw("image",e,t,n),o=Hw("boxes",e,t,n),s=Hw("boxInd",e,t,n),i=Hw("cropSize",e,t,n),c=Hw("method",e,t,n),l=Hw("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,o,s,i,c,l)]}case"ImageProjectiveTransformV3":{const r=Hw("images",e,t,n),o=Hw("transforms",e,t,n),s=Hw("outputShape",e,t,n),i=Hw("fillValue",e,t,n),c=Hw("interpolation",e,t,n),l=Hw("fillMode",e,t,n);return[a.image.transform(r,o,c.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Hw("default",e,t,n);return[jw(e.name,t,n)||r];case"Placeholder":return[jw(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Zw(Hw("x",e,t,n))];case"IdentityN":return Hw("x",e,t,n).map((e=>Zw(e)));case"Shape":return[a.tensor1d(Hw("x",e,t,n).shape,"int32")];case"ShapeN":return Hw("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(Hw("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(Hw("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const o=Hw("x",e,t,n),s=Hw("data",e,t,n),i=Hw("message",e,t,n),c=Hw("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,c));return[o];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"Equal":return[a.equal(Hw("a",e,t,n),Hw("b",e,t,n))];case"NotEqual":return[a.notEqual(Hw("a",e,t,n),Hw("b",e,t,n))];case"Greater":return[a.greater(Hw("a",e,t,n),Hw("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(Hw("a",e,t,n),Hw("b",e,t,n))];case"Less":return[a.less(Hw("a",e,t,n),Hw("b",e,t,n))];case"LessEqual":return[a.lessEqual(Hw("a",e,t,n),Hw("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(Hw("a",e,t,n),Hw("b",e,t,n))];case"LogicalNot":return[a.logicalNot(Hw("a",e,t,n))];case"LogicalOr":return[a.logicalOr(Hw("a",e,t,n),Hw("b",e,t,n))];case"Select":case"SelectV2":return[a.where(Hw("condition",e,t,n),Hw("a",e,t,n),Hw("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(Hw("a",e,t,n),Hw("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(Hw("a",e,t,n),Hw("b",e,t,n),Hw("transposeA",e,t,n),Hw("transposeB",e,t,n))];case"Einsum":return[a.einsum(Hw("equation",e,t,n),...Hw("tensors",e,t,n))];case"Transpose":return[a.transpose(Hw("x",e,t,n),Hw("perm",e,t,n))];case"_FusedMatMul":const[r,o]=Hw("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===o,c=Hw("numArgs",e,t,n),l=Hw("leakyreluAlpha",e,t,n);if(s){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=Hw("args",e,t,n);return[a.fused.matMul({a:Hw("a",e,t,n),b:Hw("b",e,t,n),transposeA:Hw("transposeA",e,t,n),transposeB:Hw("transposeB",e,t,n),bias:u,activation:o,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(Hw("a",e,t,n),Hw("numLower",e,t,n),Hw("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(Hw("x",e,t,n),Hw("axis",e,t,n),Hw("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(Hw("x",e,t,n),Hw("mean",e,t,n),Hw("variance",e,t,n),Hw("offset",e,t,n),Hw("scale",e,t,n),Hw("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(Hw("x",e,t,n),Hw("radius",e,t,n),Hw("bias",e,t,n),Hw("alpha",e,t,n),Hw("beta",e,t,n))];case"Softmax":return[a.softmax(Hw("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(Hw("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:o}=a.raggedGather(Hw("paramsNestedSplits",e,t,n),Hw("paramsDenseValues",e,t,n),Hw("indices",e,t,n),Hw("outputRaggedRank",e,t,n));return r.concat(o)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:o}=a.raggedRange(Hw("starts",e,t,n),Hw("limits",e,t,n),Hw("splits",e,t,n));return[r,o]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(Hw("shape",e,t,n),Hw("values",e,t,n),Hw("defaultValue",e,t,n),Hw("rowPartitionTensors",e,t,n),Hw("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"Max":{const r=Hw("axis",e,t,n),o=Hw("keepDims",e,t,n);return[a.max(Hw("x",e,t,n),r,o)]}case"Mean":{const r=Hw("axis",e,t,n),o=Hw("keepDims",e,t,n);return[a.mean(Hw("x",e,t,n),r,o)]}case"Min":{const r=Hw("axis",e,t,n),o=Hw("keepDims",e,t,n);return[a.min(Hw("x",e,t,n),r,o)]}case"Sum":{const r=Hw("axis",e,t,n),o=Hw("keepDims",e,t,n);return[a.sum(Hw("x",e,t,n),r,o)]}case"All":{const r=Hw("axis",e,t,n),o=Hw("keepDims",e,t,n);return[a.all(Hw("x",e,t,n),r,o)]}case"Any":{const r=Hw("axis",e,t,n),o=Hw("keepDims",e,t,n);return[a.any(Hw("x",e,t,n),r,o)]}case"ArgMax":{const r=Hw("axis",e,t,n);return[a.argMax(Hw("x",e,t,n),r)]}case"ArgMin":{const r=Hw("axis",e,t,n);return[a.argMin(Hw("x",e,t,n),r)]}case"Prod":{const r=Hw("axis",e,t,n),o=Hw("keepDims",e,t,n);return[a.prod(Hw("x",e,t,n),r,o)]}case"Cumprod":{const r=Hw("axis",e,t,n),o=Hw("exclusive",e,t,n),s=Hw("reverse",e,t,n);return[a.cumprod(Hw("x",e,t,n),r,o,s)]}case"Cumsum":{const r=Hw("axis",e,t,n),o=Hw("exclusive",e,t,n),s=Hw("reverse",e,t,n);return[a.cumsum(Hw("x",e,t,n),r,o,s)]}case"Bincount":const r=Hw("x",e,t,n),o=Hw("weights",e,t,n),s=Hw("size",e,t,n);return[a.bincount(r,o,s)];case"DenseBincount":{const r=Hw("x",e,t,n),o=Hw("weights",e,t,n),s=Hw("size",e,t,n),i=Hw("binaryOutput",e,t,n);return[a.denseBincount(r,o,s,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"ConcatV2":case"Concat":{const r=Hw("n",e,t,n),o=Hw("axis",e,t,n);let s=Hw("tensors",e,t,n);return s=s.slice(0,r),[a.concat(s,o)]}case"Gather":{const r=Hw("x",e,t,n),o=Hw("indices",e,t,n);return[a.gather(r,a.cast(o,"int32"),0)]}case"GatherV2":{const r=Hw("axis",e,t,n),o=Hw("batchDims",e,t,n),s=Hw("x",e,t,n),i=Hw("indices",e,t,n);return[a.gather(s,a.cast(i,"int32"),r,o)]}case"Reverse":{const r=Hw("dims",e,t,n),o=[];for(let e=0;e<r.length;e++)r[e]&&o.push(e);const s=Hw("x",e,t,n);return[a.reverse(s,o)]}case"ReverseV2":{const r=Hw("axis",e,t,n),o=Hw("x",e,t,n);return[a.reverse(o,r)]}case"Slice":{const r=Hw("begin",e,t,n),o=Hw("size",e,t,n);return[a.slice(Hw("x",e,t,n),r,o)]}case"StridedSlice":{const r=Hw("begin",e,t,n),o=Hw("end",e,t,n),s=Hw("strides",e,t,n),i=Hw("beginMask",e,t,n),c=Hw("endMask",e,t,n),l=Hw("ellipsisMask",e,t,n),u=Hw("newAxisMask",e,t,n),h=Hw("shrinkAxisMask",e,t,n),d=Hw("x",e,t,n);return[a.stridedSlice(d,r,o,s,i,c,l,u,h)]}case"Pack":return bo((()=>{const r=Hw("axis",e,t,n),o=Hw("tensors",e,t,n),s=o[0].shape,i=a.squeeze(o[0]).shape,c=o.map((e=>{const t=G(e.shape,s);if(!t&&!G(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,s)}));return[a.stack(c,r)]}));case"Unpack":{const r=Hw("axis",e,t,n),o=Hw("tensor",e,t,n);return a.unstack(o,r)}case"Tile":{const r=Hw("reps",e,t,n);return[a.tile(Hw("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Hw("axis",e,t,n),o=Hw("numOrSizeSplits",e,t,n),s=Hw("x",e,t,n);return a.split(s,o,r)}case"ScatterNd":{const r=Hw("indices",e,t,n),o=Hw("values",e,t,n),s=Hw("shape",e,t,n);return[a.scatterND(r,o,s)]}case"GatherNd":{const r=Hw("x",e,t,n),o=Hw("indices",e,t,n);return[a.gatherND(r,o)]}case"SparseToDense":{const r=Hw("sparseIndices",e,t,n),o=Hw("outputShape",e,t,n),s=Hw("sparseValues",e,t,n),i=Hw("defaultValue",e,t,n);return[a.sparseToDense(r,s,o,s.dtype===i.dtype?i:a.cast(i,s.dtype))]}case"TensorScatterUpdate":{const r=Hw("indices",e,t,n),o=Hw("values",e,t,n),s=Hw("tensor",e,t,n);return[a.tensorScatterUpdate(s,r,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:o,emptyRowIndicator:s,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(Hw("indices",e,t,n),Hw("values",e,t,n),Hw("denseShape",e,t,n),Hw("defaultValue",e,t,n));return[r,o,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:o}=a.sparse.sparseReshape(Hw("inputIndices",e,t,n),Hw("inputShape",e,t,n),Hw("newShape",e,t,n));return[r,o]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(Hw("data",e,t,n),Hw("indices",e,t,n),Hw("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(Hw("data",e,t,n),Hw("indices",e,t,n),Hw("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"FFT":return[a.fft(Hw("x",e,t,n))];case"IFFT":return[a.ifft(Hw("x",e,t,n))];case"RFFT":return[a.rfft(Hw("x",e,t,n))];case"IRFFT":return[a.irfft(Hw("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(Hw("input",e,t,n),Hw("pattern",e,t,n),Hw("rewrite",e,t,n),Hw("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:o}=a.string.stringNGrams(Hw("data",e,t,n),Hw("dataSplits",e,t,n),Hw("separator",e,t,n),Hw("nGramWidths",e,t,n),Hw("leftPad",e,t,n),Hw("rightPad",e,t,n),Hw("padWidth",e,t,n),Hw("preserveShortSequences",e,t,n));return[r,o]}case"StringSplit":{const{indices:r,values:o,shape:s}=a.string.stringSplit(Hw("input",e,t,n),Hw("delimiter",e,t,n),Hw("skipEmpty",e,t,n));return[r,o,s]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(Hw("input",e,t,n),Hw("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:C;switch(e.op){case"Cast":return[a.cast(Hw("x",e,t,n),Hw("dtype",e,t,n))];case"ExpandDims":{const r=Hw("axis",e,t,n);return[a.expandDims(Hw("x",e,t,n),r)]}case"Squeeze":{const r=Hw("axis",e,t,n);return[a.squeeze(Hw("x",e,t,n),r)]}case"Reshape":return[a.reshape(Hw("x",e,t,n),Hw("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(Hw("x",e,t,n),Hw("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(Hw("x",e,t,n),Hw("padding",e,t,n),Hw("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(Hw("x",e,t,n),Hw("padding",e,t,n),Hw("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Hw("blockShape",e,t,n),o=Hw("paddings",e,t,n);return[a.spaceToBatchND(Hw("x",e,t,n),r,o)]}case"BatchToSpaceND":{const r=Hw("blockShape",e,t,n),o=Hw("crops",e,t,n);return[a.batchToSpaceND(Hw("x",e,t,n),r,o)]}case"DepthToSpace":{const r=Hw("blockSize",e,t,n),o=Hw("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(Hw("x",e,t,n),r,o)]}case"BroadcastTo":return[a.broadcastTo(Hw("x",e,t,n),Hw("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(Hw("s0",e,t,n),Hw("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=Hw("keyDType",e,t,n),o=Hw("valueDType",e,t,n),s=new Vk(r,o);return a.addHashTable(e.name,s),[s.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=Hw("tableHandle",e,t,n,a),o=Hw("keys",e,t,n),s=Hw("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(o,s)]}case"LookupTableFind":case"LookupTableFindV2":{const r=Hw("tableHandle",e,t,n,a),o=Hw("keys",e,t,n),s=Hw("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(o,s)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=Hw("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const o=Gw(e.op);if(o&&o.customExecutor)return o.customExecutor(new Fk(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return ge(o)?o.then((e=>[].concat(e))):[].concat(o)}class Hk{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function jk(e,t,n,a){const r=new Set,o=[];let s=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>Yw(e)[0])));a=a||[];const u=new Set(a.map((e=>Yw(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(Zk(e)||Jk(e)||$k(e))&&null==s&&(s=e,i=s.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),h.push(e))})):o.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:o,dynamicNode:s,syncInputs:i}}function Kk(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>Yw(e)[0])).map((t=>e.nodes[t])),o=e.initNodes||[],s=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...o]).filter(s),l=i([...c,...Object.values(e.nodes)]).filter(s),u=new Map(l.map((e=>[e.name,e]))),h={};for(const m of l){h[m.name]=h[m.name]||0;for(const e of m.children)s(e)||(h[e.name]=Number.POSITIVE_INFINITY),h[e.name]=(h[e.name]||0)+1}const d=Object.entries(h).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...d];for(;d.length>0;){const e=d.pop(),t=u.get(e);for(const n of t.children.filter(s))0===--h[n.name]&&(p.push(n.name),d.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const o of t.children)n.has(o.name)&&!r.has(o.name)&&(r.add(o.name),a.push(o.name))}const o=e.filter((e=>r.has(e.name)));return o}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),o=new Set(e.map((e=>e.name))),s=e=>o.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(s)){if(!n.has(e.name))throw new qk("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new qk("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new qk("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new qk("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class qk extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const Xk=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Yk=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Qk=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Zk(e){return Xk.has(e.op)}function Jk(e){return Yk.has(e.op)}function $k(e){return Qk.has(e.op)}class eS{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new eS(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=jk(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:o}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(o,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const s=Kk(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>Zk(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},o=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),s=new Map;for(let i=0;i<e.length;++i){const t=o[i];if(t===n)continue;const a=e[i],r=e[t];s.has(r.name)||s.set(r.name,[]),s.get(r.name).push(a)}return s}(s);return{orderedNodes:s,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return vo(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[Yw(e)[0]])),r=t.map((e=>Yw(e)[0])),o=new Set(r);let s=r.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(a,s);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,s),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=ve().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},u={};return bo((()=>{const n=new Hk(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,o]=Yw(t,n),s=[];s[o]=e[t],a[r]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(s))}));const r=this.getFrozenTensorIds(a),{orderedNodes:s,nodeLiveUntilMap:i}=c;for(const e of s){if(a[e.name])continue;const t=Gk(e,a,n,this._resourceManager);if(ge(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,o,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>jw(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,o,s){if(!Zk(t)&&!o.has(e)){for(const a of n[e])null!=a&&(s[a.id]=(s[a.id]||0)+t.children.length);for(const e of t.inputs){if(Zk(e))continue;const t=Kw(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,o){function s(e){return Zk(e)||r.has(e.name)}if(!Zk(e)&&null!=o)for(const i of o){if(s(i))continue;const e=Kw(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=ve().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const o=new Hk(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const s=await this.executeWithControlFlow(e,o,t,n),i=t.map((e=>jw(e,s,o))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(s).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&o.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),o=r.map((e=>this.graph.nodes[Yw(e)[0]])),s=n.map((e=>Yw(e)[0])),i=new Set(s);let c=s.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:h,syncInputs:d}=jk(e,c,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=Yw(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(o,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=h||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!Zk(e)&&!jw(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(d,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,o,s,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&Hw("isConstant",e.node,a,n)&&([u]=qw(e.node.name,n)),null==a[e.node.name]){const h=Gk(e.node,a,n,this._resourceManager);u||([u]=qw(e.node.name,n));const d=n.currentContext;ge(h)?l.push(h.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=d,this.checkTensorForDisposal(u,e.node,a,n,o,s,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(h)),this.checkTensorForDisposal(u,e.node,a,n,o,s,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,o){e.children.forEach((e=>{const[s]=qw(e.name,n);!r[s]&&o.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!jw(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!jw(e,a,n)))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=Yw(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;P(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&P(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const o=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=o?a[o.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Yw(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Yw(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class tS{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const nS="?tfjs-format=file",aS="model.json";class rS{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=a,null==n&&(this.loadOptions={}),this.resourceManager=new tS}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ge(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await _o(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new eS(yk.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=yk.Instance.transformGraph(e.modelInitializer);this.initializer=new eS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof Ar?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ar)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,o,s;const i=null===(s=null===(o=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===o?void 0:o[n])||void 0===s?void 0:s.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&xo(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function oS(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"===typeof t&&(t=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(aS).concat(nS)}(t));const r=new rS(t,n,a);return await r.load(),r}function sS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(uS(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const o in e){const s=sS(e[o],t,n,a);r[o]=s}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function iS(e){return cS(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:lS)}function cS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(uS(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const o in a){const a=cS(e.map((e=>e[o])),t,n);r[o]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function lS(e){return null===e?null:uS(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function uS(e){let t=!1;if(ve().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Ar)&&!(e instanceof Promise)&&!t)}function hS(e){return function(e,t){return sS(e,t)}(e,dS)}function dS(e){return e instanceof Ar?{value:e.clone(),recurse:!1}:uS(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class pS{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class fS extends pS{constructor(){super(fS.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function mS(e){return new xS(e)}function gS(e,t){return new AS(e,t)}fS.INITIAL_CAPACITY=32;class yS{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new NS(this,e)}filter(e){return new IS(this,e)}map(e){return new CS(this,e)}mapAsync(e){return new TS(this,e)}serialMapAsync(e){return new TS(this,e).serial()}flatmap(e){return new RS(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new SS(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:lS;return this.rowMajorBatch(e,t).map((e=>iS(e,n)))}concatenate(e,t){return new AS(new bS([this,e]),t)}take(e){return e<0||null==e?this:new kS(this,e)}skip(e){return e<0||null==e?this:new wS(this,e)}prefetch(e){return new FS(this,e)}shuffle(e,t){return new OS(this,e,t)}serial(){return new vS(this)}}class bS extends yS{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:hS(e),done:!1}}}class xS extends yS{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class vS extends yS{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class wS extends yS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;xo(e.value)}return this.upstream.next()}}class kS extends yS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class SS extends yS{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class IS extends yS{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;xo(e.value)}}}class CS extends yS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=jr(e.value),n=this.transform(e.value),a=jr(n);for(const r of t)Hr(r,a)||r.dispose();return{value:n,done:!1}}}class NS extends yS{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class TS extends yS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=jr(e.value),n=await this.transform(e.value),a=jr(n);for(const r of t)Hr(r,a)||r.dispose();return{value:n,done:!1}}}class ES extends yS{constructor(){super(),this.outputQueue=new fS,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class RS extends ES{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=jr(e.value),n=this.transform(e.value),a=jr(n);this.outputQueue.pushAll(n);for(const r of t)Hr(r,a)||r.dispose();return!0}}class AS extends yS{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var _S;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(_S||(_S={}));class FS extends yS{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new pS(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class OS extends FS{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Vu.alea(n||ur().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class DS{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return P(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),MS((async()=>(await n.iterator()).columnMajorBatch(e,t,zS)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,MS((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,MS((async()=>(await t.iterator()).filter((t=>bo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return MS((async()=>(await t.iterator()).map((t=>bo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return MS((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return MS((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,MS((async()=>gS(mS((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,MS((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=Vu.alea(t||ur().toString());return MS((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,MS((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function MS(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends DS{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function zS(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Ar||pr(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ar?Th(e):po(e)}(e),recurse:!1}}return{value:null,recurse:!0}}DS.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function LS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&P("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const PS=qh;class BS extends _{nextDataId(){return BS.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new A(this,go())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ve().get("IS_NODE")&&La("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&te(n[0])){const r=n.map((e=>hr(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){return Kp(this.readSync(n.real.dataId),this.readSync(n.imag.dataId))}return le(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>dr(e)));return Ns(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ns(e.shape,e.dtype,t)}makeOutput(e,t,n){return go().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ur();e();return{kernelMs:ur()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){LS([e],"where");const t=this.readSync(e.dataId);return PS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}BS.nextDataId=0;function WS(e){return(t,n,a)=>{const r=J(n,t.length);for(let o=0;o<t.length;++o)r[o]=e(t[o],a);return r}}function US(e,t,n){return VS(e,WS(t),n)}function VS(e,t,n){return a=>{let{inputs:r,attrs:o,backend:s}=a;const{x:i}=r;LS(i,e);const c=s,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Tf(l)}else u=l;const h=n||i.dtype,d=t(u,h,o);return c.makeTensorInfo(i.shape,h,d)}}ko("cpu",(()=>new BS),1);const GS=US(St,(e=>e>=0?e:Math.exp(e)-1)),HS={kernelName:St,backendName:"cpu",kernelFunc:GS};function jS(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const KS={kernelName:Wt,backendName:"cpu",kernelFunc:jS};function qS(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a;LS([r],"leakyRelu");const s=U(r.shape),i=n.data.get(r.dataId).values,c=Z("float32",s);for(let l=0;l<i.length;l++)c[l]=i[l]<0?o*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const XS={kernelName:Kt,backendName:"cpu",kernelFunc:qS};function YS(e){return(t,n,a,r,o)=>{const s=ei(t,n),i=s.length,c=se(s),l=Z(o,U(s)),u=t.length,h=n.length,d=se(t),p=se(n),f=Js(t,s),m=Js(n,s);if(f.length+m.length===0)for(let g=0;g<l.length;++g)l[g]=e(a[g%a.length],r[g%r.length]);else for(let g=0;g<l.length;++g){const t=me(g,i,c),n=t.slice(-u);f.forEach((e=>n[e]=0));const o=fe(n,u,d),s=t.slice(-h);m.forEach((e=>s[e]=0));const y=fe(s,h,p);l[g]=e(a[o],r[y])}return[l,s]}}const QS=YS(((e,t)=>e<0?t*e:e));function ZS(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;LS([a,r],"prelu");const o=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,[i,c]=QS(a.shape,r.shape,o,s,"float32");return n.makeTensorInfo(c,"float32",i)}const JS={kernelName:En,backendName:"cpu",kernelFunc:ZS},$S=US(zn,(e=>Math.max(0,e))),eI={kernelName:zn,backendName:"cpu",kernelFunc:$S},tI=US(Vn,(e=>Math.min(Math.max(0,e),6))),nI={kernelName:Vn,backendName:"cpu",kernelFunc:tI},aI=WS((e=>1/(1+Math.exp(-e)))),rI=US(ta,(e=>1/(1+Math.exp(-e)))),oI={kernelName:ta,backendName:"cpu",kernelFunc:rI};function sI(e,t,n,a,r){if("linear"===n)return jS({inputs:{x:t},backend:e});if("relu"===n)return $S({inputs:{x:t},backend:e});if("elu"===n)return GS({inputs:{x:t},backend:e});if("relu6"===n)return tI({inputs:{x:t},backend:e});if("prelu"===n)return ZS({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return qS({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return rI({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function iI(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",o),imag:n.makeTensorInfo(r.shape,"float32",s)},i}const cI={kernelName:Ze,backendName:"cpu",kernelFunc:iI};function lI(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return iI({inputs:{real:lI(e,t,"float32"),imag:lI(e,t,"float32")},backend:e})}const a=he(U(t),n);return e.makeTensorInfo(t,n,a)}function uI(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const hI={kernelName:Dn,backendName:"cpu",kernelFunc:uI};function dI(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=lr([0],n),[r,o]=YS(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[o,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function pI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:o}=a;if("complex64"===o){if("complex64"===r.dtype)return jS({inputs:{x:r},backend:n});const e=lI(n,r.shape,r.dtype),t=pI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=iI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=uI({inputs:{input:r},backend:n}),t=pI({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!$(r.dtype,o)){const e=jS({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}const s=n.data.get(r.dataId).values,[i,c,l]=dI(s,r.shape,r.dtype,o);return n.makeTensorInfo(i,c,l)}const fI={kernelName:Xe,backendName:"cpu",kernelFunc:pI};function mI(e,t,n,a){return null==n?n=>{let{inputs:r,backend:o}=n;const{a:s,b:i}=r,c=o;LS([s,i],e);const l=c.data.get(s.dataId).values,u=c.data.get(i.dataId).values,h="string"===s.dtype?Tf(l):l,d="string"===s.dtype?Tf(u):u,p=a||s.dtype,[f,m]=t(s.shape,i.shape,h,d,p);return c.makeTensorInfo(m,p,f)}:e=>{let{inputs:r,backend:o}=e;const{a:s,b:i}=r,c=o;if("complex64"===s.dtype||"complex64"===i.dtype){const e=pI({inputs:{x:s},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,o=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=pI({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(u.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=c.data.get(d.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(s.shape,i.shape,o,l,f,m),x=c.makeTensorInfo(b,"float32",g),v=c.makeTensorInfo(b,"float32",y),w=iI({inputs:{real:x,imag:v},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(x),c.disposeIntermediateTensorInfo(v),w}{const e=c.data.get(s.dataId).values,n=c.data.get(i.dataId).values,r=a||s.dtype,[o,l]=t(s.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,o)}}}function gI(e){return(t,n,a,r,o,s)=>{const i=ei(t,n),c=U(i),l=i.length,u=se(i),h=Z("float32",c),d=Z("float32",c),p=Js(t,i),f=Js(n,i),m=Kp(a,r),g=Kp(o,s),y=t.length,b=se(t),x=n.length,v=se(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);h[w]=a.real,d[w]=a.imag}else for(let w=0;w<h.length;w++){const t=me(w,l,u),n=t.slice(-y);p.forEach((e=>n[e]=0));const a=fe(n,y,b),r=t.slice(-x);f.forEach((e=>r[e]=0));const o=fe(r,x,v),s=e(m[2*a],m[2*a+1],g[2*o],g[2*o+1]);h[w]=s.real,d[w]=s.imag}return[h,d,i]}}const yI=YS(((e,t)=>e+t)),bI=gI(((e,t,n,a)=>({real:e+n,imag:t+a}))),xI=mI(Ee,yI,bI),vI={kernelName:Ee,backendName:"cpu",kernelFunc:xI};function wI(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:o}=a,s=U(r.shape),i=X(o,s),c=U(i);P(s===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(s," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const kI={kernelName:Ln,backendName:"cpu",kernelFunc:wI};function SI(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;LS([r,o],"matMul");const c=r.shape.length,l=o.shape.length,u=s?r.shape[c-2]:r.shape[c-1],h=i?o.shape[l-1]:o.shape[l-2],d=s?r.shape[c-1]:r.shape[c-2],p=i?o.shape[l-2]:o.shape[l-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=U(f),y=U(m),b=ei(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);P(u===h,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(h,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(o.shape," and transposeA=").concat(s)+" and transposeB=".concat(i," must match.")));const x=i?[y,p,h]:[y,h,p],v=wI({inputs:{x:r},backend:n,attrs:{shape:s?[g,u,d]:[g,d,u]}}),w=wI({inputs:{x:o},backend:n,attrs:{shape:x}}),k=s?v.shape[1]:v.shape[2],S=s?v.shape[2]:v.shape[1],I=i?w.shape[1]:w.shape[2],C=Math.max(g,y),N=n.data.get(v.dataId).values,T=n.data.get(w.dataId).values,E=se(v.shape),R=se(w.shape),[A,_,F]=s?[E[0],1,E[1]]:[E[0],E[1],1],[O,D,M]=i?[1,R[1],R[0]]:[R[1],1,R[0]],z=S*I,L=Ns([C,S,I],v.dtype),B=L.values,W=n.blockSize;for(let P=0;P<C;P++){const e=P%g,t=P%y;for(let n=0;n<S;n+=W){const a=Math.min(n+W,S);for(let r=0;r<I;r+=W){const o=Math.min(r+W,I);for(let s=0;s<k;s+=W){const i=Math.min(s+W,k);for(let c=n;c<a;c++)for(let n=r;n<o;n++){let a=0;for(let r=s;r<i;r++){a+=N[e*A+c*_+r*F]*T[r*O+n*D+t*M]}B[P*z+(c*I+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const II={kernelName:Ge,backendName:"cpu",kernelFunc:SI};const CI={kernelName:Da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;let d,p,f;const m=[];d=SI({inputs:{a:r,b:o},attrs:{transposeA:c,transposeB:l},backend:n}),s&&(p=xI({inputs:{a:d,b:s},backend:n}),m.push(d),d=p),u&&(f=sI(n,d,u,i,h),m.push(d),d=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return d}};function NI(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const TI={kernelName:Ce,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;LS(t,"abs");let a=new Float32Array(U(t.shape));return a=NI(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},EI=US(Ne,(e=>Math.acos(e))),RI={kernelName:Ne,backendName:"cpu",kernelFunc:EI},AI=US(Te,(e=>Math.acosh(e))),_I={kernelName:Te,backendName:"cpu",kernelFunc:AI};const FI={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;LS(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),o=Ns(a[0].shape,a[0].dtype),s=o.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<s.length;t++)s[t]+=e[t]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}};function OI(e,t,n,a,r){const o=t.length,s=U(t),i=se(t),c=se(r),l=Z(n,U(r));for(let u=0;u<s;++u){const t=me(u,o,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[fe(n,o,c)]=e[u]}return l}function DI(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:o}=n;LS(r,"transpose");const s=r.shape.length,i=new Array(s);for(let l=0;l<i.length;l++)i[l]=r.shape[o[l]];const c=OI(a.data.get(r.dataId).values,r.shape,r.dtype,o,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const MI={kernelName:Na,backendName:"cpu",kernelFunc:DI};const zI={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;LS(r,"all");const i=Y(o,r.shape);let c=i;const l=Cl(c,r.shape.length);let u=r;null!=l&&(u=DI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Tl(c.length,r.shape.length)),Il("all",c,u.shape.length);const[h,d]=kl(u.shape,c),p=U(d),f=he(U(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(s){const e=wI({inputs:{x:g},backend:n,attrs:{shape:Sl(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const LI={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;LS(r,"any");const i=Y(o,r.shape);let c=i;const l=Cl(c,r.shape.length);let u=r;null!=l&&(u=DI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Tl(c.length,r.shape.length)),Il("any",c,u.shape.length);const[h,d]=kl(u.shape,c),p=U(d),f=he(U(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t||a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(s){const e=wI({inputs:{x:g},backend:n,attrs:{shape:Sl(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const PI={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;LS(r,"argMax");let s=Y(o,r.shape);const i=Cl(s,r.shape.length);let c=r;const l=[];null!=i&&(c=DI({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=Tl(s.length,c.shape.length)),s=[s[0]],Il("argMax",s,c.shape.length);const[u,h]=kl(c.shape,s),d=he(U(u),"int32"),p=U(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r>t&&(t=r,n=a)}d[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}};const BI={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;LS(r,"argMin");let s=Y(o,r.shape);const i=Cl(s,r.shape.length);let c=r;const l=[];null!=i&&(c=DI({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=Tl(s.length,c.shape.length)),s=[s[0]],Il("argMin",s,c.shape.length);const[u,h]=kl(c.shape,s),d=he(U(u),"int32"),p=U(h),f=n.data.get(c.dataId).values;for(let m=0;m<d.length;++m){const e=m*p;let t=f[e],n=0;for(let a=0;a<p;++a){const r=f[e+a];r<t&&(t=r,n=a)}d[m]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",d)}},WI=US(De,(e=>Math.asin(e))),UI={kernelName:De,backendName:"cpu",kernelFunc:WI},VI=US(Me,(e=>Math.asinh(e))),GI={kernelName:Me,backendName:"cpu",kernelFunc:VI},HI=US(ze,(e=>Math.atan(e))),jI={kernelName:ze,backendName:"cpu",kernelFunc:HI},KI=YS(((e,t)=>Math.atan2(e,t))),qI=mI(Pe,KI),XI={kernelName:Pe,backendName:"cpu",kernelFunc:qI},YI=US(Le,(e=>Math.atanh(e))),QI={kernelName:Le,backendName:"cpu",kernelFunc:YI};function ZI(e,t,n,a,r,o){const s=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ns(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let v=0;v<r.batchSize;++v){const t=v*y,n=v*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const v=y*s-d,w=Math.max(0,v),k=Math.min(r.inHeight,u+v),S=t+y*b;for(let t=0;t<r.outWidth;++t){const s=t*i-p,u=Math.max(0,s),d=Math.min(r.inWidth,h+s);let y=f,b=0,v=0;for(let t=w;t<k;t+=c){const r=n+t*a[1];for(let t=u;t<d;t+=l){const n=e[r+t*a[2]+m];"max"===o&&n>y?y=n:"avg"===o&&(b+=n,v++)}if(isNaN(y))break}g[S+t*x+m]="avg"===o?b/v:y}}}return m}function JI(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=Ns(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=Ns(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-p;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,h+n);for(let i=0;i<a.outWidth;++i){const h=i*c-f;let p=h;for(;p<0;)p+=u;const x=Math.min(a.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=l){const s=t-n;for(let n=p;n<x;n+=u){const i=n-h,c=m.get(g,t,n,e);c>v&&(v=c,w=r?o?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:s*d+i)}}s.set(w,g,t,i,e)}}return s}function $I(e,t,n,a,r,o){const s=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ns(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let C=0;C<r.batchSize;++C){const t=C*w,n=C*a[0];for(let x=0;x<r.inChannels;++x)for(let w=0;w<r.outDepth;++w){const C=w*s-m;let N=C;for(;N<0;)N+=l;const T=Math.min(r.inDepth,d+C),E=t+w*k;for(let t=0;t<r.outHeight;++t){const s=t*i-g;let d=s;for(;d<0;)d+=u;const m=Math.min(r.inHeight,p+s),w=E+t*S;for(let t=0;t<r.outWidth;++t){const s=t*c-y;let i=s;for(;i<0;)i+=h;const p=Math.min(r.inWidth,f+s),g=w+t*I;let k=b,S=0,C=0;for(let t=N;t<T;t+=l){const r=n+t*a[1];for(let t=d;t<m;t+=u){const n=r+t*a[2];for(let t=i;t<p;t+=h){const r=e[n+t*a[3]+x];if("max"===o&&r>k?k=r:"avg"===o&&(S+=r,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+x]="avg"===o?S/Math.max(C,1):k}}}}return x}const eC={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;LS(r,"avgPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;P(kc(s,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const l=dc(r.shape,o,s,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&G(l.inShape,l.outShape))u=jS({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=se(r.shape),a=ZI(e,r.shape,r.dtype,t,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const tC={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:l}=a;LS(r,"avgPool3d");const u=pc(r.shape,o,s,1,i,c,l),h=$I(n.data.get(r.dataId).values,r.shape,r.dtype,se(r.shape),u,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const nC={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;LS([r,o],"avgPool3DGrad");const u=pc(o.shape,s,i,1,c,l),h=u.strideDepth,d=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,S=v-1-u.padInfo.front,I=k-1-u.padInfo.left,C=w-1-u.padInfo.top,N=Ns(o.shape,"float32"),T=1/(f*m*g),E=n.bufferSync(r);for(let R=0;R<u.batchSize;++R)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-S,o=n-C,s=a-I;let i=0;for(let t=0;t<v;t+=y){const n=(r+t)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(o+t)/d;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let t=0;t<k;t+=x){const r=(s+t)/p;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=E.get(R,n,a,r,e)}}}N.set(i*T,R,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const aC={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o;LS([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=dc(s.shape,i,c,1,l),h=u.strideHeight,d=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,x=b-1-u.padInfo.left,v=y-1-u.padInfo.top,w=Ns(s.shape,"float32"),k=1/(p*f),S=n.data.get(r.dataId).values,I=Ns(r.shape,"float32",S);for(let C=0;C<u.batchSize;++C)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inHeight;++t)for(let n=0;n<u.inWidth;++n){const a=t-v,r=n-x;let o=0;for(let t=0;t<y;t+=m){const n=(a+t)/h;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;o+=I.get(C,n,a,e)}}w.set(o*k,C,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const rC={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:o,offset:s,mean:i,variance:c}=t;P(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),P(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),P(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),LS([r,i,c,o,s],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=n.data.get(c.dataId).values,p=o?n.data.get(o.dataId).values:new Float32Array([1]),f=s?n.data.get(s.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=d.length,x=h.length;let v=0,w=0,k=0,S=0;for(let I=0;I<u.length;++I)m[I]=f[v++]+(u[I]-h[w++])*p[k++]/Math.sqrt(d[S++]+l),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function oC(e,t,n,a,r){const o=Xi(a,t,n),s=U(n),i=se(a);if(o){const n=Yi(t,i);return"string"===r?e.slice(n,n+s):e.subarray(n,n+s)}const c=Ns(a,r,"string"===r?Tf(e):e),l=Ns(n,r);for(let u=0;u<l.size;++u){const e=l.indexToLoc(u),n=e.map(((e,n)=>e+t[n]));l.set(c.get(...n),...e)}return"string"===r?Ef(l.values):l.values}function sC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,size:s}=a;LS(r,"slice");const[i,c]=Qi(r,o,s);zi(r,i,c);const l=oC(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const iC={kernelName:Zn,backendName:"cpu",kernelFunc:sC};const cC={kernelName:He,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:s}=a;LS([r],"batchToSpaceND");const i=o.reduce(((e,t)=>e*t)),c=Fp(r.shape,o,i),l=Op(c.length,o.length),u=Dp(r.shape,o,i),h=Mp(s,o.length),d=zp(u,s,o.length),p=wI({inputs:{x:r},backend:n,attrs:{shape:c}}),f=DI({inputs:{x:p},backend:n,attrs:{perm:l}}),m=wI({inputs:{x:f},backend:n,attrs:{shape:u}}),g=sC({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function lC(e,t,n,a,r){const o=U(a),s=he(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(s[n]+=o>0?t[i]:1)}return s}function uC(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],o=e.shape[1],s=Ns([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<o;r++){const o=e.get(i,r);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?s.set(1,i,o):t.size>0?s.set(s.get(i,o)+t.get(i,r),i,o):s.set(s.get(i,o)+1,i,o))}return s}const hC={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s}=a,i=lC(n.data.get(r.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,i)}},dC=YS(((e,t)=>e&t)),pC=mI(Ke,dC),fC={kernelName:Ke,backendName:"cpu",kernelFunc:pC};const mC={kernelName:qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,o=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,i=ei(Array.from(o),Array.from(s));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},gC=WS((e=>Math.ceil(e))),yC=VS(Ye,gC),bC={kernelName:Ye,backendName:"cpu",kernelFunc:yC},xC=US(Qe,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),vC={kernelName:Qe,backendName:"cpu",kernelFunc:xC},wC={kernelName:Je,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(U(t.shape)),r=n.data.get(t.dataId),o=r.complexTensorInfos.real,s=r.complexTensorInfos.imag,i=n.data.get(o.dataId).values,c=n.data.get(s.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];a[l]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function kC(e,t,n,a){const r=J(n,U(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=U(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const o="string"===n?Tf(e.vals):e.vals;let s=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=o[s++]}a+=e.shape[1]}))}return r}function SC(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,o=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,o)}const IC={kernelName:Vt,backendName:"cpu",kernelFunc:SC};function CC(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=Y(r,t[0].shape)[0];kp(t.map((e=>e.shape)),o);let s=Sp(t.map((e=>e.shape)),o);if(0===U(s))return n.makeTensorInfo(s,t[0].dtype,[]);const i=t.filter((e=>U(e.shape)>0));if(1===i.length)return jS({inputs:{x:i[0]},backend:n});if("complex64"===i[0].dtype){const e=i.map((e=>uI({inputs:{input:e},backend:n}))),t=i.map((e=>SC({inputs:{input:e},backend:n}))),a=CC({inputs:e,backend:n,attrs:{axis:o}}),r=CC({inputs:t,backend:n,attrs:{axis:o}}),s=iI({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}const c=i.map((e=>{const t=U(e.shape.slice(o));return wI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));s=Sp(c.map((e=>e.shape)),1);const u=1===c[0].shape[0],h=kC(l,s,t[0].dtype,u),d=Sp(i.map((e=>e.shape)),o),p=n.makeTensorInfo(d,t[0].dtype,h);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const NC={kernelName:$e,backendName:"cpu",kernelFunc:CC};function TC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;LS([r,o],"conv2d");const h=Ic(c),d=fc(r.shape,o.shape,s,l,i,u,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.padInfo.left,b=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Nr(d.outShape,r.dtype),w=se(r.shape),k=se(o.shape),S=w[0],I=x?w[1]:w[2],C=x?w[2]:1,N=x?1:w[1],T=v.strides[0],E=x?v.strides[1]:v.strides[2],R=x?v.strides[2]:1,A=x?1:v.strides[1],_=n.data.get(r.dataId).values,F=n.data.get(o.dataId).values,O=v.values;for(let D=0;D<d.batchSize;++D){const e=D*S,t=D*T;for(let n=0;n<d.outHeight;++n){const a=t+n*E,r=n*d.strideHeight-b;for(let t=0;t<p;++t){const n=r+t*m;if(n<0||n>=d.inHeight)continue;const o=t*k[0],s=e+n*I;for(let e=0;e<d.outWidth;++e){const t=a+e*R,n=e*d.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=d.inWidth)continue;const r=s+a*C;let i=o+e*k[1];for(let e=0;e<d.inChannels;++e){const n=_[r+e*N];for(let e=0;e<d.outChannels;++e)O[t+e*A]+=n*F[i+e];i+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,O)}const EC={kernelName:et,backendName:"cpu",kernelFunc:TC};const RC={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;LS([r,o],"conv2dBackpropFilter");const h=Ic(c),d=fc(r.shape,u,s,1,i,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new Nr(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(o.dataId).values,S=new Nr(r.shape,r.dtype,w),I=new Nr(o.shape,o.dtype,k);for(let C=0;C<m;++C){const e=Math.max(0,Math.ceil((v-C)/p)),t=Math.min(d.outHeight,(d.inHeight+v-C)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(d.outWidth,(d.inWidth+x-n)/f);for(let o=0;o<d.inChannels;++o)for(let s=0;s<d.outChannels;++s){let i=0;for(let c=0;c<d.batchSize;++c)for(let l=e;l<t;++l){const e=C+l*p-v;for(let t=a;t<r;++t){const a=n+t*f-x;i+=y?S.get(c,e,a,o)*I.get(c,l,t,s):S.get(c,o,e,a)*I.get(c,s,l,t)}}b.set(i,C,n,o,s)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const AC={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;LS([r,o],"conv2dBackpropInput");const h=se(o.shape),d=se(r.shape);let p=Ic(l);const f=fc(s,o.shape,i,1,c,u,!1,p),m=new Nr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(o.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:S,filterWidth:I,inChannels:C,inHeight:N,inWidth:T,outChannels:E,outHeight:R,outWidth:A,strideHeight:_,strideWidth:F}=f;p=f.dataFormat;const O=S-1-f.padInfo.top,D=I-1-f.padInfo.left,M="channelsLast"===p,z=m.strides[0],L=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=d[0],U=M?d[1]:d[2],V=M?d[2]:1,G=M?1:d[1];for(let H=0;H<k;++H)for(let e=0;e<C;++e)for(let t=0;t<N;++t){const n=t-O,a=Math.max(0,Math.ceil(n/_)),r=Math.min(R,(S+n)/_);for(let o=0;o<T;++o){const s=o-D,i=Math.max(0,Math.ceil(s/F)),c=Math.min(A,(I+s)/F);let l=0;for(let t=a;t<r;++t){const a=t*_-n;for(let n=i;n<c;++n){const r=W*H+U*t+V*n,o=x*(S-1-a)+v*(I-1-(n*F-s))+w*e;for(let e=0;e<E;++e){l+=y[r+G*e]*b[o+e]}}}g[z*H+L*t+P*o+B*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const _C={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a;LS([r,o],"conv3d");const l=mc(r.shape,o.shape,s,c,i),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,v=new Nr(l.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(o.dataId).values,S=v.values,I=se(r.shape),C=se(o.shape);for(let N=0;N<l.batchSize;++N){const e=N*I[0],t=N*v.strides[0];for(let n=0;n<l.outDepth;++n){const a=t+n*v.strides[1],r=n*l.strideDepth-y;for(let t=0;t<u;++t){const n=r+t*p;if(n<0||n>=l.inDepth)continue;const o=t*C[0],s=e+n*I[1];for(let e=0;e<l.outHeight;++e){const t=a+e*v.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const a=n+e*f;if(a<0||a>=l.inHeight)continue;const r=o+e*C[1],i=s+a*I[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-b;for(let e=0;e<d;++e){const t=a+e*m;if(t<0||t>=l.inWidth)continue;const o=r+e*C[2],s=i+t*l.inChannels;let c=o;for(let e=0;e<l.inChannels;++e){const t=w[s+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*k[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const FC={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,filterShape:c}=a;LS([r,o],"conv3dBackpropFilterV2");const l=se(r.shape),u=se(o.shape),h=mc(r.shape,c,s,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Nr(h.filterShape,"float32"),x=b.values,[v,w,k,S]=b.strides,I=n.data.get(o.dataId).values,[C,N,T,E]=u,R=n.data.get(r.dataId).values,[A,_,F,O]=l,D=h.padInfo.front,M=h.padInfo.left,z=h.padInfo.top;for(let L=0;L<m;++L){const e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(h.outDepth,(h.inDepth+D-L)/d),n=L*v;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((z-a)/p)),o=Math.min(h.outHeight,(h.inHeight+z-a)/p),s=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((M-n)/f)),c=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+s;for(let s=0;s<h.inChannels;++s){const u=s*S+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let u=0;u<h.batchSize;++u){const h=u*A,g=u*C;for(let u=e;u<t;++u){const e=(L+u*d-D)*_+h,t=u*N+g;for(let u=r;u<o;++u){const r=(a+u*p-z)*F+e,o=u*T+t;for(let e=i;e<c;++e){const t=e*E+o;m+=R[(n+e*f-M)*O+r+s]*I[t+l]}}}}x[u+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const OC={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{pad:s,strides:i,inputShape:c}=a;LS([r],"conv3dBackpropInputV2");const l=se(r.shape),u=se(o.shape),h=mc(c,o.shape,i,1,s),d=new Nr(h.inShape,"float32"),p=d.values,[f,m,g,y]=d.strides,b=n.data.get(r.dataId).values,[x,v,w,k]=l,S=n.data.get(o.dataId).values,[I,C,N,T]=u,{batchSize:E,filterDepth:R,filterHeight:A,filterWidth:_,inChannels:F,inDepth:O,inHeight:D,inWidth:M,outChannels:z,outDepth:L,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=R-1-h.padInfo.front,H=A-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let K=0;K<E;++K)for(let e=0;e<F;++e)for(let t=0;t<O;++t){const n=t-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(L,(R+n)/W);for(let o=0;o<D;++o){const s=o-H,i=Math.max(0,Math.ceil(s/U)),c=Math.min(P,(A+s)/U);for(let l=0;l<M;++l){const u=l-j,h=Math.max(0,Math.ceil(u/V)),d=Math.min(B,(_+u)/V);let E=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=i;n<c;++n){const r=n*U-s;for(let o=h;o<d;++o){const s=x*K+v*t+w*n+k*o,i=I*(R-1-a)+C*(A-1-r)+N*(_-1-(o*V-u))+T*e;for(let e=0;e<z;++e){E+=b[s+e]*S[i+e]}}}}p[f*K+m*t+g*o+y*l+e]=E}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},DC=US(st,(e=>Math.cos(e))),MC={kernelName:st,backendName:"cpu",kernelFunc:DC},zC=US(it,(e=>Math.cosh(e))),LC={kernelName:it,backendName:"cpu",kernelFunc:zC};const PC={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:l}=a,[u,h,d,p]=r.shape,f=o.shape[0],[m,g]=i,y=Ns([f,m,g,p],"float32"),b=n.data.get(o.dataId).values,x=n.data.get(s.dataId).values,v=n.data.get(r.dataId).values,w=se(r.shape),k=se(y.shape);for(let S=0;S<f;S++){const e=4*S,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],o=x[S];if(o>=u)continue;const s=m>1?(a-t)*(h-1)/(m-1):0,i=g>1?(r-n)*(d-1)/(g-1):0;for(let u=0;u<m;u++){const e=m>1?t*(h-1)+u*s:.5*(t+a)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),s=e-t;for(let e=0;e<g;e++){const c=g>1?n*(d-1)+e*i:.5*(n+r)*(d-1);if(c<0||c>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const h=Math.floor(c),f=Math.ceil(c),m=c-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+o*w[0];const i=v[r];r=n+f*w[2]+t*w[1]+o*w[0];const c=v[r];r=n+h*w[2]+a*w[1]+o*w[0];const l=v[r];r=n+f*w[2]+a*w[1]+o*w[0];const d=i+(c-i)*m,p=l+(v[r]-l)*m;r=n+e*k[2]+u*k[1]+S*k[0],y.values[r]=d+(p-d)*s}}}else for(let t=0;t<g;++t){const a=g>1?n*(d-1)+t*i:.5*(n+r)*(d-1);if(a<0||a>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const s=Math.round(a),c=Math.round(e);for(let e=0;e<p;e++){const n=e+s*w[2]+c*w[1]+o*w[0],a=e+t*k[2]+u*k[1]+S*k[0];y.values[a]=v[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const BC={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;LS(r,"cumprod");const c=Cl([o],r.shape.length);let l=r;null!=c&&(l=DI({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Tl(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Br(l.dtype,"int32"),d=ue(U(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=s?1:p[t];else{const n=m(y,e-1);d[t]=s?p[n]*d[n]:p[t]*d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=DI({inputs:{x:g},backend:n,attrs:{perm:Nl(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const WC={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;LS(r,"cumsum");const c=Cl([o],r.shape.length);let l=r;null!=c&&(l=DI({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Tl(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const h=Br(l.dtype,"int32"),d=he(U(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)d[t]=s?0:p[t];else{const n=m(y,e-1);d[t]=s?p[n]+d[n]:p[t]+d[n]}}const g=n.makeTensorInfo(l.shape,h,d);if(null!=c){const e=DI({inputs:{x:g},backend:n,attrs:{perm:Nl(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const UC={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s,binaryOutput:i}=a;if(1===r.shape.length){const e=lC(n.data.get(r.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,e)}if(2===r.shape.length){const e=uC(n.bufferSync(r),n.bufferSync(o),s,i);return n.makeTensorInfo(e.shape,o.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const VC={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a;P("NHWC"===s,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(s)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],h=c*o,d=l*o,p=u/(o*o),f=n.data.get(r.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let y=0;y<i;++y)for(let e=0;e<h;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<d;++e){const a=Math.floor(e/o),r=(n*o+e%o)*p;for(let e=0;e<p;++e){const n=e+r+u*(a+l*(t+c*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,h,d,p],r.dtype,m)}};function GC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c,dimRoundingMode:l}=a;LS([r,o],"depthwiseConv2DNative");const u=se(r.shape),h=se(o.shape);let d=c;null==d&&(d=[1,1]),P(kc(s,d),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(s," and dilations '").concat(d,"'")));const p=fc(r.shape,o.shape,s,d,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,v=b.top,w=p.outChannels/p.inChannels,k=new Nr(p.outShape,r.dtype),S=n.data.get(r.dataId).values,I=n.data.get(o.dataId).values,C=k.values;for(let N=0;N<p.batchSize;++N){const e=N*u[0],t=N*k.strides[0];for(let n=0;n<p.outHeight;++n){const a=t+n*k.strides[1],r=n*p.strideHeight-v;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const o=t*h[0],s=e+n*u[1];for(let e=0;e<p.outWidth;++e){const t=a+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=o+e*h[1],i=s+a*p.inChannels;let c=t,l=r;for(let e=0;e<p.inChannels;++e){const t=S[i+e];for(let e=0;e<w;++e)C[c+e]+=t*I[l+e];c+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const HC={kernelName:pt,backendName:"cpu",kernelFunc:GC};const jC={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;LS([r,o],"depthwiseConv2dNativeBackpropFilter");const h=fc(r.shape,u,s,i,c,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Nr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new Nr(r.shape,r.dtype,v),k=n.data.get(o.dataId).values,S=new Nr(o.shape,o.dtype,k);for(let I=0;I<f;++I){const e=Math.max(0,Math.ceil((b-I)/d)),t=Math.min(h.outHeight,(h.inHeight+b-I)/d);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(h.outWidth,(h.inWidth+y-n)/p);for(let o=0;o<h.outChannels;++o){const s=Math.trunc(o/x),i=o%x;let c=0;for(let l=0;l<h.batchSize;++l)for(let i=e;i<t;++i){const e=I+i*d-b;for(let t=a;t<r;++t){const a=n+t*p-y;c+=w.get(l,e,a,s)*S.get(l,i,t,o)}}g.set(c,I,n,s,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const KC={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;LS([r,o],"depthwiseConv2DNativeBackpropInput");const h=se(r.shape),d=se(o.shape),p=fc(u,o.shape,s,i,c,l,!0),f=new Nr(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[v,w,k]=h,S=n.data.get(o.dataId).values,[I,C,N]=d,{batchSize:T,filterHeight:E,filterWidth:R,inChannels:A,inHeight:_,inWidth:F,outChannels:O,outHeight:D,outWidth:M,strideHeight:z,strideWidth:L}=p,P=E-1-p.padInfo.top,B=R-1-p.padInfo.left,W=O/A;for(let U=0;U<T;++U)for(let e=0;e<A;++e)for(let t=0;t<_;++t){const n=t-P,a=Math.max(0,Math.ceil(n/z)),r=Math.min(D,(E+n)/z);for(let o=0;o<F;++o){const s=o-B,i=Math.max(0,Math.ceil(s/L)),c=Math.min(M,(R+s)/L);let l=0;for(let t=a;t<r;++t){const a=t*z-n;for(let n=i;n<c;++n){const r=v*U+w*t+k*n,o=I*(E-1-a)+C*(R-1-(n*L-s))+N*e;for(let t=0;t<W;++t){l+=x[r+(e*W+t)]*S[o+t]}}}m[g*U+y*t+b*o+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const qC={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=U(a.shape),o=n.data.get(a.dataId).values,s=Ns([r,r],a.dtype),i=s.values;for(let l=0;l<o.length;l++)i[l*r+l]=o[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,s.dtype,s.values)}},XC={kernelName:yt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,h=r.shape.length,d=l.data.get(o.dataId).values,p=o.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:T}=hc(r.shape,o.shape,s,i,"NHWC",c),E=U(T),R=T.length,A=J(r.dtype,E);for(let _=0;_<f;++_)for(let e=0;e<b;++e){const t=e*w-v.top;for(let n=0;n<x;++n){const a=n*k-v.left;for(let s=0;s<y;++s){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<S;++e){const n=t+e*C;if(n>=0&&n<m)for(let t=0;t<I;++t){const c=a+t*N;if(c>=0&&c<g){const a=fe([_,n,c,s],h,se(r.shape)),l=fe([e,t,s],p,se(o.shape)),f=u[a]+d[l];f>i&&(i=f)}}}A[fe([_,e,n,s],R,se(T))]=i}}}return{dataId:l.write(lr(A,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},YC={kernelName:xt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=ce(r.shape,u.data.get(r.dataId).values),d=ce(o.shape,u.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:C,outShape:N}=hc(r.shape,o.shape,i,c,"NHWC",l);P(s.rank===N.length,(()=>"Error in ".concat(xt,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(s.rank)));const T=ce(N,u.data.get(s.dataId).values),E=de(o.shape,o.dtype);for(let R=0;R<p;++R)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let o=Number.MIN_SAFE_INTEGER,s=0,i=0;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*C;if(c>=0&&c<m){const a=h[R][n][c][r]+d[e][t][r];a>o&&(o=a,s=e,i=t)}}}E[s][i][r]+=T[R][e][n][r]}}}return{dataId:u.write(lr(E,r.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},QC={kernelName:bt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:l}=a,u=n,h=ce(r.shape,u.data.get(r.dataId).values),d=ce(o.shape,u.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:I,dilationWidth:C,outShape:N}=hc(r.shape,o.shape,i,c,"NHWC",l);P(s.rank===N.length,(()=>"Error in ".concat(bt,", dy ")+"must have the same rank as output ".concat(N.length,", but got ")+"".concat(s.rank)));const T=ce(N,u.data.get(s.dataId).values),E=de(r.shape,r.dtype);for(let R=0;R<p;++R)for(let e=0;e<y;++e){const t=e*v-x.top;for(let n=0;n<b;++n){const a=n*w-x.left;for(let r=0;r<g;++r){let o=Number.MIN_SAFE_INTEGER,s=t<0?0:t,i=a<0?0:a;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*C;if(c>=0&&c<m){const a=h[R][n][c][r]+d[e][t][r];a>o&&(o=a,s=n,i=c)}}}E[R][s][i][r]+=T[R][e][n][r]}}}return{dataId:u.write(lr(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const ZC={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:o,options:s}=a,{contextOptions:i,imageOptions:c}=s||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const h=o.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==h)throw new Error("Could not get the context with ".concat(u," type."));const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*d*4);for(let x=0;x<d*p;++x){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}o.width=p,o.height=d;const b=new ImageData(y,p,d);return h.putImageData(b,0,0),r}},JC=YS(((e,t)=>e*t)),$C=gI(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),eN=mI(yn,JC,$C),tN={kernelName:yn,backendName:"cpu",kernelFunc:eN};function nN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;let i;LS(r,"sum"),i="bool"===r.dtype?pI({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):jS({inputs:{x:r},backend:n});const c=i.shape.length,l=Y(o,i.shape),u=Cl(l,c);let h=l,d=i;null!=u&&(d=DI({inputs:{x:i},backend:n,attrs:{perm:u}}),h=Tl(h.length,c)),Il("sum",h,d.shape.length);const[p,f]=kl(d.shape,h);let m=lI(n,p,Br(d.dtype,"int32"));const g=U(f),y=n.data.get(m.dataId).values,b=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[x]=t}if(s){const e=m;m=wI({inputs:{x:m},backend:n,attrs:{shape:Sl(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(d),m}const aN={kernelName:ra,backendName:"cpu",kernelFunc:nN};const rN={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:s,summedDims:i,idDims:c}=rf(r,o.length);sf(s.length,c,o);const{path:l,steps:u}=cf(i,c),h=u.length;let d=null,p=s.length;const f=[];for(let m=0;m<h;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=of(p,c[e]);let r;lf(t)?r=o[e]:(r=DI({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),f.push(r));const s=r.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);G(r.shape,s)||(r=wI({inputs:{x:r},backend:n,attrs:{shape:s}}),f.push(r)),null===d?d=r:(d=eN({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=nN({inputs:{x:d},backend:n,attrs:{axis:l[m]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}};const oN={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;LS([a,r],"eluGrad");const o=new Float32Array(U(r.shape)),s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<s.length;++c){const e=s[c];o[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(r.shape,"float32",o)}},sN=YS(((e,t)=>e===t?1:0)),iN=mI(Nt,sN,null,"bool"),cN={kernelName:Nt,backendName:"cpu",kernelFunc:iN},lN=Wp,uN=Up,hN=Vp,dN=Gp,pN=Hp,fN=jp,mN=US(Ct,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+lN*n);return t*(1-((((fN*a+pN)*a+dN)*a+hN)*a+uN)*a*Math.exp(-n*n))})),gN={kernelName:Ct,backendName:"cpu",kernelFunc:mN},yN=WS((e=>Math.exp(e))),bN=VS(Tt,yN,"float32"),xN={kernelName:Tt,backendName:"cpu",kernelFunc:bN};function vN(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:o}=a,s=r.shape.length,i=r.shape.slice();let c=o;return o<0&&(P(-(s+1)<=o,(()=>"Axis must be in the interval [".concat(-(s+1),", ").concat(s,"]"))),c=s+o+1),i.splice(c,0,1),wI({inputs:{x:r},backend:n,attrs:{shape:i}})}const wN={kernelName:Et,backendName:"cpu",kernelFunc:vN},kN=WS((e=>Math.expm1(e))),SN=VS(Rt,kN),IN={kernelName:Rt,backendName:"cpu",kernelFunc:SN},CN=YS(((e,t)=>e/t)),NN=mI(wt,CN),TN={kernelName:wt,backendName:"cpu",kernelFunc:NN},EN=YS(((e,t)=>e-t)),RN=gI(((e,t,n,a)=>({real:e-n,imag:t-a}))),AN=mI(va,EN,RN),_N={kernelName:va,backendName:"cpu",kernelFunc:AN};function FN(e,t,n){const a=e.shape,r=a[0],o=a[1],s=n.data.get(e.dataId),i=s.complexTensorInfos.real,c=s.complexTensorInfos.imag,l=[r,o],u=U(l),h=Z("float32",u),d=Z("float32",u);for(let g=0;g<r;g++){const e=sC({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,o]}}),a=sC({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,o]}}),r=iI({inputs:{real:e,imag:a},backend:n}),{real:s,imag:l}=ON(r,t,n),u=Kp(s,l);for(let t=0;t<o;t++){const e=Qp(u,t);h[g*o+t]=e.real,d[g*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=iI({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function ON(e,t,n){const a=U(e.shape),r=n.data.get(e.dataId),o=n.data.get(r.complexTensorInfos.real.dataId).values,s=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=DN(o,s,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),o=n.makeTensorInfo([],"float32",cr(a,"float32")),s=jS({inputs:{x:o},backend:n}),c=TN.kernelFunc({inputs:{a:e,b:o},backend:n}),l=TN.kernelFunc({inputs:{a:t,b:s},backend:n}),u=n.data.get(c.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:h}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let o=0,s=0;for(let a=0;a<t;a++){const i=$p(r*a,t,n),c=Qp(e,a);o+=c.real*i.real-c.imag*i.imag,s+=c.real*i.imag+c.imag*i.real}n&&(o/=t,s/=t),Zp(a,o,s,r)}return a}(Kp(o,s),a,t);return qp(e)}var i}function DN(e,t,n,a,r){if(1===n)return{real:e,imag:t};const o=Kp(e,t),s=n/2,i=Xp(o),c=i.real,l=i.imag,u=[c.length],h=r.makeTensorInfo(u,"float32",c),d=r.makeTensorInfo(u,"float32",l),p=iI({inputs:{real:h,imag:d},backend:r}),f=Yp(o),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=iI({inputs:{real:b,imag:x},backend:r}),w=DN(c,l,s,a,r),k=w.real,S=w.imag,I=[k.length],C=r.makeTensorInfo(I,"float32",k),N=r.makeTensorInfo(I,"float32",S),T=iI({inputs:{real:C,imag:N},backend:r}),E=DN(m,g,s,a,r),R=E.real,A=E.imag,_=[R.length],F=r.makeTensorInfo(_,"float32",R),O=r.makeTensorInfo(_,"float32",A),D=iI({inputs:{real:F,imag:O},backend:r}),M=Jp(n,a),z=[M.real.length],L=r.makeTensorInfo(z,"float32",M.real),P=r.makeTensorInfo(z,"float32",M.imag),B=iI({inputs:{real:L,imag:P},backend:r}),W=eN({inputs:{a:B,b:D},backend:r}),U=xI({inputs:{a:T,b:W},backend:r}),V=AN({inputs:{a:T,b:W},backend:r}),G=uI({inputs:{input:U},backend:r}),H=uI({inputs:{input:V},backend:r}),j=SC({inputs:{input:U},backend:r}),K=SC({inputs:{input:V},backend:r}),q=CC({inputs:[G,H],backend:r,attrs:{axis:0}}),X=CC({inputs:[j,K],backend:r,attrs:{axis:0}}),Y=r.data.get(q.dataId).values,Q=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:Y,imag:Q}}const MN={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=U(a.shape),o=a.shape[a.shape.length-1],s=wI({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),i=FN(s,!1,n),c=wI({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),c}};function zN(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:o}=n,s=o||ae(r),i=J(s,U(a));return function(e,t){e.fill(t)}(i,r),t.makeTensorInfo(a,s,i)}const LN={kernelName:_t,backendName:"cpu",kernelFunc:zN};const PN={kernelName:Ft,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,o=a,s=Z(r.dtype,U(r.shape)),[i,c,l,u]=r.shape,h=o.data.get(r.dataId).values;for(let d=0;d<i;d++){const e=d*l*c*u;for(let t=0;t<c;t++){const n=t*(l*u);for(let t=0;t<l;t++){const a=t*u;for(let r=0;r<u;r++){const o=Math.round(l-t-1),i=e+n+a+r;let c=h[i];if(o>=0&&o<l){c=h[e+n+o*u+r]}s[i]=c}}}}return{dataId:o.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},BN=WS((e=>Math.floor(e))),WN=VS(Ot,BN),UN={kernelName:Ot,backendName:"cpu",kernelFunc:WN},VN=YS(((e,t)=>Math.floor(e/t))),GN=mI(Dt,VN,null,"int32"),HN={kernelName:Dt,backendName:"cpu",kernelFunc:GN};const jN={kernelName:Ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=TC({inputs:{x:r,filter:o},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(s){const e=m;if("NCHW"===u&&1===s.shape.length&&1!==s.shape[0]){const e=wI({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=xI({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=xI({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=wI({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=sI(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=sI(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const KN={kernelName:za,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a;let m=GC({inputs:{x:r,filter:o},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d}});if(s){const e=m;m=xI({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=sI(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function qN(e,t,n,a,r,o,s,i,c){const l=Ns([a,o],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let t=0;t<r;t++){const o=e[u*r+t];a+=o*s[t],n.push(o)}if(a<0||a>=c/o)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<o;e++)l.values[u*o+e]=t.get(...t.indexToLoc(a*o+e))}return l}const XN={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=U(a.shape),s=r.shape,i=s[s.length-1],[c,l,u,h]=Lp(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const d=qN(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,i,u,h,a.shape,o);return n.makeTensorInfo(c,a.dtype,d.values)}};function YN(e,t,n){const a=Ns(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),o=n[0],s=n[2],i=t.locToIndex([o,s]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const QN={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:s,batchDims:i}=a;LS([r,o],"gatherV2");const c=Y(s,r.shape)[0],l=n.data.get(o.dataId).values,u=r.shape[c];for(let x=0;x<l.length;++x){const e=l[x];P(e<=u-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(u-1,"]")))}let h=i;null==i&&(h=0);const d=U(o.shape),p=Nf(r,o,c,h),f=wI({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=wI({inputs:{x:o},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=YN(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},ZN=YS(((e,t)=>e>t?1:0)),JN=mI(Pt,ZN,null,"bool"),$N={kernelName:Pt,backendName:"cpu",kernelFunc:JN},eT=YS(((e,t)=>e>=t?1:0)),tT=mI(Bt,eT,null,"bool"),nT={kernelName:Bt,backendName:"cpu",kernelFunc:tT};const aT={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=U(a.shape),o=a.shape[a.shape.length-1],s=wI({inputs:{x:a},backend:n,attrs:{shape:[r/o,o]}}),i=FN(s,!0,n),c=wI({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),c}},rT=US(Gt,(e=>Number.isFinite(e)?1:0),"bool"),oT={kernelName:Gt,backendName:"cpu",kernelFunc:rT},sT=US(Ht,(e=>Math.abs(e)===1/0?1:0),"bool"),iT={kernelName:Ht,backendName:"cpu",kernelFunc:sT},cT=US(jt,(e=>Number.isNaN(e)?1:0),"bool"),lT={kernelName:jt,backendName:"cpu",kernelFunc:cT},uT=YS(((e,t)=>e<t?1:0)),hT=mI(qt,uT,null,"bool"),dT={kernelName:qt,backendName:"cpu",kernelFunc:hT},pT=YS(((e,t)=>e<=t?1:0)),fT=mI(Xt,pT,null,"bool"),mT={kernelName:Xt,backendName:"cpu",kernelFunc:fT};function gT(e,t,n){const a=(t-e)/(n-1),r=he(n,"float32");r[0]=e;for(let o=1;o<r.length;o++)r[o]=r[o-1]+a;return r}const yT={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=gT(a,r,o);return t.makeTensorInfo([s.length],"float32",s)}},bT=WS((e=>Math.log(e))),xT=VS(Qt,bT),vT={kernelName:Qt,backendName:"cpu",kernelFunc:xT},wT=US(Zt,(e=>Math.log1p(e))),kT={kernelName:Zt,backendName:"cpu",kernelFunc:wT},ST=YS(((e,t)=>e&&t)),IT=mI(Jt,ST,null,"bool"),CT={kernelName:Jt,backendName:"cpu",kernelFunc:IT},NT=US($t,(e=>e?0:1),"bool"),TT={kernelName:$t,backendName:"cpu",kernelFunc:NT},ET=YS(((e,t)=>e||t)),RT=mI(en,ET,null,"bool"),AT={kernelName:en,backendName:"cpu",kernelFunc:RT};const _T={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a;LS(r,"LRN");const l=r.shape[3],u=l-1,h=n.data.get(r.dataId).values,d=U(r.shape),p=new Float32Array(d);function f(e){const t=e%l;let n=e-t+Math.max(0,t-o);const a=e-t+Math.min(t+o,u);let r=0;for(;n<=a;n++){const e=h[n];r+=e*e}return r}for(let m=0;m<d;m++){const e=f(m),t=h[m]*Math.pow(s+i*e,-c);p[m]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const FT={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a;LS(s,"LRNGrad");const h=U(s.shape),d=s.shape[3],p=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(o.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%d,t=b-e+Math.max(0,e-i),n=b-e+Math.min(d,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=l*a+c;for(let r=t;r<n;r++){let e=-2*l*u*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-u)),e*=p[b],g[r]+=e}}return n.makeTensorInfo(s.shape,r.dtype,g)}};function OT(e,t,n,a){const r=Z(a,U(n));for(let o=0;o<r.length;++o){const n=o*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[o]=a}return r}function DT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:s}=a,i=n;let c=r.shape;const l=c.length,u=Y(o,c);let h=u;const d=Cl(h,l);let p=i.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[d[t]];p=OI(p,c,r.dtype,d,e),h=Tl(h.length,l),c=e}LS(r,"max"),Il("max",h,l);const[f,m]=kl(c,h),g=OT(p,U(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(s){b=Sl(f,u)}return{dataId:y,shape:b,dtype:r.dtype}}const MT={kernelName:an,backendName:"cpu",kernelFunc:DT},zT=YS(((e,t)=>Math.max(e,t))),LT=mI(rn,zT),PT={kernelName:rn,backendName:"cpu",kernelFunc:LT};const BT={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;LS(r,"maxPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;P(kc(s,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const l=dc(r.shape,o,s,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&G(l.inShape,l.outShape))u=jS({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=se(r.shape),a=ZI(e,r.shape,r.dtype,t,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const WT={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:l}=a;LS(r,"maxPool3d");const u=pc(r.shape,o,s,1,i,c,l),h=$I(n.data.get(r.dataId).values,r.shape,r.dtype,se(r.shape),u,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const UT={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,{filterSize:s,strides:i,pad:c,dimRoundingMode:l}=a;LS([r,o],"maxPool3DGrad");const u=pc(o.shape,s,i,1,c,l),h=function(e,t){const n=Ns(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-d;let x=b;for(;x<0;)x+=s;const v=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*r-p;let d=l;for(;d<0;)d+=i;const w=Math.min(t.inHeight,u+l);for(let r=0;r<t.outWidth;++r){const p=r*o-f;let k=p;for(;k<0;)k+=c;const S=Math.min(t.inWidth,h+p);let I=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<v;t+=s){const n=t-b;for(let a=d;a<w;a+=i){const r=a-l;for(let o=k;o<S;o+=c){const s=o-p,i=e.get(m,t,a,o,g);i>=I&&(I=i,C=n*u*h+r*u+s)}}}n.set(C,m,y,a,r,g)}}}return n}(n.bufferSync(o),u),d=u.strideDepth,p=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,x=u.effectiveFilterHeight,v=u.effectiveFilterWidth,w=b-1-u.padInfo.front,k=v-1-u.padInfo.left,S=x-1-u.padInfo.top,I=Ns(o.shape,"float32"),C=n.bufferSync(r);for(let N=0;N<u.batchSize;++N)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-w,o=n-S,s=a-k;let i=0;for(let t=0;t<b;t+=m){const n=(r+t)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){const r=(o+a)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let o=0;o<v;o+=y){const c=(s+o)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=b*x*v-1-h.get(N,n,r,c,e)===t*x*v+a*v+o?1:0;if(0===l)continue;i+=C.get(N,n,r,c,e)*l}}}I.set(i,N,t,n,a,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const VT={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:s}=t,i=o;LS([o,s],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=dc(i.shape,c,l,1,u,h),p=n.data.get(i.dataId).values,f=Ns(d.outShape,i.dtype,JI(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,S=Ns(i.shape,"float32"),I=n.data.get(r.dataId).values,C=Ns(r.shape,"float32",I);for(let N=0;N<d.batchSize;++N)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const a=t-k,r=n-w;let o=0;for(let t=0;t<x;t+=y){const n=(a+t)/m;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let a=0;a<v;a+=b){const s=(r+a)/g;if(s<0||s>=d.outWidth||Math.floor(s)!==s)continue;const i=x*v-1-f.get(N,n,s,e)===t*v+a?1:0;if(0===i)continue;o+=C.get(N,n,s,e)*i}}S.set(o,N,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const GT={kernelName:un,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:o,strides:s,pad:i,includeBatchInIndex:c}=n,l=a;LS(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,h=dc(r.shape,o,s,[1,1],i),[d,p]=function(e,t,n,a,r){const o=ZI(e,0,n,se(t),r,"max"),s=JI(e,t,n,r,!0,a);return[o.values,s.values]}(u,r.shape,r.dtype,c,h),f=l.write(d,h.outShape,r.dtype),m=l.write(p,h.outShape,r.dtype);return[{dataId:f,shape:h.outShape,dtype:r.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};const HT={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=Y(o,r.shape),c=U(kl(r.shape,i)[1]),l=[],u=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(u);const h=pI({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});l.push(h);const d=NN({inputs:{a:h,b:u},backend:n});l.push(d);const p=nN({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const jT={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;LS(r,"min");const i=Y(o,r.shape);let c=i;const l=Cl(c,r.shape.length);let u=r;null!=l&&(u=DI({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Tl(c.length,r.shape.length)),Il("min",c,u.shape.length);const[h,d]=kl(u.shape,c),p=U(d),f=he(U(h),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(h,u.dtype,f);if(s){const e=wI({inputs:{x:g},backend:n,attrs:{shape:Sl(h,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},KT=YS(((e,t)=>Math.min(e,t))),qT=mI(pn,KT),XT={kernelName:pn,backendName:"cpu",kernelFunc:qT};const YT={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,mode:s}=a;LS(r,"mirrorPad");const i=o.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=o.map((e=>e[0])),l=o.map(((e,t)=>e[0]+r.shape[t])),u="reflect"===s?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=se(r.shape),f=U(i),m=i.length,g=se(i),y=Z(r.dtype,f);for(let b=0;b<f;b++){let e=me(b,m,g);for(let n=0;n<m;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-u:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+u);e=e.map(((e,t)=>e-c[t]));const t=fe(e,d,p);y[b]=h[t]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},QT=YS(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),ZT=mI(mn,QT),JT={kernelName:mn,backendName:"cpu",kernelFunc:ZT};function $T(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,s=r.shape.length;let i=o;if(-1===i&&(i=s-1),i!==s-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(s," and dim was ").concat(i));const c=Y([i],r.shape),l=DT({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=Sl(l.shape,c),h=wI({inputs:{x:l},backend:n,attrs:{shape:u}}),d=AN({inputs:{a:r,b:h},backend:n}),p=bN({inputs:{x:d},backend:n}),f=nN({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),m=wI({inputs:{x:f},backend:n,attrs:{shape:u}}),g=NN({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const eE={kernelName:ia,backendName:"cpu",kernelFunc:$T};const tE={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a;LS(r,"multinomial");const c=i?r:$T({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],h=n.data.get(c.dataId).values,d=[l,o],p=he(U(d),"int32");for(let f=0;f<l;++f){const e=f*u,t=new Float32Array(u-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=Vu.alea(s.toString()),a=f*o;for(let r=0;r<o;++r){const e=n();p[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(d,"int32",p)}};function nE(e,t,n){const a=cr(-1,n);return JC([],t,a,e,n)}const aE={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;LS(a,"neg");const r=n.data.get(a.dataId).values,[o,s]=nE(r,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,o)}},rE=Ed;const oE={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=a;LS(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,{selectedIndices:h}=rE(l,u,s,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},sE=Rd;const iE={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;LS(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=sE(u,h,s,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},cE=Ad;const lE={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;LS(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=s,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=cE(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},uE=YS(((e,t)=>e!==t?1:0)),hE=mI(xn,uE,null,"bool"),dE={kernelName:xn,backendName:"cpu",kernelFunc:hE};const pE={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:s,onValue:i,offValue:c}=a;LS(r,"oneHot");const l=U(r.shape),u=new Float32Array(l*s);u.fill(c);const h=n.data.get(r.dataId).values;for(let d=0;d<l;++d)h[d]>=0&&h[d]<s&&(u[d*s+h[d]]=i);return n.makeTensorInfo([...r.shape,s],o,u)}};function fE(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=uI({inputs:{input:a},backend:n}),t=fE({inputs:{x:e},backend:n}),r=SC({inputs:{input:a},backend:n}),o=fE({inputs:{x:r},backend:n}),s=iI({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),s}return zN({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const mE={kernelName:Aa,backendName:"cpu",kernelFunc:fE};const gE={kernelName:Sn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=uI({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=SC({inputs:{input:r},backend:a}),s=fE({inputs:{x:o},backend:a}),i=iI({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}return zN({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function yE(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return vN({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{B(o,e.shape,"All tensors passed to stack must have matching shapes"),P(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=CC({inputs:t.map((e=>{const t=vN({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const bE={kernelName:Cn,backendName:"cpu",kernelFunc:yE};const xE={kernelName:Nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:s}=a;LS(r,"pad");const i=o.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=o.map((e=>e[0])),l=n.data.get(r.dataId).values,u=U(r.shape),h=r.shape.length,d=se(r.shape),p=U(i),f=i.length,m=se(i),g=Z(r.dtype,p);0!==s&&g.fill(s);for(let y=0;y<u;y++){g[fe(me(y,h,d).map(((e,t)=>e+c[t])),f,m)]=l[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},vE=YS(((e,t)=>Math.pow(e,t))),wE=mI(Tn,vE),kE={kernelName:Tn,backendName:"cpu",kernelFunc:wE};function SE(e,t,n,a){const[r,o]=kl(e,a),s=Br(t,"int32"),i=he(U(r),s),c=U(o);for(let l=0;l<i.length;++l){const e=l*c;let t=1;for(let a=0;a<c;++a)t*=n[e+a];i[l]=t}return{outVals:i,outShape:r,outDtype:s}}const IE={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;LS(r,"prod");const i=r.shape.length,c=Y(o,r.shape),l=Cl(c,i);let u=c,h=r;const d=[];null!=l&&(h=DI({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),u=Tl(u.length,i));const p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=SE(h.shape,h.dtype,p,u);let y=m;return s&&(y=Sl(m,c)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function CE(e,t,n,a){const r=[];let o=0;const s=t.length-1+n.length,i=new Array(s).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],s=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],o=e+t.length-1;if(o>=0){const e=i[o],t=e[e.length-1]-r[a];for(let n=a;n<s;++n)i[o].push(r[n+1]+t)}a=r[a],s=r[s]}s!==a&&(r.push([a,s]),o+=s-a)}return{outSplits:i,valueSlices:r,numValues:o}}function NE(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function TE(e,t,n,a,r){const o=t.slice();o[0]=r;const s=J(n,U(o)),i=e.length;return function(e,t,n,a,r,o){const s=NE(t,2)[1],i=NE(o,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*s+n];++c}}(e,t,a,0===i?0:i/t[0],s,o),[s,o]}function EE(e,t,n,a,r,o,s,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=me(a,t.length,se(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(o,s,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:h}=CE(o,s,e,c),d=function(e){const t=[];for(let n=0;n<e.length;++n){const a=J("int32",e[n].length);t.push(a),e[n].forEach(((e,t)=>a[t]=e))}return t}(l),p=TE(n,a,r,u,h);return[d,p[0],p[1]]}const RE={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:o,indices:s}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(o.dataId).values,h=n.data.get(s.dataId).values,[d,p,f]=EE(c,l,u,o.shape,o.dtype,h,s.shape),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,o.dtype,p);return m.concat([g])}},AE=2147483647;function _E(e,t,n,a,r,o,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===r.length,l=0===s.length,u=[];i||u.push(t[0]),c||u.push(r[0]),l||u.push(s[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===u.length?1:u[0],d=J("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=i?e[0]:e[m],n=c?a[0]:a[m],r=l?o[0]:o[m];if(0===r)throw new Error("Requires delta != 0");let s;if(r>0&&n<t||r<0&&n>t)s=0;else if(s=Math.ceil(Math.abs((n-t)/r)),s>AE)throw new Error("Requires ((limit - start) / delta) <= ".concat(AE));d[m+1]=d[m]+s}const p=J(n,d[h]);let f=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=i?e[0]:e[m];const a=l?o[0]:o[m];for(let e=0;e<t;++e)p[f++]=n,n+=a}return[d,p]}const FE={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:o}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,[l,u]=_E(s,a.shape,a.dtype,i,r.shape,c,o.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var OE=Ip;class DE{constructor(e,t,n,a,r,o,s,i,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=o,this.defaultValueShape=s,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Np(l),this.raggedRank=Tp(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===OE.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===OE.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case OE.VALUE_ROWIDS:return DE.getMaxWidthValueRowID(t);case OE.ROW_SPLITS:return DE.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(OE[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let o=1;o<t;++o){const t=e[o];t!==a&&(a=t,r=Math.max(o-n,r),n=o)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return zE(e,n)}calculateOutputSize(e){const t=this.valuesShape;Ep(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Cp(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let r=1;r<=this.raggedRank;++r)a[r]<0&&(a[r]=this.getMaxWidth(r));return a}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let o=0;for(let s=0;s<a;++s,o+=t)r.push(o);for(let s=a;s<e;++s)r.push(-1);return P(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,o=[];for(let s=0;s<r-1;++s){const r=e[s+1]-e[s];let i=Math.min(a,r),c=t[s];-1===c&&(i=0);for(let e=0;e<i;++e)o.push(c),c+=n;for(let e=0;e<r-i;++e)o.push(-1)}if(r>0&&o.length!==e[r-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,o=[];if(0===r)return[];let s=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];o.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++s,s<a?c+=n:c=-1);else{if(s=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}o.push(c)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case OE.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case OE.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(OE[o]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case OE.FIRST_DIM_SIZE:return e[0];case OE.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case OE.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(OE[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let o=n.length-2;o>=0;--o)n[o]=n[o+1]*t[o+1];const a=zE(t,!1),r=J(this.valuesDType,U(a));if(n[0]*t[0]>0){let o=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){o=this.calculateOutputIndex(e-1,o,n[e],t[e])}this.setOutput(this.raggedRank,o,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,o=n;let s=a.slice();s=s.slice(e+1);const i=U(s),c=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;bo((()=>{const t=Nc(l,e),n=Gc(t,s);l=n.dataSync()}))}let u=0,h=0,d=0;for(let p=0;p<=c;++p){let e=p<c?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(u*i);ME(o.subarray(h*i),e,(d-h)*i)}if(p>=c){const t=n.length;e=Math.floor(t/i)}if(e>d)if(1===this.defaultValue.length)o.subarray(d*i,e*i).fill(this.defaultValue[0]),d=e;else for(;e>d;){ME(o.slice(d*i),l,i),++d}e<0?(u=p+1,h=d):(u=p,h=d,d=h+1)}else++d}}}function ME(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function zE(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function LE(e,t,n,a,r,o,s,i,c,l){return new DE(e,t,n,a,r,o,s,i,c,l).compute()}const PE={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:o,defaultValue:s,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,h=n.data.get(s.dataId).values,d=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=LE(l,r.shape,u,o.shape,o.dtype,h,s.shape,d,p,c);return n.makeTensorInfo(f,o.dtype,m)}};function BE(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return he(0,a);const r=he(Math.abs(Math.ceil((t-e)/n)),a);t<e&&1===n&&(n=-1),r[0]=e;for(let o=1;o<r.length;o++)r[o]=r[o-1]+n;return r}const WE={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:o,step:s}=n,i=BE(a,r,s,o);return t.makeTensorInfo([i.length],o,i)}},UE=US(Mn,(e=>1/e)),VE={kernelName:Mn,backendName:"cpu",kernelFunc:UE};const GE={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a;LS(r,"resizeBilinear");const c=se(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(U([h,l,u,f])),y=[o&&l>1?d-1:d,o&&u>1?p-1:p],b=[o&&l>1?l-1:l,o&&u>1?u-1:u];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<l;e++){let t;t=s?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(d-1,Math.ceil(t)),o=k*c[0]+n*c[1],i=k*c[0]+r*c[1];for(let e=0;e<u;e++){let t;t=s?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(p-1,Math.ceil(t)),u=o+n*c[2],h=i+n*c[2],d=o+l*c[2],y=i+l*c[2];for(let e=0;e<f;e++){const t=m[u+e],n=m[h+e],o=t+(m[d+e]-t)*r,s=o+(n+(m[y+e]-n)*r-o)*a;g[x++]=s}}}return n.makeTensorInfo([h,l,u,f],"float32",g)}};const HE={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a;LS([o,r],"resizeBilinearGrad");const i=se(r.shape),[c,l,u,h]=r.shape,[,d,p]=o.shape,f=new Float32Array(c*l*u*h),m=[s&&d>1?l-1:l,s&&p>1?u-1:u],g=[s&&d>1?d-1:d,s&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(o.dataId).values;let v=0;for(let w=0;w<c;w++){const e=w*i[0];for(let t=0;t<d;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),o=e+a*i[1],s=e+r*i[1],c=n-a,d=1-c;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),u-1),r=t-n,l=1-r,p=o+n*i[2],m=o+a*i[2],g=s+n*i[2],y=s+a*i[2],w=d*l,k=d*r,S=c*l,I=c*r;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*I}}}}return n.makeTensorInfo([c,u,l,h],"float32",f)}};const jE={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a;LS(r,"resizeNearestNeighbor");const c=se(r.shape),[l,u]=i,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*u*f),y=[o&&l>1?d-1:d,o&&u>1?p-1:p],b=[o&&l>1?l-1:l,o&&u>1?u-1:u],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let k=0;k<h;k++){const e=k*c[0];for(let t=0;t<l;t++){const n=s?x*(t+.5):x*t;let a=Math.min(d-1,o?Math.round(n):Math.floor(n));s&&(a=Math.max(0,a));const r=e+a*c[1];for(let e=0;e<u;e++){const t=s?v*(e+.5):v*e;let n=Math.min(p-1,o?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));const a=r+n*c[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,u,f],r.dtype,g)}};const KE={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a;LS([o,r],"resizeNearestNeighborGrad");const i=se(r.shape),c=se(o.shape),[l,u,h,d]=r.shape,[,p,f]=o.shape,m=new Float32Array(l*u*h*d),g=n.data.get(o.dataId).values,y=[s&&p>1?u-1:u,s&&f>1?h-1:h],b=[s&&p>1?p-1:p,s&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,S=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let C=0;C<l;C++){const e=C*i[0];for(let t=0;t<u;t++){const n=e+t*i[1],a=Math.floor(t*w),r=Math.floor(a-S/2);for(let o=0;o<h;o++){const a=n+o*i[2],l=Math.floor(o*k),y=Math.floor(l-I/2);for(let n=0;n<d;n++){let i=0;for(let a=0;a<S;a++){const l=a+r;if(l<0||l>=p)continue;const d=e+l*c[1],m=l*x;if(t===Math.min(u-1,s?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const a=d+t*c[2],r=t*v;o===Math.min(h-1,s?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const qE={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a;LS(r,"reverse");const s=r.shape.length,i=Y(o,r.shape);if(0===s)return jS({inputs:{x:r},backend:n});const c=new Nr(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},XE={kernelName:Oa,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:s,center:i}=n,c=a,l=Z(r.dtype,U(r.shape)),[u,h,d,p]=r.shape,[f,m]=_p(i,h,d),g=Math.sin(o),y=Math.cos(o),b=c.data.get(r.dataId).values;for(let x=0;x<u;x++){const e=x*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let o=0;o<p;o++){const i=[u,t,a,o],c=i[2],x=i[1];let v=(c-f)*y-(x-m)*g,w=(c-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=s;if("number"!==typeof s&&(k=3===o?255:s[o]),v>=0&&v<d&&w>=0&&w<h){k=b[e+w*(d*p)+v*p+o]}l[e+n+r+o]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},YE=US(Hn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),QE={kernelName:Hn,backendName:"cpu",kernelFunc:YE},ZE=WS((e=>1/Math.sqrt(e))),JE=VS(jn,ZE),$E={kernelName:jn,backendName:"cpu",kernelFunc:JE};function eR(e,t,n,a,r,o,s,i,c,l){const u=[a/r,r],h=e.values,d=t.values;if(0===a)return Ns(n,t.dtype);const p=c instanceof Nr?c:Ns(u,t.dtype);"string"===typeof c||"number"===typeof c?p.values.fill(c):"boolean"===typeof c&&p.values.fill(+c);for(let f=0;f<o;f++){const e=[];let o=0;for(let t=0;t<s;t++){const n=h[f*s+t];e.push(n),o+=n*i[t]}if(o<0||o>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)l?p.values[o*r+n]+=d[f*r+n]:p.values[o*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}const tR={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:s}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ph(0,r,s),d=eR(n.bufferSync(r),n.bufferSync(o),s,h,l,c,i,u,0,!0);return n.makeTensorInfo(s,d.dtype,d.values)}};function nR(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function aR(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const rR={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=function(e,t,n,a,r,o){const s=J("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)s[c+e]="left"===o?nR(n,t[e+c]):aR(n,t[e+c])}return s}(n.data.get(r.dataId).values,n.data.get(o.dataId).values,r.shape[0],r.shape[1],o.shape[1],s);return n.makeTensorInfo(o.shape,"int32",i)}};const oR={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t;LS([a,r,o],"select");const s=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,u=Br(r.dtype,o.dtype),h=he(U(r.shape),u);let d=0;const p=0===s||s>1||1===r.shape.length?1:U(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<p;e++)1===i[f]?h[d++]=c[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,u,h)}},sR=Pp,iR=Bp,cR=US(Qn,(e=>e>=0?iR*e:sR*(Math.exp(e)-1))),lR={kernelName:Qn,backendName:"cpu",kernelFunc:cR},uR=US(ea,(e=>e<0?-1:e>0?1:0)),hR={kernelName:ea,backendName:"cpu",kernelFunc:uR},dR=US(Jn,(e=>Math.sin(e))),pR={kernelName:Jn,backendName:"cpu",kernelFunc:dR},fR=US($n,(e=>Math.sinh(e))),mR={kernelName:$n,backendName:"cpu",kernelFunc:fR},gR=Math.log(1.1920928955078125e-7)+2,yR=US(na,(e=>{const t=e>-gR,n=e<gR,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),bR={kernelName:na,backendName:"cpu",kernelFunc:yR};const xR={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:s}=a;LS([r],"spaceToBatchND");const i=U(o),c=[[0,0]];c.push(...s);for(let g=1+o.length;g<r.shape.length;++g)c.push([0,0]);const l=xE.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=Fp(l.shape,o,i,!1),h=Op(u.length,o.length,!1),d=Dp(l.shape,o,i,!1),p=wI({inputs:{x:l},backend:n,attrs:{shape:u}}),f=DI({inputs:{x:p},backend:n,attrs:{perm:h}}),m=wI({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function vR(e,t,n,a,r,o,s){const i=t[0],c=o[0],l=new Array(c),u=new Array(i),h=t[1];if(0===c){if(0!==i)throw new Error(df(i));return[J(n,0),[0,h],J(r,0),l,u]}let d=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const t=e[g*h];if(t<0)throw new Error(pf(g,t));if(t>=c)throw new Error(ff(g,t,c));++f[t],d=d&&t>=p,p=t}let m=!0;for(let g=0;g<c;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const t=e,n=a;for(let e=0;e<i;++e)u[e]=e;return[t,[i,h],n,l,u]}{const t=f[c-1],o=J(n,t*h),d=J(r,t),p=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*h],r=p[t],s=(0===t?0:f[t-1])+r;p[t]++;for(let a=0;a<h;++a)o[s*h+a]=e[n*h+a];d[s]=a[n],u[n]=s}for(let e=0;e<c;++e){if(0===p[e]){const t=0===e?0:f[e-1];o[t*h+0]=e;for(let e=1;e<h;++e)o[t*h+e]=0;d[t]=s}}return[o,[t,h],d,l,u]}}const wR={kernelName:ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:o,defaultValue:s}=t;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(o.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==s.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(s.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(o.dataId).values,u=n.data.get(s.dataId).values[0],[h,d,p,f,m]=vR(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function kR(e,t,n,a,r){const o=U(a),s=t[0],i=r.length,c=[];let l=1,u=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==u)throw new Error(mf(u,m));u=m,c.push(1)}else{if(e<0)throw new Error(gf(m,e));l*=e,c.push(e)}}if(-1!==u){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(o/l);if(l*e!==o)throw new Error(bf(a,c));c[u]=e}if(U(c)!==o)throw new Error(xf(a,c));const h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*c[e+1]}const f=J(n,s*i);for(let m=0;m<s;++m){let t=0;for(let n=0;n<h;++n)t+=e[m*h+n]*d[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[s,i],c]}const SR={kernelName:la,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:o}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const s=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(o.dataId).values),[l,u,h]=kR(i,a.shape,a.dtype,s,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}};function IR(e,t,n,a,r){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[t[0],e.length/t[0]],l=c[1],u=i>0?r[i-1]+1:0;if(u<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=u;const d=J(n,h.reduce(((e,t)=>e*t),1));if(0===i)return u>0&&d.fill(s),[d,h];if(u<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=r[p];for(;;){let t=0;if(f<i){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=u)throw new Error(kf(g,u));g>m&&d.fill(s,m*l,g*l);for(let n=p;n<f;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(Sf(n,a[n],c[0]));for(let n=0;n<l;n++)d[g*l+n]+=e[t*l+n]}if(o)for(let e=0;e<l;e++)d[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>i)break}return m<u&&d.fill(s,m*l,u*l),[d,h]}const CR={kernelName:ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(o.shape));if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,[l,u]=IR(s,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const NR={kernelName:ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(o.shape));if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(o.dataId).values,[l,u]=IR(s,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const TR={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:s}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Ph(0,r,i),p=!1,f=n.bufferSync(r);let m;switch(o.dtype){case"bool":m=eR(f,n.bufferSync(o),i,d,u,l,c,h,Boolean(n.data.get(s.dataId).values[0]),p);break;case"float32":m=eR(f,n.bufferSync(o),i,d,u,l,c,h,n.data.get(s.dataId).values[0],p);break;case"int32":m=eR(f,n.bufferSync(o),i,d,u,l,c,h,n.data.get(s.dataId).values[0],p);break;case"string":m=eR(f,n.bufferSync(o),i,d,u,l,c,h,dr(n.data.get(s.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(o.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const ER={kernelName:sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:s}=a,i=Y(s,r.shape)[0],c=hf(r,o,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((e=>{const t=[...u];t[i]=e;const a=sC({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},RR=WS((e=>Math.sqrt(e))),AR=US(aa,(e=>Math.sqrt(e))),_R={kernelName:aa,backendName:"cpu",kernelFunc:AR},FR={kernelName:fa,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;LS(a,"square");const o=r.data.get(a.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){const e=o[i];s[i]=e*e}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},OR=YS(((e,t)=>{const n=e-t;return n*n})),DR=mI(pa,OR),MR={kernelName:pa,backendName:"cpu",kernelFunc:DR},zR=WS(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),LR=VS(ma,zR),PR={kernelName:ma,backendName:"cpu",kernelFunc:LR},BR=US(_a,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),WR={kernelName:_a,backendName:"cpu",kernelFunc:BR};function UR(e,t,n,a){const r=Ns(e,t.dtype);for(let o=0;o<r.size;o++){const e=r.indexToLoc(o),s=new Array(e.length);for(let t=0;t<s.length;t++)s[t]=e[t]*n[t]+a[t];r.set(t.get(...s),...e)}return r}const VR={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:s,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a;LS(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Zi(r.shape,o,s,i,c,l,u,h,d);let w;if(m)w=wI({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){P(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Pi(b,x,v),t=sC({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=wI({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=UR(p,n.bufferSync(r),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class GR{constructor(e,t,n,a,r,o){this.separator=hr(e),this.nGramWidths=t,this.leftPad=hr(n),this.rightPad=hr(a),this.padWidth=r,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,o){for(let s=0;s<r;++s){const i=this.getPadWidth(o),c=Math.max(0,i-s),l=Math.max(0,i-(r-(s+1))),u=o-(c+l),h=t+(c>0?0:s-i);let d=0;d+=c*this.leftPad.length;for(let t=0;t<u;++t)d+=e[h+t].length;d+=l*this.rightPad.length;d+=(c+l+u-1)*this.separator.length,n[a+s]=new Uint8Array(d);const p=n[a+s];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[h+t]),m(this.separator);if(u>0){m(e[h+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,o=J("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)o[t]=0;return[e,o]}o[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),o[i]=o[i-1]+n}const s=new Array(o[r]);for(let i=0;i<r;++i){const n=t[i];let a=o[i];if(this.nGramWidths.forEach((r=>{const o=t[i+1]-t[i],c=this.getNumNGrams(o,r);this.createNGrams(e,n,s,a,c,r),a+=c})),this.preserveShort&&a===o[i]){const r=t[i+1]-t[i];if(0===r)continue;const o=r+2*this.padWidth,c=1;this.createNGrams(e,n,s,a,c,o)}}return[s,o]}}function HR(e,t,n,a,r,o,s,i){return new GR(n,a,r,o,s,i).compute(e,t)}const jR={kernelName:ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.data.get(u.dataId).values,p=n.data.get(h.dataId).values,[f,m]=HR(d,p,r,o,s,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function KR(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let o=e.indexOf(r);for(;-1!==o;){const t=e.subarray(0,o);n&&0===t.length||a.push(t),o=(e=e.subarray(o+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let o=0;o<e.length+1;o++)if(o===e.length||-1!==t.indexOf(e[o])){const t=e.subarray(r,o);n&&0===t.length||a.push(t),r=o+1}}function qR(e,t,n){const a=e.length,r=[];let o=0,s=0;const i=new Array(a);for(let d=0;d<a;++d){const a=r.length;KR(e[d],t,n,r);const c=r.length-a;i[d]=c,o+=c,s=Math.max(s,c)}const c=J("int32",2*o),l=new Array(o),u=[a,s];let h=0;for(let d=0;d<a;++d)for(let e=0;e<i[d];++e)c[2*h]=d,c[2*h+1]=e,l[h]=r[h],++h;return[c,l,u]}const XR={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:o,delimiter:s}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: ".concat(o.shape));if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(s.shape));const i=n.data.get(o.dataId).values,c=n.data.get(s.dataId).values[0],[l,u,h]=qR(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function YR(e,t){const n=J("int32",e.length);for(let a=0;a<e.length;++a)n[a]=ir(e[a]).modulo(t).getLowBitsUnsigned();return n}const QR={kernelName:xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const s=YR(n.data.get(o.dataId).values,r);return n.makeTensorInfo(o.shape,"int32",s)}},ZR=US(wa,(e=>Math.tan(e))),JR={kernelName:wa,backendName:"cpu",kernelFunc:ZR},$R=US(ka,(e=>Math.tanh(e)));const eA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:o}=t,{sliceRank:s,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=Ph(0,r,a.shape),h=n.bufferSync(r),d=n.bufferSync(o),p=n.bufferSync(a),f=eR(h,d,a.shape,u,c,i,s,l,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function tA(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Ns(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const o=e.locToIndex(n);a.values[r]=e.values[o]}return a}const nA={kernelName:Sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;LS(r,"tile");const s=tA(n.bufferSync(r),o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}},aA=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function rA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,o=t-n+1,s=Math.log(r),i=.5*Math.exp(2*s/3),c=.5*Math.sqrt(s*i*(r-i)/r)*Math.sign(o-r/2);rA(e,t,Math.max(n,Math.floor(t-o*i/r+c)),Math.min(a,Math.floor(t+(r-o)*i/r+c)))}const r=e[t];let o=n,s=a;for(z(e,n,t),aA(e[a],r)>0&&z(e,n,a);o<s;){for(z(e,o,s),o++,s--;aA(e[o],r)<0;)o+=1;for(;aA(e[s],r)>0;)s-=1}0===aA(e[n],r)?z(e,n,s):(s+=1,z(e,s,a)),s<=t&&(n=s+1),t<=s&&(a=s-1)}}function oA(e,t,n,a,r){const o=t[t.length-1],[s,i]=[e.length/o,o],c=Z(n,s*a),l=Z("int32",s*a);for(let h=0;h<s;h++){const t=h*i,n=e.subarray(t,t+i);let o=new Array(n.length);n.forEach(((e,t)=>o[t]={value:e,index:t})),a<o.length&&(rA(o,a),o=o.slice(0,a)),r&&o.sort(aA);const s=h*a,u=c.subarray(s,s+a),d=l.subarray(s,s+a);for(let e=0;e<a;e++)u[e]=o[e].value,d[e]=o[e].index}const u=t.slice();return u[u.length-1]=a,[Ns(u,n,c),Ns(u,"int32",l)]}const sA={kernelName:Ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:s}=a;LS(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=oA(i,r.shape,r.dtype,o,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const iA={kernelName:Ca,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:l}=n,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=[u,f,m,p],y=se(r.shape),b=y[0],x=y[1],v=y[2],w=se(g),k=w[0],S=w[1],I=w[2],C=Z(r.dtype,U(g));C.fill(c);const N=a.data.get(r.dataId).values,T=a.data.get(o.dataId).values;for(let E=0;E<u;++E){const e=1===o.shape[0]?T:T.subarray(8*E,8*E+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const l=(e[0]*n+e[1]*t+e[2])/o,u=(e[3]*n+e[4]*t+e[5])/o,p=cA(l,d,i),f=cA(u,h,i);switch(s){case"nearest":r=uA(N,h,d,b,x,v,E,f,p,a,c);break;case"bilinear":r=hA(N,h,d,b,x,v,E,f,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(s))}C[E*k+t*S+n*I+a]=r}return a.makeTensorInfo(g,r.dtype,C)}return{dataId:a.write(C,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function cA(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return D(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return D(0,n,t-1)}(e,t);case"nearest":return function(e,t){return D(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function lA(e,t,n,a,r,o,s,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[s*a+i*r+c*o+l]:u}function uA(e,t,n,a,r,o,s,i,c,l,u){return lA(e,t,n,a,r,o,s,Math.round(i),Math.round(c),l,u)}function hA(e,t,n,a,r,o,s,i,c,l,u){const h=Math.floor(i),d=Math.floor(c),p=h+1,f=d+1;return(p-i)*((f-c)*lA(e,t,n,a,r,o,s,h,d,l,u)+(c-d)*lA(e,t,n,a,r,o,s,h,f,l,u))+(i-h)*((f-c)*lA(e,t,n,a,r,o,s,p,d,l,u)+(c-d)*lA(e,t,n,a,r,o,s,p,f,l,u))}function dA(e,t,n,a){const r=Y(t,n)[0],o=[1,n[0],1];for(let f=0;f<r;f++)o[0]*=n[f];o[1]=n[r];for(let f=r+1;f<n.length;f++)o[2]*=n[f];const s=new Map,i=new Int32Array(n[r]),c=new Nr(o,a,e),l=[],u=1===o[0]&&1===o[2];for(let f=0;f<n[r];f++){let t;if(u)t=e[f].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(c.get(t,f,n));t=e.join(",")}const n=s.get(t);if(null!=n)i[f]=n;else{const e=s.size;s.set(t,e),i[f]=e,l.push(f)}}const h=o.slice();h[1]=s.size;const d=new Nr(h,a);l.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let a=0;a<o[2];a++)d.set(c.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:i}}const pA={kernelName:Ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:o}=t;LS(o,"unique");const s=a.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:l}=dA(s,r,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const fA={kernelName:Ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r.shape.length,i=r.shape[o],c=new Array(s-1);let l=0;for(let p=0;p<s;p++)p!==o&&(c[l++]=r.shape[p]);const u=new Array(s).fill(0),h=r.shape.slice();h[o]=1;const d=new Array(i);for(let p=0;p<d.length;p++){u[o]=p;const e=sC({inputs:{x:r},backend:n,attrs:{begin:u,size:h}});d[p]=wI({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return d}};const mA={kernelName:Ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:s}=a;LS(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-o.shape.length;let u=o;for(let d=0;d<l;++d){const e=vN({inputs:{input:u},backend:n,attrs:{dim:d+1}});u=e,c.push(e)}for(let d=0;d<s;++d){const e=cr(d,"int32"),t=n.makeTensorInfo([],"int32",e),a=iN({inputs:{a:t,b:u},backend:n}),o=pI({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=eN({inputs:{a:o,b:r},backend:n}),l=nN({inputs:{x:s},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(a),c.push(o),c.push(s),c.push(l)}const h=yE({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},gA=[CI,TI,RI,_I,vI,FI,zI,LI,PI,BI,UI,GI,jI,XI,QI,eC,tC,nC,aC,II,rC,cC,hC,fC,mC,fI,bC,vC,cI,wC,NC,EC,RC,AC,_C,FC,OC,MC,LC,PC,BC,WC,UC,VC,HC,jC,KC,qC,XC,YC,QC,ZC,rN,HS,oN,cN,gN,xN,wN,IN,MN,LN,PN,UN,HN,jN,KN,XN,QN,$N,nT,KS,aT,IC,oT,iT,lT,XS,dT,mT,yT,vT,kT,CT,TT,AT,_T,FT,MT,PT,BT,WT,UT,VT,GT,HT,jT,XT,YT,JT,tE,tN,aE,oE,iE,lE,dE,pE,gE,bE,xE,kE,JS,IE,RE,FE,PE,WE,hI,TN,VE,eI,nI,kI,GE,HE,jE,KE,qE,XE,QE,$E,tR,rR,oR,lR,oI,hR,pR,mR,iC,eE,bR,xR,wR,SR,CR,NR,TR,ER,_R,FR,MR,PR,WR,VR,jR,XR,QR,_N,aN,JR,{kernelName:ka,backendName:"cpu",kernelFunc:$R},eA,nA,sA,iA,MI,pA,fA,mA,mE];for(const n of gA)Ha(n);const yA={},bA={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function xA(e,t){if(!(e in yA)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(ve().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete yA[e]}),!1),ve().getBool("SOFTWARE_WEBGL_ENABLED")&&(bA.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",bA)||n.getContext("experimental-webgl",bA);return n.getContext("webgl2",bA)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;yA[e]=n}const n=yA[e];return null==n||n.isContextLost()?(delete yA[e],xA(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),yA[e])}var vA,wA,kA;function SA(e,t){return[t,e]}function IA(e){const t=U(e);return j(Math.ceil(t/4))}function CA(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function NA(e,t){const n=e;let a,r,o,s,i,c,l,u,h,d;return 2===ve().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,o=n.RGBA16F,s=n.RGBA32F,i=n.RED,l=4,u=1,h=n.HALF_FLOAT,d=n.FLOAT,c=n.RGBA8):(a=e.RGBA,r=e.RGBA,o=e.RGBA,s=n.RGBA,i=e.RGBA,l=4,u=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}function TA(e,t){const n=t();return ve().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(vA||(vA={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(wA||(wA={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(kA||(kA={}));function EA(e){return!!(ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function RA(e,t){return PA(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const AA=/ERROR: [0-9]+:([0-9]+):/g;function _A(e,t){const n=AA.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),o=r.length.toString().length+2,s=r.map(((e,t)=>K((t+1).toString(),o)+e));let i=0;for(let h=0;h<s.length;h++)i=Math.max(s[h].length,i);const c=s.slice(0,a-1),l=s.slice(a-1,a),u=s.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(K(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function FA(e,t){if(TA(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function OA(e,t,n,a,r,o,s){const i=e.getAttribLocation(t,n);return-1!==i&&(TA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),TA(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,o,s))),TA(e,(()=>e.enableVertexAttribArray(i))),!0)}function DA(e,t,n,a){TA(e,(()=>function(e,t,n){BA(e,n),TA(e,(()=>e.activeTexture(e.TEXTURE0+n))),TA(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),TA(e,(()=>e.uniform1i(n,a)))}function MA(e,t,n){TA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),TA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function zA(e,t){TA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),TA(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function LA(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function PA(e,t,n){const a=TA(e,(()=>t()));if(null==a)throw new Error(n);return a}function BA(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function WA(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return U(e.slice(0,e.length-t))}function UA(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function VA(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[WA(e),...UA(e)]),t}function GA(e){return e%2===0}function HA(e,t){if(G(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(GA(n)&&GA(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&GA(e[0])&&GA(t[0])}let jA,KA;function qA(e,t){return null!=e.getExtension(t)}function XA(e){try{if(null!=xA(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function YA(e){if(0===e)return!1;const t=xA(e);if(1!==e){if(qA(t,"EXT_color_buffer_float"))return QA(t);const e="EXT_color_buffer_half_float";if(qA(t,e)){const n=t.getExtension(e);return function(e,t){const n=NA(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,o=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(s),i}(t,n)}return!1}if(!qA(t,"OES_texture_float"))return!1;if(!qA(t,"WEBGL_color_buffer_float"))return!1;return QA(t)}function QA(e){const t=NA(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function ZA(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&P("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const JA=ve();function $A(){let e,t,n,a,r,o,s,i,c,l;return 2===ve().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",o="outputColor",s="out vec4 outputColor;",i=ve().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",o="gl_FragColor",s="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:o,defineOutput:s,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function e_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=se(t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / ").concat(t),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(o,"; ").concat(s,";")})).join("")}function t_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=se(t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(o,"; ").concat(s,";")})).join("")}function n_(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let o=n-3;o>=0;--o)r[o]="(".concat(r[o+1]," * ").concat(a[o+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const o="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),s=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(o,"; ").concat(s,";")})).join("")}function a_(e){const t=se(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}JA.registerFlag("HAS_WEBGL",(()=>JA.getNumber("WEBGL_VERSION")>0)),JA.registerFlag("WEBGL_VERSION",(()=>XA(2)?2:XA(1)?1:0)),JA.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),JA.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===JA.get("WEBGL_VERSION"))),JA.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),JA.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),JA.registerFlag("WEBGL_PACK",(()=>JA.getBool("HAS_WEBGL"))),JA.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_CLIP",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_REDUCE",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_LAZILY_UNPACK",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_CONV_IM2COL",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>JA.getBool("WEBGL_PACK"))),JA.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==jA){const t=xA(e);jA=t.getParameter(t.MAX_TEXTURE_SIZE)}return jA}(JA.getNumber("WEBGL_VERSION")))),JA.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==KA){const t=xA(e);KA=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,KA)}(JA.getNumber("WEBGL_VERSION")))),JA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=JA.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=xA(e);return t=qA(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:qA(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),JA.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>JA.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!eo())),JA.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=xA(e);if(1===e){if(!qA(t,"OES_texture_float"))return!1}else if(!qA(t,"EXT_color_buffer_float"))return!1;return QA(t)}(JA.getNumber("WEBGL_VERSION")))),JA.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!JA.getBool("WEBGL_FORCE_F16_TEXTURES")&&JA.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),JA.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>YA(JA.getNumber("WEBGL_VERSION")))),JA.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=JA.getNumber("WEBGL_VERSION"))&&null!=xA(e).fenceSync;var e})),JA.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>JA.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),JA.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),JA.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>eo()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),JA.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),JA.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),JA.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),JA.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),JA.registerFlag("WEBGL_EXP_CONV",(()=>!1)),JA.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>JA.getBool("IS_TEST"))),JA.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),JA.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),JA.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),JA.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const r_="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:o_}=o;function s_(e,t,n){const a=[];if(e.forEach((e=>{const t=U(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=g_(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),o=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?c_(e,a):i_(e,a);const o=e.shapeInfo.logicalShape,s=t.logicalShape;o.length<=s.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,i=o_(e.shapeInfo.logicalShape,t.logicalShape),c=m_(s),l=s-o;let u;const h=["x","y","z","w","u","v"];u=0===o?"":s<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(h[e+l]," = 0;"))).join("\n");let d="";d=s<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+l]))).join(", ");let p="return outputValue;";const f=1===U(e.shapeInfo.logicalShape),m=U(t.logicalShape),g=1===m;if(1!==o||f||g){if(f&&!g)p=1===s?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=o-2,t=o-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(d,");\n      ").concat(p,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",o=t.texShape,s=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&G(s,o))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=m_(c),u=o_(e.shapeInfo.logicalShape,t.logicalShape),h=c-i;let d;const p=["x","y","z","w","u","v"];d=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(p[e+h]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(p[t+h]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(d,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),s=t.texShape,i=$A(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,h=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(l_,"\n    ").concat(u_,"\n    ").concat(h_,"\n  ");return t}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(G(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),o=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),o=r*Math.ceil(e[e.length-2]/2);let s=o,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)s*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(s,";\n      index -= b").concat(l," * ").concat(s,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(o,";\n      index -= b * ").concat(o,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,s,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(G(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=t_(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=e_(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=t_(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=e_(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=e_(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=e_(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,s,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(h+=d_);return[h,c,u,r,l,o,n.userCode].join("\n")}function i_(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,o]=e.shapeInfo.texShape;if(1===r&&1===o)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const s=p_(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(s,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(f_(e),"\n      }\n    ");const r=e.shapeInfo.texShape,o=r[0],s=r[1];if(1===s&&1===o)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=p_(n);if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(o,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(s,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(o,", ").concat(s,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape;if(null!=o&&G(n,o)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=o[0],n=o[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:s,keptDims:i}=Q(n),c=s;if(c.length<n.length){const n=y_(e,c),a=["row","col"];return"\n      ".concat(i_(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(b_(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(f_(e),"\n      }\n    ");const l=o[0],u=o[1],h=p_(a);if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(h,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(h,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(h,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[1]*n[2],s=n[2],{newShape:i,keptDims:c}=Q(n),l=i;if(l.length<n.length){const n=y_(e,l),a=["row","col","depth"];return"\n        ".concat(i_(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(b_(a,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(s,", 1)));\n        ").concat(f_(e),"\n      }\n    ");const u=e.shapeInfo.texShape,h=u[0],d=u[1],p=e.shapeInfo.flatOffset;if(d===o&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(s,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(d,".0, ").concat(h,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(d===s&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(d,".0, ").concat(h,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=p_(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(s," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(h,", ").concat(d,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=n[3],s=n[2]*o,i=n[1]*s,{newShape:c,keptDims:l}=Q(n);if(c.length<n.length){const n=y_(e,c),a=["row","col","depth","depth2"];return"\n      ".concat(i_(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(b_(a,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(s,", ").concat(o,", 1)));\n        ").concat(f_(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(s,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===o&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=p_(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(s," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],o=t[3]*r,s=t[2]*o,i=t[1]*s,{newShape:c,keptDims:l}=Q(t);if(c.length<t.length){const t=y_(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(i_(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(b_(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(s,", ").concat(o,", ").concat(r,")) +\n          depth3;\n        ").concat(f_(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(s,", ").concat(o,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(d,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=p_(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(s," + depth * ").concat(o," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:o}=Q(t);if(r.length<t.length){const t=y_(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(i_(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(b_(n,o),");\n      }\n    ")}const s=t[5],i=t[4]*s,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(s,", 1)));\n        ").concat(f_(e),"\n      }\n    ");const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===u&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(s,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===s&&null==h)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=p_(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(s," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function c_(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=$A();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,o=$A();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(s[0],", ").concat(s[1],", index);\n      return ").concat(o.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,s=o[0],i=o[1],c=$A();if(null!=o&&G(n,o))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(s,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===n[0]){const a=[1,2],o=y_(e,n.slice(1)),s=["b","row","col"];return"\n        ".concat(c_(o,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(b_(s,a),");\n        }\n      ")}const i=$A();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=s[0],l=s[1],u=Math.ceil(n[2]/2),h=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(h,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=$A();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=e.shapeInfo.logicalShape,s=o.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],h=Math.ceil(o[s-1]/2);let d=h*Math.ceil(o[s-2]/2),p="int b, int row, int col",f="b * ".concat(d," + (row / 2) * ").concat(h," + (col / 2)");for(let m=2;m<s-1;m++)p="int b".concat(m,", ")+p,d*=o[s-m-1],f="b".concat(m," * ").concat(d," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const l_="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",u_="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",h_="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",d_="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function p_(e){return"offset".concat(e)}function f_(e){const t=e.name,n=U(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function m_(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function g_(e,t,n){const{newShape:a,keptDims:r}=Q(t),o=t.length,s=e&&3===o&&1===t[0],i=s?t.slice(1):a,c=!e&&o>1&&!G(t,n)&&a.length<o||s;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:r}}function y_(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function b_(e,t){return t.map((t=>e[t])).join(", ")}function x_(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),o=r.map((e=>e.shapeInfo)),s={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=s_(r,s,t),c=function(e,t){const n=PA(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(TA(e,(()=>e.shaderSource(n,t))),TA(e,(()=>e.compileShader(n))),ve().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw _A(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(c);return ve().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:s},v_(e,t,l)))}function v_(e,t,n){const a=[],r=[];let o,s,i,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===ve().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,u),offset:e.getUniformLocation(n,"offset".concat(h),u)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(h,"Shape"),u),r.texShape=e.getUniformLocation(n,"".concat(h,"TexShape"),u)),a.push(r)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",u),i=e.getUniformLocation(n,"outShapeStrides",u),s=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,u));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:s}}function w_(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],o=r.shape;if(!G(a,o))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(o," must match"));if(e.isUniform&&r.isUniform)return;const s=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!G(s,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(s," and ").concat(i," must match"))}))}function k_(e){return ve().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class S_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=vA.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$A();this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?t_(["r","c","d"],e):e_(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class I_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=vA.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=$A();this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?t_(["r","c","d"],e):e_(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class C_{constructor(e){this.variableNames=["A"],this.outTexUsage=wA.DOWNLOAD;const t=$A();this.outputShape=e,this.userCode="\n      ".concat(r_,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class N_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=wA.DOWNLOAD;const t=$A();this.outputShape=e,this.userCode="\n      ".concat(r_,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const T_={R:0,G:1,B:2,A:3};class E_{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=$A();this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let o="";for(let s=0;s<n.length;s++){const e=n[s];o+="\n          if(offset == ".concat(s,") {\n            result = values[").concat(T_[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":a_(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(o,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class R_{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=$A();this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let t=0;t<=1;t++){const r=2*o+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(o," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(o,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":a_(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function A_(e){const t=$A();return function(e,t){const n=PA(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(TA(e,(()=>e.shaderSource(n,t))),TA(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function __(e){return function(e,t){const n=PA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return TA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),TA(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function F_(e){return function(e,t){const n=PA(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return TA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),TA(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function O_(e,t,n,a,r,o){!function(e,t){const n=ve().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const s=function(e){return PA(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return TA(e,(()=>e.bindTexture(i,s))),TA(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),TA(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),TA(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),TA(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ve().getNumber("WEBGL_VERSION")?TA(e,(()=>e.texImage2D(i,0,a,t,n,0,r,o,null))):TA(e,(()=>e.texStorage2D(i,1,a,t,n))),TA(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:s,texShape:[n,t]}}function D_(e){return e.internalFormatFloat}function M_(e){return e.internalFormatHalfFloat}function z_(e){return e.downloadTextureFormat}function L_(e){return e.internalFormatPackedFloat}function P_(e){return e.internalFormatPackedHalfFloat}function B_(e,t,n,a,r,o,s,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=CA(e,t);return n*a*4}(o,s));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class W_{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ve().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){yA[e]=t}(t,e)):this.gl=xA(t),e=this.gl,2===ve().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>TA(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>TA(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>TA(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>TA(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>TA(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>TA(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>TA(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>TA(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ve().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=RA(this.gl,e),qA(this.gl,t))this.textureHalfFloatExtension=RA(this.gl,t);else if(ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),qA(this.gl,a))this.colorBufferHalfFloatExtension=RA(this.gl,a);else if(ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",qA(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!qA(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=__(this.gl),this.indexBuffer=F_(this.gl),this.framebuffer=function(e){return PA(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=NA(this.gl,this.textureHalfFloatExtension)}get debug(){return ve().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;TA(e,(()=>e.finish())),TA(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),TA(e,(()=>e.deleteFramebuffer(this.framebuffer))),TA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),TA(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),TA(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=SA(t,n);return O_(e,r,o,D_(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=SA(t,n);return O_(e,r,o,M_(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=SA(t,n);return O_(e,r,o,z_(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){TA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ve().getNumber("WEBGL_VERSION")?TA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):TA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ve().getNumber("WEBGL_VERSION")?TA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):TA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),TA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,o){let s,i,c;TA(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(s=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(s=new Float32Array(n*a*4),i=e.FLOAT,c=o.internalFormatPackedFloat),s.set(r),2===ve().getNumber("WEBGL_VERSION")?TA(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,s))):TA(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,i,s))),TA(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=CA(t,n);return O_(e,r,o,P_(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,o]=CA(t,n);return O_(e,r,o,L_(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(zA(this.gl,this.framebuffer),this.outputTexture=null),TA(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,o]=SA(t,n),s=new Uint8Array(t*n*4);return TA(e,(()=>e.readPixels(0,0,r,o,a.downloadTextureFormat,e.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,o){return B_(this.gl,e,0,0,0,r,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n){const a=e.createBuffer();TA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const r=16*t*n;return TA(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,r,e.STREAM_READ))),TA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),TA(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ve().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return TA(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=A_(t));const n=function(e){return PA(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);TA(t,(()=>t.attachShader(n,this.vertexShader))),TA(t,(()=>t.attachShader(n,e))),function(e,t){if(TA(e,(()=>e.linkProgram(t))),!ve().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&FA(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;TA(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){TA(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),OA(e,t,"clipSpacePos",n,3,20,0)&&OA(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(TA(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&FA(this.gl,this.program),TA(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return PA(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),TA(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),DA(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=CA(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&FA(this.gl,this.program),LA(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}TA(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),TA(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=RA(this.gl,2===ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await q((()=>this.disposed||this.isQueryAvailable(e,ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ve().platform&&(n=ve().platform.setTimeoutCustom.bind(ve().platform)),q((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),MA(this.gl,e,this.framebuffer),this.debug&&LA(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(MA(this.gl,this.outputTexture,this.framebuffer),this.debug&&LA(this.gl)):zA(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;MA(a,e,this.framebuffer),this.debug&&LA(a),this.outputTexture=e,TA(a,(()=>a.viewport(0,0,t,n))),TA(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),TA(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:U_,XI:V_,Nk:G_,f6:H_,ct:j_,YG:K_,hH:q_,z3:X_,sG:Y_,uM:Q_,vS:Z_,qB:J_,GG:$_,rq:eF,lg:tF,WR:nF,cu:aF,GE:rF,px:oF,jC:sF,He:iF,hE:cF,BF:lF,Dk:uF,cl:hF,_B:dF,ub:pF,_f:fF,Ku:mF,qy:gF,Zy:yF,bu:bF,zv:xF,dH:vF,HS:wF,yH:kF,l3:SF,z9:IF,x6:CF,_m:NF,eW:TF,GK:EF,SP:RF,yr:AF,dl:_F,Dw:FF,xT:OF,_X:DF,wz:MF}=N;function zF(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function LF(e,t){return 1===t?[e]:zF(e,t)}class PF{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=k_(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=LF("rc",this.rank),t=m_(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class BF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?n_(["r","c","d"],"inputShape"):e_(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":a_(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class WF{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=VF(t,n),r=GF(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const o=UF(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let s;return a===kA.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===kA.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===kA.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===kA.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===kA.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=VF(n,a),o=GF(t,r,a);o in this.freeTextures||(this.freeTextures[o]=[]);const s=UF(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=ve().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;const c=this.usedTextures[o],l=c&&c.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function UF(e,t,n,a,r){const o=function(e,t){switch(e){case kA.PACKED_2X2_FLOAT32:return L_(t);case kA.PACKED_2X2_FLOAT16:return P_(t);case kA.UNPACKED_FLOAT32:return D_(t);case kA.UNPACKED_FLOAT16:return M_(t);case kA.PACKED_4X1_UNSIGNED_BYTE:return z_(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let s;if(r){const[t,n]=CA(e[0],e[1]);s=t*n}else{const[t,n]=SA(e[0],e[1]);s=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,o);return s*i}function VF(e,t){if(e===wA.UPLOAD)return kA.PACKED_2X2_FLOAT32;if(e===wA.RENDER||null==e)return function(e){return ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?kA.PACKED_2X2_FLOAT32:kA.UNPACKED_FLOAT32:e?kA.PACKED_2X2_FLOAT16:kA.UNPACKED_FLOAT16}(t);if(e===wA.DOWNLOAD||e===wA.PIXELS)return kA.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function GF(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class HF{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const jF="if (isnan(x)) return x;",KF="return x;",qF="return abs(x);";const XF="return (x >= 0.0) ? x : (exp(x) - 1.0);",YF=jF+"\n  return (x < 0.0) ? 0.0 : x;\n",QF=jF+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ZF="return x;",JF="return 1.0 / (1.0 + exp(-1.0 * x));",$F="return x;",eO="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",tO="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",nO="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",aO="return 1.0 / (1.0 + exp(-1.0 * x));";class rO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class oO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length);const t=e.length,n=LF("rc",t),a=m_(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),o=n.slice(-2),s=t<=1?"rc":"vec2(".concat(o.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(s,"));\n      }\n    ")}}const sO=qh,iO={};const cO=ve().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class lO extends _{nextDataId(){return lO.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ve().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof W_)t=e;else{const n=xA(ve().getNumber("WEBGL_VERSION"),e);t=new W_(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=xA(ve().getNumber("WEBGL_VERSION"));t=new W_(e),this.binaryCache=((n=ve().getNumber("WEBGL_VERSION"))in iO||(iO[n]={}),iO[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new WF(this.gpgpu),this.numMBBeforeWarning=null==ve().global.screen?1024:ve().global.screen.height*ve().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new A(this,go())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,o){const s=this.makeTensorInfo(t,n),i=this.texData.get(s.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=VA(t),l=new E_(c,!1,o),u=this.runWebGLProgram(l,[s],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(s),u.dataId}write(e,t,n){if((ve().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ve().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:wA.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(ve().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:wA.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:o,shape:s,isPacked:i}=t;if(null!=o){let t;t=i?new rO(s,ZF):new HF(s,ZF);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=ur()),"complex64"===a){u=Kp(this.readSync(r.real.dataId),this.readSync(r.imag.dataId))}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=ur()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:o,complexTensorInfos:s,isPacked:i}=t;if(null!=r){let t;t=i?new rO(a,ZF):new HF(a,ZF);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:o}],o),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(ve().getBool("DEBUG")&&!ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ve().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==o&&ve().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...IA(a))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]);l=Kp(e[0],e[1])}else if(null==u)l=this.getValuesFromTexture(e);else{const e=U(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const e=this.gpgpu.gl;TA(e,(()=>e.deleteBuffer(u)))}const h=this.convertAndCacheOnCPU(e,l),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&go().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:o,dtype:s,isPacked:i,texture:c}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=i?new rO(r,ZF):new HF(r,ZF);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:s}],s),o=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),o}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),u=go().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>dr(e)));return Ns(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ns(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!EA(n)){if(ve().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=U(t);if(ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...IA(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),o}const o=ve().getBool("WEBGL_PACK")&&!0===a,s=o?VA(t):t,i=o?new N_(s):new C_(s),c=this.runWebGLProgram(i,[{shape:s,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=fr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=fr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);s.kernelMs=L(e),s.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ur(),endMs:null}}endTimer(e){return ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ur(),e)}async getQueryTime(e){if(ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:o,slice:s}=this.texData.get(e),i=s&&s.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,o)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:cO;return ve().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&U(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){La("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return sO(e.shape,t)}packedUnaryOp(e,t,n){const a=new rO(e.shape,t),r=this.compileAndRun(a,[e],n);return go().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=vF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ve().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,qF,e.dtype);const t=new HF(e.shape,qF),n=this.compileAndRun(t,[e]);return go().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&te(n[0])){const r=n.map((e=>hr(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return go().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new oO(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new PF(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[WA(e.shape),...UA(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[WA(t),...UA(t)],o=new BF(r,n),s=[n],i=this.runWebGLProgram(o,[a],e.dtype,s,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:o}=n;if(null!=t){P(U(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const s=VA(r);let i;i=a?new I_(s):new S_(s);const c=[null!=t?t:IA(s)];return{dtype:o,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:o,dataId:e}],o,c,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===vA.DENSE){const t=null!=o?o:IA(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===U(s.shape))return i.values=Z(s.dtype,0),s;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&U(t.shape)<=ve().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!HA(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),c.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const u={shape:s.shape,texData:i,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:s,uniformShape:i,keptDims:c}=g_(e.packedInputs,t.shape,o);let l="",u="",h="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=se(i);h="".concat(e[0]===o[1],"_").concat(e[e.length-1]===o[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const d=t.shape.length,p=2===i.length&&G(t.shape,o),f=1===U(t.shape),m=Js(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&G(o,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(o[0]>1,"_").concat(o[1]>1);a+="".concat(d,"_").concat(g,"_").concat(s?c:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(p,"_").concat(l,"_").concat(u,"_").concat(h,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let o=e.constructor.name;return o+="_"+a+"_"+r+"".concat(ve().getNumber("WEBGL_VERSION")),o}(e,l,u),d=this.getAndSaveBinary(h,(()=>x_(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ve().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(w_(t.inShapeInfos,n),w_([t.outShapeInfo],[a]));const o=a.texData.texture,s=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,s[0],s[1]):e.setOutputMatrixTexture(o.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ve().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:o,shape:s,texShape:i}=t.variablesLocations[c];if(s){const{uniformShape:n}=g_(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(s,new Int32Array(n));break;case 2:e.gl.uniform2iv(s,new Int32Array(n));break;case 3:e.gl.uniform3iv(s,new Int32Array(n));break;case 4:e.gl.uniform4iv(s,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(U(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=o&&e.gl.uniform1i(o,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=se(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],a=t.customUniformLocations[c],o=r[c];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,o)}}e.executeProgram()}(this.gpgpu,d,l,u,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=ve().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=ur();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ve().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ve().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=bo((()=>{if(!ve().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ve().getBool("DEBUG");ve().set("DEBUG",!1);const t=this.abs(Ps(1e-8)).dataSync()[0];if(ve().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:o,usage:s,isPacked:i}=t;if(null!=o)return;const c=null!=this.activeTimers;let l;c&&(l=ur());let u=t.texShape;if(null==u&&(u=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=ve().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=ve().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&ve().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?M(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Q(e);e=t.newShape}let r=U(e),o=null;e.length<=1&&r<=n?o=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const s=null!=o&&Math.max(...o)>a&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||s)if(t){const t=WA(e);let n=2,a=2;e.length&&([n,a]=UA(e)),r=t*(n/2)*(a/2),o=j(r).map((e=>2*e))}else o=j(r);return o}(n,i),t.texShape=u),null!=r){const e=VA(n);let o,s=u[1],h=u[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&d||([s,h]=CA(u[0],u[1])),o=i?new R_(e,d):new E_(e,d);const p=d?[h,s]:u,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=d?wA.PIXELS:wA.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,h,r);const g=[[h,s]],y=!0,b=this.runWebGLProgram(o,[f],a,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,ve().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=ur()-l)}else{const e=this.acquireTexture(u,s,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*ee(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await wp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw _A(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:o,outShapeStridesLocation:s,outTexShapeLocation:i}=v_(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=o,e.outShapeStridesLocation=s,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:o,channels:s}=e,i=go().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,t,n,r,o,s);return go().makeTensorFromDataId(c,t,n,i)}}lO.nextDataId=0;to()&&ko("webgl",(()=>new lO),2);const uO="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class hO{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ei(t,n),this.enableShapeUniforms=k_(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const dO="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class pO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ei(t,n);const r=this.outputShape.length;this.enableShapeUniforms=k_(r);let o="";if(a)if(0===r||1===U(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=m_(r);if(o="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=LF("coords",r);this.enableShapeUniforms?o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):o+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(o,"\n\n        setOutput(result);\n      }\n    ")}}function fO(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const mO={kernelName:Wt,backendName:"webgl",kernelFunc:fO};function gO(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(o.dataId),i=fO({inputs:{x:a},backend:n}),c=fO({inputs:{x:r},backend:n});return s.complexTensorInfos={real:i,imag:c},o}const yO={kernelName:Ze,backendName:"webgl",kernelFunc:gO},bO="return (a < 0.) ? b * a : a;",xO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const vO={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a,s=n.makeTensorInfo([],"float32",cr(o,"float32")),i=ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pO(xO,r.shape,s.shape):new hO(bO,r.shape,s.shape),c=n.runWebGLProgram(i,[r,s],"float32");return n.disposeIntermediateTensorInfo(s),c}},wO="return (a < 0.) ? b * a : a;",kO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const SO={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,o=ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pO(kO,a.shape,r.shape):new hO(wO,a.shape,r.shape);return n.runWebGLProgram(o,[a,r],"float32")}},IO="if (isnan(x)) return x;";function CO(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:o,backend:s}=e;const{x:i}=o,c=s,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const e=c.texData.get(i.dataId),t=a(e.values,l);return c.makeTensorInfo(i.shape,l,t)}let u;return u=ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new rO(i.shape,n):new HF(i.shape,t),c.runWebGLProgram(u,[i],l)}}function NO(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:o,dtype:s}=e;return e=>{let{inputs:i,backend:c}=e;const{a:l,b:u}=i,h=c;if(r&&"complex64"===l.dtype){const e=h.texData.get(l.dataId),n=h.texData.get(u.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},o={dataId:a.dataId,dtype:a.dtype,shape:u.shape},s=new hO(t,l.shape,u.shape);return h.runWebGLProgram(s,[r,o],Br(n.dtype,a.dtype))})),o=gO({inputs:{real:a,imag:r},backend:h});return h.disposeIntermediateTensorInfo(a),h.disposeIntermediateTensorInfo(r),o}const d=s||Br(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||h.shouldExecuteOnCPU([l,u]))&&null!=o){const e=h.texData.get(l.dataId).values,t=h.texData.get(u.dataId).values,n="string"===l.dtype?Tf(e):e,a="string"===l.dtype?Tf(t):t,[r,s]=o(l.shape,u.shape,n,a,d),i=h.makeTensorInfo(s,d);return h.texData.get(i.dataId).values=r,i}let p;return p=ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new pO(n,l.shape,u.shape,a):new hO(t,l.shape,u.shape),h.runWebGLProgram(p,[l,u],d)}}function TO(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?$F:KF;if("relu"===e)return t?tO:YF;if("elu"===e)return t?eO:XF;if("relu6"===e)return t?nO:QF;if("prelu"===e)return t?kO:wO;if("leakyrelu"===e)return t?xO:bO;if("sigmoid"===e)return t?aO:JF;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class EO{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=k_(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";s&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(s,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(s,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(s,"\n        }"),g="result = activation(result);");const y=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(x="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(x,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(h,");\n          vec4 b = getMatrixB(batchB, ").concat(d,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const RO={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class AO{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ei(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const _O="return a * b;";function FO(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,o=Br(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),o=new AO(RO.REAL,a.shape,r.shape),s=new AO(RO.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(o,i,"float32"),l=n.runWebGLProgram(s,i,"float32"),u=gO({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[s,i]=lF(a.shape,r.shape,e.values,t.values,o),c=n.makeTensorInfo(i,o);return n.texData.get(c.dataId).values=s,c}let s;return s=ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pO(_O,a.shape,r.shape):new hO(_O,a.shape,r.shape),n.runWebGLProgram(s,[a,r],o)}const OO={kernelName:yn,backendName:"webgl",kernelFunc:FO};function DO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:o}=a,s=n,i=U(r.shape),c=X(o,i),l=U(c);P(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=s.texData.get(r.dataId);return!u.isPacked||HA(r.shape,c)||null!==u.texture&&HA(u.shape,c)?(s.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(e,t,n){const a=[WA(e.shape),...UA(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},o=[WA(t),...UA(t)],s=new BF(o,a),i=[a],c=n.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,c,s)}const MO={kernelName:Ln,backendName:"webgl",kernelFunc:DO};class zO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=e;this.outputShape=[a,o];const s=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(H(e)?e.toPrecision(2):e,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(s,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(s,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class LO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:o}=e;this.outputShape=[a,o];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let h="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),d="vec4";"all"===t?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(s,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(s,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(h,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(2===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(h,"\n        } else if (").concat(3===u,") {\n          ").concat(d," values = ").concat(d,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(h,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function PO(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Ap(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let o=e;for(let s=0;s<r.length;s++){const{inSize:i,windowSize:c,outSize:l}=r[s];let u,h;u="mean"===n?0===s?new zO({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new zO({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new LO({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),h=o,o=a.runWebGLProgram(u,[o],t),h.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(h)}return o}class BO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[t[o]];this.outputShape=n,this.rank=n.length;const a=m_(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class WO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=m_(this.rank),r=zF("rc",this.rank),o=new Array(this.rank);for(let l=0;l<t.length;l++)o[t[l]]=r[l];const s="vec2(".concat(o.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(o.join(),"), ").concat(s,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function UO(e,t,n){const a=ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WO(e.shape,t):new BO(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function VO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return function(e,t,n,a){const r=t,o=e.shape.length,s=Y(r,e.shape);let i=s;const c=Cl(i,o),l=null!=c;let u=e;l&&(u=UO(e,c,a),i=Tl(i.length,o)),Il("sum",i,o);const[h,d]=kl(u.shape,i);let p=h;n&&(p=Sl(h,s));const f=U(d),m=DO({inputs:{x:u},attrs:{shape:[U(e.shape)/f,f]},backend:a}),g=PO(m,Wr(e.dtype),"sum",a),y=DO({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(u),y}(r,o,s,n)}const GO={kernelName:ra,backendName:"webgl",kernelFunc:VO};function HO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:o}=a,s=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[o[u]];let l;if(s.shouldExecuteOnCPU([r])){const e=s.texData.get(r.dataId).values,t=DF(e,r.shape,r.dtype,o,c);l=s.makeTensorInfo(c,r.dtype);s.texData.get(l.dataId).values=t}else l=UO(r,o,s);return l}const jO={kernelName:Na,backendName:"webgl",kernelFunc:HO},KO=1e3;function qO(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,h=n.shape.length,d=a?t.shape[u-2]:t.shape[u-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?t.shape[u-1]:t.shape[u-2],m=r?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=U(g),x=U(y),v=ei(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);P(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],S=DO({inputs:{x:t},backend:o,attrs:{shape:w}}),I=DO({inputs:{x:n},backend:o,attrs:{shape:k}}),C=[S,I],N=Math.max(b,x),T=a?S.shape[1]:S.shape[2],E=null!=s,R=null!=i,A="leakyrelu"===l,_=null!=l?TO(l,!0):null;let F;if((1===f||1===m)&&T>KO&&!1===(E||R||A||null!=_)){let e=S,t=I;a&&(e=HO({inputs:{x:S},backend:o,attrs:{perm:[0,2,1]}}),C.push(e)),r&&(t=HO({inputs:{x:I},backend:o,attrs:{perm:[0,2,1]}}),C.push(t));const n=1===m;let s=e;1!==m&&(s=DO({inputs:{x:e},backend:o,attrs:{shape:[N,T,1]}}),C.push(s));const i=1===m?2:1;let c=t;n&&(c=DO({inputs:{x:t},backend:o,attrs:{shape:[N,1,T]}}),C.push(c));const l=FO({inputs:{a:s,b:c},backend:o});F=VO({inputs:{x:l},backend:o,attrs:{axis:i,keepDims:!0}}),C.push(l)}else{const e=Br(t.dtype,n.dtype),l=new EO(w,k,[N,f,m],a,r,E,_,R,A),u=[S,I];if(null!=s&&u.push(s),R&&u.push(i),A){const e=o.makeTensorInfo([],"float32",cr(c,"float32"));u.push(e),C.push(e)}F=o.runWebGLProgram(l,u,e)}const O=DO({inputs:{x:F},backend:o,attrs:{shape:v}});C.push(F);for(const D of C)o.disposeIntermediateTensorInfo(D);return O}const XO={kernelName:Da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return qO({a:r,b:o,transposeA:c,transposeB:l,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}},YO="return abs(x);";const QO={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=vF(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new rO(a.shape,YO):new HF(a.shape,YO),n.runWebGLProgram(r,[a],a.dtype)}},ZO=CO({opSnippet:jF+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),JO={kernelName:Ne,backendName:"webgl",kernelFunc:ZO},$O=CO({opSnippet:jF+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),eD={kernelName:Te,backendName:"webgl",kernelFunc:$O},tD="return a + b;",nD=NO({opSnippet:tD,packedOpSnippet:tD,supportsComplex:!0,cpuKernelImpl:U_}),aD={kernelName:Ee,backendName:"webgl",kernelFunc:nD};class rD{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class oD{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const sD={kernelName:Re,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return fO({inputs:{x:r[0]},backend:a});if(r.length>ve().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),o=e({inputs:r.slice(t),backend:a});return e({inputs:[n,o],backend:a})}const o=r.map((e=>e.dtype)).reduce(((e,t)=>Br(e,t))),s=r.map((e=>e.shape)),i=ve().getBool("WEBGL_PACK")?new oD(r[0].shape,s):new rD(r[0].shape,s);return a.runWebGLProgram(i,r,o)}};const iD={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=Y(o,r.shape);let l=c;const u=Cl(l,i);let h=r;null!=u&&(h=HO({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Tl(l.length,i)),Il("all",l,i);const[d,p]=kl(h.shape,l),f=DO({inputs:{x:h},backend:n,attrs:{shape:[-1,U(p)]}}),m=PO(f,f.dtype,"all",n);let g;if(s){g=DO({inputs:{x:m},backend:n,attrs:{shape:Sl(d,c)}})}else g=DO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};const cD={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=Y(o,r.shape);let l=c;const u=Cl(l,i);let h=r;null!=u&&(h=HO({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Tl(l.length,i)),Il("any",l,i);const[d,p]=kl(h.shape,l),f=DO({inputs:{x:h},backend:n,attrs:{shape:[-1,U(p)]}}),m=PO(f,f.dtype,"any",n);let g;if(s){g=DO({inputs:{x:m},backend:n,attrs:{shape:Sl(d,c)}})}else g=DO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}};class lD{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:o}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,o];const s="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(s," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class uD{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,P(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],o=Math.ceil(r/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),a||this.variableNames.push("bestIndicesA");const s=this.outputShape,i=s.length,c=m_(i),l=LF("coords",i);let u,h;if(1===o){h=i+1;const e=m_(h);u="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else h=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),m=LF("sourceLocR",h-1).concat("inIdx.r"),g=LF("sourceLocG",h-1).concat("inIdx.g"),y=LF("sourceLocB",h-1).concat("inIdx.b"),b=LF("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(d.join(),"),\n                                          vec2(").concat(d.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(d.join(),"),\n                               vec2(").concat(d.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(s[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(s[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(v,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function hD(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],o=t.shape[1];null!=a&&(r=a.shape[0],o=a.shape[1]);const s=Ap(o),i={windowSize:s,inSize:o,batchSize:r,outSize:Math.ceil(o/s)},c=new lD(i,n,null==a),l=[t];null!=a&&l.push(a);const u=e.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const h=hD(e,t,n,u);return e.disposeIntermediateTensorInfo(u),h}function dD(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,o=Ap(r[r.length-1]),s=new uD(r,o,n,null==a),i=null==a?[t]:[t,a],c=e.runWebGLProgram(s,i,"int32");if(c.shape.length===t.shape.length){const a=dD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),a}return c}function pD(e,t,n,a){const r=[n];if(Il("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!ve().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let s=t;null!==o&&o.isPacked&&(s=e.unpackTensor(t),n.push(s));const[i,c]=kl(s.shape,r),l=U(c),u=DO({inputs:{x:s},backend:e,attrs:{shape:[-1,l]}});n.push(u);const h=hD(e,u,a);n.push(h);const d=DO({inputs:{x:h},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return dD(e,t,a)}const fD={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Y(o,r.shape);const i=Cl(s,r.shape.length);let c=r;const l=[];null!=i&&(c=HO({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=Tl(s.length,c.shape.length)),Il("argMax",[s[0]],c.shape.length);const u=pD(n,c,s[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};const mD={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Y(o,r.shape);const i=Cl(s,r.shape.length);let c=r;const l=[];null!=i&&(c=HO({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=Tl(s.length,c.shape.length)),Il("argMin",[s[0]],c.shape.length);const u=pD(n,c,s[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},gD=CO({opSnippet:jF+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),yD={kernelName:De,backendName:"webgl",kernelFunc:gD},bD=CO({opSnippet:jF+"return log(x + sqrt(x * x + 1.0));"}),xD={kernelName:Me,backendName:"webgl",kernelFunc:bD},vD=CO({opSnippet:jF+"\n  return atan(x);\n"}),wD={kernelName:ze,backendName:"webgl",kernelFunc:vD},kD=NO({opSnippet:uO+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+dO+"\n  return result;\n"}),SD={kernelName:Pe,backendName:"webgl",kernelFunc:kD},ID=CO({opSnippet:jF+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),CD={kernelName:Le,backendName:"webgl",kernelFunc:ID};class ND{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(h," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(o/4),v=o%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(d,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(x,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(x,";\n          if (").concat(1===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===v,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class TD{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(d,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(h,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let v="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(o/4),k=o%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(x,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(x,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(d,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(h,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(h,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(h,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(h,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(v,");\n      }\n    ")}}const ED={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ZA(r,"avgPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;P(kc(s,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const l=dc(r.shape,o,s,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&G(l.inShape,l.outShape))return fO({inputs:{x:r},backend:n});const u=new ND(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const RD={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=pc(r.shape,o,s,[1,1,1],i,c,l),h=new TD(u,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class AD{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(h,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(o,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(s,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class _D{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(h,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const FD={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=pc(s.shape,i,c,[1,1,1],l,u),d=new _D(h);return n.runWebGLProgram(d,[r],s.dtype)}};const OD={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o;ZA([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=dc(s.shape,i,c,1,l),h=new AD(u);return n.runWebGLProgram(h,[r],s.dtype)}};const DD={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;return qO({a:r,b:o,transposeA:s,transposeB:i,backend:n})}};class MD{constructor(e,t,n,a,r,o){this.outputShape=[],this.variableNames=["x","mean","variance"],ei(e,t),ei(e,n);let s="0.0";null!=a&&(ei(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="1.0";null!=r&&(ei(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(s,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(o,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class zD{constructor(e,t,n,a,r,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ei(e,t),ei(e,n);let s="vec4(0.0)";null!=a&&(ei(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(ei(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(s,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(o,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const LD={kernelName:Mt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:o,variance:s,offset:i,scale:c}=t;P(o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),P(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),P(null==c||o.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,o,s];let h=null;null!=i&&(h=i.shape,u.push(i));let d=null;null!=c&&(d=c.shape,u.push(c));const p=ve().getBool("WEBGL_PACK_NORMALIZATION")?new zD(r.shape,o.shape,s.shape,h,d,l):new MD(r.shape,o.shape,s.shape,h,d,l);return n.runWebGLProgram(p,u,u[0].dtype)}};class PD{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=m_(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return BD.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(BD[t]," = start[").concat(t,"] + coords.").concat(BD[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const BD=["x","y","z","w","u","v"];class WD{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=m_(this.rank),n=LF("coords",this.rank),a=LF("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),o="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),s="\n      result.x = ".concat(o,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(o,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(o,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(o,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(s,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function UD(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,size:s}=a,[i,c]=Qi(r,o,s);if(zi(r,i,c),0===U(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=wF(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),u=Xi(r.shape,i,c);if(l||!u){const e=ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WD(c):new PD(c),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),o=a.makeTensorInfo(n,e.dtype),s=a.texData.get(o.dataId);Object.assign(s,r),s.refCount=1,s.shape=n,s.dtype=e.dtype;let i=Yi(t,se(e.shape));r.slice&&(i+=r.slice.flatOffset),s.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const c=a.dataRefCount.get(s.slice.origDataId)||1;return a.dataRefCount.set(s.slice.origDataId,c+1),o}(r,i,c,n)}const VD={kernelName:Zn,backendName:"webgl",kernelFunc:UD},GD={kernelName:He,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:s}=a;P(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=Fp(r.shape,o,i),l=Op(c.length,o.length),u=Dp(r.shape,o,i),h=Mp(s,o.length),d=zp(u,s,o.length),p=[],f=DO({inputs:{x:r},backend:n,attrs:{shape:c}}),m=HO({inputs:{x:f},backend:n,attrs:{perm:l}}),g=DO({inputs:{x:m},backend:n,attrs:{shape:u}}),y=UD({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const HD={kernelName:je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s}=a,i=n.readSync(r.dataId),c=n.readSync(o.dataId),l=V_(i,c,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,l)}};const jD={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,o=ve().getBool("WEBGL_PACK_BINARY_OPERATIONS"),s=ve().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===s){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[o,s]=H_(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(s,a.dtype);return n.texData.get(i.dataId).values=o,i}let i;return i=o?new pO("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new hO("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const KD={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,o=n.readSync(a.dataId),s=n.readSync(r.dataId),i=ei(Array.from(o),Array.from(s));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},qD=NO({opSnippet:"return float(a != b);",cpuKernelImpl:hF,dtype:"bool"}),XD={kernelName:xn,backendName:"webgl",kernelFunc:qD};function YD(e){const{inputs:t,backend:n}=e,{input:a}=t;return fO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const QD={kernelName:Dn,backendName:"webgl",kernelFunc:YD},ZD="return float(int(x));";const JD={kernelName:Xe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:o}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===o.dtype)return fO({inputs:{x:o},backend:a});const t=gu(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),r=gO({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===o.dtype){const t=YD({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(t),n}if(!$(o.dtype,s)){const e=fO({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([o])){const e=a.texData.get(o.dataId).values,[t,n,r]=j_(e,o.shape,o.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){const n=new HF(e.shape,ZD),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===s){const e=a.makeTensorInfo([],"bool",Z("bool",1)),t=qD({inputs:{a:o,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(s))}},$D="return ceil(x);",eM=CO({opSnippet:$D,packedOpSnippet:$D,cpuKernelImpl:K_}),tM={kernelName:Ye,backendName:"webgl",kernelFunc:eM};class nM{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class aM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const rM={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:o,clipValueMax:s}=a;let i;i=ve().getBool("WEBGL_PACK_CLIP")?new aM(r.shape):new nM(r.shape);const c=[[o],[s]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class oM{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function sM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const iM={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),o=new oM(a.shape),s=[sM(a,r.complexTensorInfos.real),sM(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}};class cM{constructor(e){this.outputShape=[],this.outputShape=Sp(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let o=1;o<t.length;o++){const e=t[o-1];n.push("else if (yC < ".concat(t[o],") ")+"setOutput(getT".concat(o,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class lM{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Sp(e,t);const n=this.outputShape,a=n.length,r=m_(a),o=LF("coords",a),s=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const c=s[t],l=s.slice(-2),u=s.join();let h="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];h+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(uM(s,c,e),"),\n            vec2(").concat(uM(l,c,e),"));\n        }")}const d=i.length,p=i[i.length-1];h+="\n        return getChannel(\n          getT".concat(d,"(").concat(uM(s,c,p),"),\n          vec2(").concat(uM(l,c,p),"));"),this.userCode="\n      float getValue(".concat(s.map((e=>"int "+e)),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(o,"), 0., 0., 0.);\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," + 1;\n        if (").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-2]," = ").concat(o[a-2]," + 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(o,");\n        }\n\n        ").concat(o[a-1]," = ").concat(o[a-1]," - 1;\n        if (").concat(o[a-2]," < ").concat(n[a-2]," &&\n            ").concat(o[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(o,");\n        }\n        setOutput(result);\n      }\n    ")}}function uM(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function hM(e){const{inputs:t,backend:n}=e,{input:a}=t;return fO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const dM={kernelName:Vt,backendName:"webgl",kernelFunc:hM};function pM(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>YD({inputs:{input:e},backend:n}))),r=e.map((e=>hM({inputs:{input:e},backend:n}))),o=pM(a,t,n),s=pM(r,t,n),i=gO({inputs:{real:o,imag:s},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=U(e.shape.slice(t));return DO({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),o=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=Sp(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=q_(o,s,a,i),l=Sp(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,a,c);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const o=e.filter((e=>U(e.shape)>0)),s=ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const t=s?new HF(e[0].shape,ZF):new rO(e[0].shape,ZF);return n.runWebGLProgram(t,e,a)}const i=ve().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const e=[];for(let r=0;r<o.length;r+=i){const a=o.slice(r,r+i);e.push(pM(a,t,n))}const a=pM(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(s){const e=new lM(o.map((e=>e.shape)),t);return n.runWebGLProgram(e,o,a)}const{tensors2D:c,outShape:l}=function(e,t,n){const a=Sp(e.map((e=>e.shape)),t),r=e.map((e=>DO({inputs:{x:e},attrs:{shape:[-1,U(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(o,t,n),u=new cM(c.map((e=>e.shape))),h=n.runWebGLProgram(u,c,a);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=DO({inputs:{x:h},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(h),d}function fM(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=Y(r,t[0].shape)[0];kp(t.map((e=>e.shape)),o);const s=Sp(t.map((e=>e.shape)),o);if(0===U(s))return n.makeTensorInfo(s,t[0].dtype,[]);const i=t.filter((e=>U(e.shape)>0));return 1===i.length?fO({inputs:{x:i[0]},backend:n}):pM(i,o,n)}const mM={kernelName:$e,backendName:"webgl",kernelFunc:fM};class gM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(x,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(h,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(d,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}class yM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(o,", ").concat(s,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class bM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=k_(this.outputShape.length);const o=e.padInfo.left,s=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,u=l;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)h+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");h+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<l;m++)h+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(u+1)/2;m++){const t=2*m;if(h+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===s){if(t<l&&(o%2===1?(h+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),h+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):h+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=o%2===0?M(i):i;i%2===0&&o%2===1||i%2!==0&&o%2!==1?(h+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),h+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):h+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(o%2===1?(h+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(h+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(h+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(h+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(h+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(h+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(d,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(h,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class xM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=k_(this.outputShape.length);const{dataFormat:n}=t,a=$A(),r="channelsLast"===n,o=r?1:2,s=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(o,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(s,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function vM(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function wM(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=t.shape,u=r.texData.get(t.dataId),h=a.inChannels,d=l[0]*l[1]*l[2],p=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=s){const e=vM(s.shape,f);null!=e&&(s=DO({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(null!=o){const e=vM(o.shape,f);null!=e&&(o=DO({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(!((1===d||1===p)&&h>KO)&&u.isPacked&&f&&null!=u.texture&&l[2]%2!==0&&G(u.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),h={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,P(HA(u.shape,h.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(h.shape," isn't free")));const p=DO({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(p);const f=qO({a:h,b:p,backend:r,transposeA:false,transposeB:m,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),b=r.texData.get(f.dataId);P(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,b.shape=a.outShape,g=fO({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,l=DO({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=DO({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),h=qO({a:f?l:u,b:f?u:l,transposeA:!f,transposeB:m,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i});g=DO({inputs:{x:h},backend:r,attrs:{shape:a.outShape}}),y.push(l),y.push(u),y.push(h)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function kM(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=l*u*h,y=p*d,b=[a.batchSize,g,y],x=[];if(null!=s){const e=vM(s.shape,m);null!=e&&(s=DO({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}if(null!=o){const e=vM(o.shape,m);null!=e&&(o=DO({inputs:{x:o},backend:r,attrs:{shape:e}}),x.push(o))}const v=DO({inputs:{x:n},backend:r,attrs:{shape:[1,g,U(n.shape)/g]}});x.push(v);const w=new xM(b,a),k=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],S=r.runWebGLProgram(w,[t],"float32",k),I=DO({inputs:{x:S},backend:r,attrs:{shape:b}});x.push(S),x.push(I);const C=null!=o,N=null!=s,T="leakyrelu"===c,E=c?TO(c,!0):null,R=new EO(m?I.shape:v.shape,m?v.shape:I.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,C,E,N,T),A=m?[I,v]:[v,I];if(o&&A.push(o),N&&A.push(s),T){const e=r.makeTensorInfo([],"float32",cr(i,"float32"));A.push(e),x.push(e)}const _=r.runWebGLProgram(R,A,"float32"),F=DO({inputs:{x:_},backend:r,attrs:{shape:a.outShape}});x.push(_);for(const O of x)r.disposeIntermediateTensorInfo(O);return F}const SM={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=Ic(c),d=fc(r.shape,o.shape,s,l,i,u,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ve().getBool("WEBGL_EXP_CONV")){const e=new bM(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,o],"float32",t)}else if(ve().getBool("WEBGL_CONV_IM2COL"))p=kM({x:r,filter:o,convInfo:d,backend:n});else{const e=new gM(d);p=n.runWebGLProgram(e,[r,o],"float32")}else p=wM({x:r,filter:o,convInfo:d,backend:n});const f=DO({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class IM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,o="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(o?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class CM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=o?1:2,l=o?2:3,u=o?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(o,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class NM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,o=e.padInfo.top,s=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(o,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(s,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class TM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const EM={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=Ic(c),d=fc(r.shape,u,s,1,i,l,!1,h),p=new IM(d);return n.runWebGLProgram(p,[r,o],"float32")}};class RM{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=k_(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const AM={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=Ic(l),d=fc(s,o.shape,i,1,c,u,!1,h);if(ve().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new RM(d);return n.runWebGLProgram(t,[r,o],"float32",e)}{const e=new CM(d);return n.runWebGLProgram(e,[r,o],"float32")}}};const _M={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,l=mc(r.shape,o.shape,s,c,i),u=new yM(l);return n.runWebGLProgram(u,[r,o],"float32")}};const FM={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,filterShape:c}=a,l=mc(r.shape,c,s,1,i),u=new NM(l);return n.runWebGLProgram(u,[r,o],"float32")}};const OM={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{pad:s,strides:i,inputShape:c}=a,l=mc(c,o.shape,i,1,s),u=new TM(l);return n.runWebGLProgram(u,[r,o],"float32")}},DM=CO({opSnippet:IO+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(dO,"\n  return result;\n")}),MM={kernelName:st,backendName:"webgl",kernelFunc:DM},zM=CO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),LM={kernelName:it,backendName:"webgl",kernelFunc:zM};class PM{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,c]=e,[l]=t,[u,h]=n;this.outputShape=[l,u,h,c];const d="bilinear"===a?1:0,[p,f]=["".concat(s-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((s-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,x,v]=h>1?["".concat((i-1)/(h-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(o,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(x,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(v,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(d," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const BM={kernelName:ut,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new PM(r.shape,o.shape,i,c,l);return n.runWebGLProgram(u,[r,o,s],"float32")}};var WM;!function(e){e.Prod="*",e.Sum="+"}(WM||(WM={}));class UM{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,o=this.op===WM.Prod?"1.0":"0.0",s=n?o:"getX(".concat(VM(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(m_(r)," coords = getOutputCoords();\n        int end = ").concat(GM(r,"coords",this.op),";\n        float val = ").concat(s,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(GM(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(VM(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function VM(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function GM(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function HM(e,t,n,a,r,o){const s=t.shape.length,i=Cl([a],s);let c=t;null!=i&&(c=HO({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Tl(1,s)[0];if(l!==s-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let h=fO({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const t=new UM(e,c.shape,!1,o),a=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new UM(e,c.shape,r,o),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=HO({inputs:{x:h},backend:n,attrs:{perm:Nl(i)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}const jM={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return HM(WM.Prod,r,n,o,s,i)}};const KM={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return HM(WM.Sum,r,n,o,s,i)}};const qM={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(o.dataId),a=V_(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(o),a=G_(e,t,s,i);return n.makeTensorInfo(a.shape,o.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class XM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const YM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a,i=r.shape[0],c=("NHWC"===s?r.shape[1]:r.shape[2])*o,l=("NHWC"===s?r.shape[2]:r.shape[3])*o,u=("NHWC"===s?r.shape[3]:r.shape[1])/(o*o),h=new XM("NHWC"===s?[i,c,l,u]:[i,u,c,l],o,s);return n.runWebGLProgram(h,[r],r.dtype)}};class QM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=k_(this.outputShape.length);const o=e.filterHeight,s=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(o,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class ZM{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=k_(this.outputShape.length);const o=e.outChannels/e.inChannels,s=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)d+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");d+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let g=0;g<u;g++)d+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(h+1)/2;g++){const e=2*g;if(d+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<u&&(s%2===1?(d+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),d+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):d+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<u)){const t=s%2===0?M(c):c;c%2===0&&s%2===1||c%2!==0&&s%2!==1?(d+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),d+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):d+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<u&&(s%2===1?(d+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<u&&(d+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(d+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<u&&(d+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<u&&(d+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<u&&(d+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(o,";\n        int q = d2 - d1 * ").concat(o,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(d,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const JM={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),P(kc(s,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(s," and dilations '").concat(u,"'")));const h=fc(r.shape,o.shape,s,u,i,l,!0);let d;d=ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new ZM(h):new QM(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,o],"float32",p)}};class $M{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(o," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ez{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,o=t-1-e.padInfo.top,s=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const tz={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=fc(r.shape,u,s,i,c,l,!0),d=new $M(h);return n.runWebGLProgram(d,[r,o],"float32")}};const nz={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=fc(u,o.shape,s,i,c,l,!0),d=new ez(h);return n.runWebGLProgram(d,[r,o],"float32")}};class az{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const rz={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],o=U(a.shape),s=DO({inputs:{x:a},backend:n,attrs:{shape:[o]}}),i=new az(o),c=n.runWebGLProgram(i,[s],s.dtype),l=DO({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(c),l}};class oz{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:h}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(o,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(h,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(s,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const sz={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,l=hc(r.shape,o.shape,s,i,"NHWC",c);let u;const h=new oz(l);u=n.runWebGLProgram(h,[r,o],"float32");const d=DO({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),d}};const iz={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:s,summedDims:i,idDims:c}=rf(r,o.length);sf(s.length,c,o);const{path:l,steps:u}=cf(i,c),h=u.length;let d=null,p=s.length;const f=[];for(let m=0;m<h;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=of(p,c[e]);let r;lf(t)?r=o[e]:(r=HO({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),f.push(r));const s=r.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);G(r.shape,s)||(r=DO({inputs:{x:r},backend:n,attrs:{shape:s}}),f.push(r)),null===d?d=r:(d=FO({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=VO({inputs:{x:d},backend:n,attrs:{axis:l[m]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}},cz=CO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),lz={kernelName:St,backendName:"webgl",kernelFunc:cz},uz={kernelName:It,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,o=ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pO("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new hO("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(o,[a,r],a.dtype)}},hz=NO({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:X_}),dz={kernelName:Nt,backendName:"webgl",kernelFunc:hz},pz=CO({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(Wp,";\n  float a1 = ").concat(Up,";\n  float a2 = ").concat(Vp,";\n  float a3 = ").concat(Gp,";\n  float a4 = ").concat(Hp,";\n  float a5 = ").concat(jp,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),fz={kernelName:Ct,backendName:"webgl",kernelFunc:pz},mz=CO({opSnippet:IO+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Y_,dtype:"float32"}),gz={kernelName:Tt,backendName:"webgl",kernelFunc:mz};function yz(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:o}=t,s=o.shape.length,i=o.shape.slice();let c=r;return r<0&&(P(-(s+1)<=r,(()=>"Axis must be in the interval [".concat(-(s+1),", ").concat(s,"]"))),c=s+r+1),i.splice(c,0,1),DO({inputs:{x:o},backend:a,attrs:{shape:i}})}const bz={kernelName:Et,backendName:"webgl",kernelFunc:yz},xz="return exp(x) - 1.0;",vz=CO({opSnippet:xz,packedOpSnippet:xz,cpuKernelImpl:Q_}),wz={kernelName:Rt,backendName:"webgl",kernelFunc:vz};class kz{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),o=n?"".concat(a,".0"):"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));s="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(s,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(o,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function Sz(e,t,n){const a=n.texData.get(e.dataId),r=U(e.shape),o=e.shape[e.shape.length-1],s=DO({inputs:{x:e},backend:n,attrs:{shape:[r/o,o]}}),i=s.shape,c=new kz("real",i,t),l=new kz("imag",i,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],h=n.runWebGLProgram(c,u,"float32"),d=n.runWebGLProgram(l,u,"float32"),p=gO({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=DO({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(p),f}const Iz={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Sz(a,!1,n)}};class Cz{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Nz(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:o}=n;if(o=o||ae(r),"string"===o){const e=J(o,U(a));return e.fill(r),t.makeTensorInfo(a,o,e)}{const e=new Cz(a,r),n=[[r]];return t.runWebGLProgram(e,[],o,n)}}const Tz={kernelName:_t,backendName:"webgl",kernelFunc:Nz};class Ez{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const Rz={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,o=new Ez(a.shape);return r.runWebGLProgram(o,[a],a.dtype)}},Az="return floor(x);",_z=CO({opSnippet:Az,packedOpSnippet:Az,cpuKernelImpl:Z_}),Fz={kernelName:Ot,backendName:"webgl",kernelFunc:_z},Oz=NO({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Dz={kernelName:Dt,backendName:"webgl",kernelFunc:Oz};class Mz{constructor(e){this.variableNames=["A"];const t=$A(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class zz{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=$A(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const Lz={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:o}=a,s="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],h=[l,c,o];if(i||s){const e=ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Pz&&e===Bz||(Bz=e,Pz=document.createElement("canvas").getContext("2d",{willReadFrequently:Bz})),Pz.canvas.width=c,Pz.canvas.height=l,Pz.drawImage(r,0,0,c,l),r=Pz.canvas}const d=n.makeTensorInfo(u,"int32");n.texData.get(d.dataId).usage=wA.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=ve().getBool("WEBGL_PACK")?new zz(h):new Mz(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let Pz,Bz=ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const Wz={kernelName:Ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=Ic(u),g=fc(r.shape,o.shape,c,h,l,d,!1,m);let y;const b=[],x=null!=s,v=null!=i,w="leakyrelu"===p,k=()=>{const e=[r,o],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=DO({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(s,u)),v&&e.push(t(i,u)),w){const t=n.makeTensorInfo([],"float32",cr(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&ve().getBool("WEBGL_EXP_CONV")){const e=p?TO(p,!0):null,t=new bM(g,x,e,v,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",a)}else if(ve().getBool("WEBGL_CONV_IM2COL"))y=kM({x:r,filter:o,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?TO(p,!1):null,t=new gM(g,x,e,v,w),a=k();y=n.runWebGLProgram(t,a,"float32")}else y=wM({x:r,filter:o,convInfo:g,backend:n,bias:s,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const S=DO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const Uz={kernelName:za,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a,f=[];let m=u;null==m&&(m=[1,1]),P(kc(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=fc(r.shape,o.shape,c,m,l,h,!0),y=ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=d?TO(d,y):null,x=[r,o],v=null!=s,w=null!=i,k="leakyrelu"===d;if(v&&x.push(s),w&&x.push(i),k){const e=n.makeTensorInfo([],"float32",cr(p,"float32"));x.push(e),f.push(e)}let S;S=y?new ZM(g,v,b,w,k):new QM(g,v,b,w,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],C=n.runWebGLProgram(S,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class Vz{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=m_(n.length);let o="\n    int index;";for(let s=0;s<this.sliceDim;s++)o+="\n          index = round(getIndices(coords[0], ".concat(s,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[s],";\n          flattenIndex += index * ").concat(this.strides[s],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(o,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const Gz={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=r.shape,s=o[o.length-1],i=U(a.shape),[c,l,u,h]=Lp(a,r),d=DO({inputs:{x:r},backend:n,attrs:{shape:[l,s]}}),p=DO({inputs:{x:a},backend:n,attrs:{shape:[U(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),o=J_(e,t,a.dtype,l,s,u,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,o.values)}const f=new Vz(s,h,[l,u],a.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=DO({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class Hz{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=m_(this.rank),a=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push("".concat(t[a]));return n.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function jz(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:s,batchDims:i}=a,c=Y(s,r.shape)[0];if(ve().get("DEBUG")){const e=n.readSync(o.dataId),t=r.shape[c];for(let n=0;n<e.length;++n){const a=e[n];P(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const l=Nf(r,o,c,i),u=U(o.shape),h=[],d=DO({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=DO({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});h.push(d),h.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,o])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),a=$_(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const m=new Hz(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const y=DO({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const Kz={kernelName:zt,backendName:"webgl",kernelFunc:jz},qz=NO({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:eF,dtype:"bool"}),Xz={kernelName:Pt,backendName:"webgl",kernelFunc:qz},Yz=NO({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:tF}),Qz={kernelName:Bt,backendName:"webgl",kernelFunc:Yz};const Zz={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return Sz(a,!0,n)}},Jz=CO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),$z={kernelName:Gt,backendName:"webgl",kernelFunc:Jz},eL=CO({opSnippet:"return float(isinf(x));",dtype:"bool"}),tL={kernelName:Ht,backendName:"webgl",kernelFunc:eL},nL=CO({opSnippet:"return float(isnan(x));",dtype:"bool"}),aL={kernelName:jt,backendName:"webgl",kernelFunc:nL},rL=NO({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:nF,dtype:"bool"}),oL={kernelName:qt,backendName:"webgl",kernelFunc:rL},sL=NO({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:aF,dtype:"bool"}),iL={kernelName:Xt,backendName:"webgl",kernelFunc:sL};const cL={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=rF(a,r,o);return t.makeTensorInfo([s.length],"float32",s)}},lL=CO({opSnippet:IO+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:oF}),uL={kernelName:Qt,backendName:"webgl",kernelFunc:lL},hL=CO({opSnippet:IO+"\n  return log(1.0 + x);\n"}),dL={kernelName:Zt,backendName:"webgl",kernelFunc:hL},pL=NO({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),fL={kernelName:Jt,backendName:"webgl",kernelFunc:pL},mL=CO({opSnippet:"return float(!(x >= 1.0));"}),gL={kernelName:$t,backendName:"webgl",kernelFunc:mL},yL=NO({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),bL={kernelName:en,backendName:"webgl",kernelFunc:yL};class xL{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const o=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(o,"; j <= ").concat(o,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(s,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class vL{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,s=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(o,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(o,"; j <= ").concat(o,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(s,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const wL={kernelName:tn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a,l=ve().getBool("WEBGL_PACK_NORMALIZATION")?new vL(r.shape,o,s,i,c):new xL(r.shape,o,s,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class kL{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const SL={kernelName:nn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new kL(r.shape,i,c,l,u);return n.runWebGLProgram(h,[r,o,s],r.dtype)}};function IL(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:s}=a,i=r.shape.length,c=Y(o,r.shape);let l=c;const u=Cl(l,i),h=null!=u,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[u[n]];const a=DF(e,r.shape,r.dtype,u,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=a}else p=UO(r,u,n);l=Tl(l.length,i)}Il("max",l,i);const[f,m]=kl(p.shape,l);let g,y=f;if(s&&(y=Sl(f,c)),d){const e=n.texData.get(p.dataId).values,t=sF(e,U(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=U(t),o=DO({inputs:{x:e},attrs:{shape:[U(e.shape)/r,r]},backend:a}),s=PO(o,e.dtype,"max",a),i=DO({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),g}const CL={kernelName:an,backendName:"webgl",kernelFunc:IL},NL=NO({opSnippet:uO+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+dO+"\n  return result;\n",cpuKernelImpl:iF}),TL={kernelName:rn,backendName:"webgl",kernelFunc:NL};const EL={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ZA(r,"maxPool");const{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;P(kc(s,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(1,"'")));const l=dc(r.shape,o,s,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&G(l.inShape,l.outShape))return fO({inputs:{x:r},backend:n});const u=new ND(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const RL={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=pc(r.shape,o,s,[1,1,1],i,l,c),h=new TD(u,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class AL{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,o=e.effectiveFilterWidth,s=r-1-e.padInfo.top,i=o-1-e.padInfo.left,c=r*o-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(o," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class _L{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,h=c-1-e.padInfo.top,d=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(h,", ").concat(d,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(o,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(s,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const FL={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=pc(s.shape,i,c,[1,1,1],l,u),d=new TD(h,"max",!0),p=n.runWebGLProgram(d,[s],s.dtype),f=new _L(h),m=n.runWebGLProgram(f,[r,p],s.dtype);return n.disposeIntermediateTensorInfo(p),m}};const OL={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:s}=t,i=o;ZA([o,s],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=dc(i.shape,c,l,1,u,h),p=new ND(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new AL(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const DL={kernelName:un,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:o,strides:s,pad:i,includeBatchInIndex:c}=n,l=a;P(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];P(kc(s,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(s," and dilations '").concat(u,"'")));const h=dc(r.shape,o,s,u,i),[d,p]=function(e,t,n,a){let r=new ND(n,"max",!1);const o=a.runWebGLProgram(r,[e],"float32");return r=new ND(n,"max",!0,!0,t),[o,a.runWebGLProgram(r,[e],"float32")]}(r,c,h,l);return[d,p]}};const ML={kernelName:hn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:o,axis:s}=n,i=a,c=r.shape.length,l=Y(s,r.shape);let u=l;const h=Cl(u,c),d=null!=h,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(d){if(p){const e=i.texData.get(m.dataId).values,t=new Array(c);for(let a=0;a<t.length;a++)t[a]=r.shape[h[a]];const n=DF(e,r.shape,r.dtype,h,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=UO(r,h,i);f.push(m),u=Tl(u.length,c)}Il("sum",u,c);const[g,y]=kl(m.shape,u);let b=g;o&&(b=Sl(g,l));const x=function(e,t,n,a){const r=U(t),o=DO({inputs:{x:e},attrs:{shape:[U(e.shape)/r,r]},backend:a}),s=PO(o,"float32","mean",a),i=DO({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}(m,y,b,i);for(const v of f)i.disposeIntermediateTensorInfo(v);return x}};const zL={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=Y(o,r.shape);let l=c;const u=Cl(l,i);let h=r;null!=u&&(h=HO({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Tl(l.length,r.shape.length)),Il("min",l,i);const[d,p]=kl(h.shape,l),f=DO({inputs:{x:h},backend:n,attrs:{shape:[-1,U(p)]}}),m=PO(f,f.dtype,"min",n);let g;if(s){g=DO({inputs:{x:m},backend:n,attrs:{shape:Sl(d,c)}})}else g=DO({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(h),g}},LL=NO({opSnippet:uO+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+dO+"\n  return result;\n",cpuKernelImpl:cF}),PL={kernelName:pn,backendName:"webgl",kernelFunc:LL};class BL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=m_(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(o,");\n      ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class WL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=m_(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=LF("rc",a),c=LF("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h="reflect"===n?0:1;let d="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(h,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(h,";\n        }\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(h,") +\n                gte * ((end - 1) * 2 - source + ").concat(h,");\n        source -= start;\n      ");d="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(o,");\n      const ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(d,"\n        setOutput(result);\n      }\n    ")}}const UL={kernelName:fn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:o,mode:s}=a,i=ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WL(r.shape,o,s):new BL(r.shape,o,s);return n.runWebGLProgram(i,[r],r.dtype)}},VL=NO({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+dO+"\n  return result;\n"}),GL={kernelName:mn,backendName:"webgl",kernelFunc:VL};class HL{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const jL=NO({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),KL={kernelName:wt,backendName:"webgl",kernelFunc:jL},qL="return a - b;",XL=NO({opSnippet:qL,packedOpSnippet:qL,supportsComplex:!0,cpuKernelImpl:_F}),YL={kernelName:va,backendName:"webgl",kernelFunc:XL};function QL(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,s=Y([o],r.shape),i=IL({inputs:{x:r},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),c=Sl(i.shape,s),l=DO({inputs:{x:i},backend:n,attrs:{shape:c}}),u=XL({inputs:{a:r,b:l},backend:n}),h=mz({inputs:{x:u},backend:n}),d=VO({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:!1}}),p=DO({inputs:{x:d},backend:n,attrs:{shape:c}}),f=jL({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const ZL={kernelName:ia,backendName:"webgl",kernelFunc:QL};const JL={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a,c=i?r:QL({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new HL(l,u,o),d=[[s]],p=n.runWebGLProgram(h,[c],"int32",d);return i||n.disposeIntermediateTensorInfo(c),p}},$L=jF+"\n  return -x;\n";const eP={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=uF(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new rO(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new HF(a.shape,$L),n.runWebGLProgram(r,[a],a.dtype)}},tP=Ed;const nP={kernelName:vn,backendName:"webgl",kernelFunc:function(e){La("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(o.dataId),{selectedIndices:h}=tP(l,u,s,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},aP=Rd;const rP={kernelName:wn,backendName:"webgl",kernelFunc:function(e){La("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),h=n.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=aP(u,h,s,i,c,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},oP=Ad;const sP={kernelName:kn,backendName:"webgl",kernelFunc:function(e){La("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),h=n.readSync(o.dataId),d=s,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=oP(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class iP{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const cP={kernelName:In,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:s,onValue:i,offValue:c}=a,l=U(r.shape),u=new iP(l,s,i,c),h=DO({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[h],o);n.disposeIntermediateTensorInfo(h);const p=DO({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};function lP(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=YD({inputs:{input:a},backend:n}),t=lP({inputs:{x:e},backend:n}),r=hM({inputs:{input:a},backend:n}),o=lP({inputs:{x:r},backend:n}),s=gO({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o),s}return Nz({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const uP={kernelName:Aa,backendName:"webgl",kernelFunc:lP};const hP={kernelName:Sn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=YD({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=hM({inputs:{input:r},backend:a}),s=lP({inputs:{x:o},backend:a}),i=gO({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}return Nz({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const dP={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return yz({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{B(o,e.shape,"All tensors passed to stack must have matching shapes"),P(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=fM({inputs:t.map((e=>{const t=yz({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class pP{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=m_(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(o,");\n      ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class fP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=m_(a),o=t.map((e=>e[0])).join(","),s=t.map(((t,n)=>t[0]+e[n])).join(","),i=LF("rc",a),c=LF("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),h=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(h[f],"\n        if (").concat(d,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(o,");\n      const ").concat(r," end = ").concat(r,"(").concat(s,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const mP=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:s}=a;if(0===U(r.shape)){const e=o.map(((e,t)=>e[0]+r.shape[t]+e[1]));return Nz({backend:n,attrs:{shape:e,value:s,dtype:r.dtype}})}const i=ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fP(r.shape,o,s):new pP(r.shape,o,s),c=[[s]];return n.runWebGLProgram(i,[r],r.dtype,c)},gP={kernelName:Nn,backendName:"webgl",kernelFunc:mP},yP=NO({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+dO+"\n  return result;\n"}),bP={kernelName:Tn,backendName:"webgl",kernelFunc:yP};const xP={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a,i=r.shape.length,c=[],l=Y(o,r.shape);let u=l;const h=Cl(u,i);let d,p=r;if(null!=h&&(p=HO({inputs:{x:r},backend:n,attrs:{perm:h}}),u=Tl(u.length,i),c.push(p)),Il("prod",u,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=dF(p.shape,p.dtype,e,u);d=n.makeTensorInfo(a,r,t)}else{const[e,t]=kl(p.shape,u),a=U(t),o=DO({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),s=PO(o,Wr(r.dtype),"prod",n);d=DO({inputs:{x:s},backend:n,attrs:{shape:e}}),c.push(o),c.push(s)}if(s){c.push(d);const e=Sl(d.shape,l);d=DO({inputs:{x:d},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const vP={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:o,indices:s}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(o.dataId),h=n.readSync(s.dataId),[d,p,f]=pF(c,l,u,o.shape,o.dtype,h,s.shape,i),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,o.dtype,p);return m.concat([g])}};const wP={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:o}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[l,u]=fF(s,a.shape,a.dtype,i,r.shape,c,o.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const kP={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:o,defaultValue:s,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(o.dataId),h=n.readSync(s.dataId),d=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=mF(l,r.shape,u,o.shape,o.dtype,h,s.shape,d,p,c);return n.makeTensorInfo(f,o.dtype,m)}},SP=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:o,dtype:s}=n,i=gF(a,r,o,s);return t.makeTensorInfo([i.length],s,i)},IP={kernelName:On,backendName:"webgl",kernelFunc:SP},CP=CO({opSnippet:"return 1.0 / x;"}),NP={kernelName:Mn,backendName:"webgl",kernelFunc:CP},TP=CO({opSnippet:jF+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),EP={kernelName:zn,backendName:"webgl",kernelFunc:TP},RP=CO({opSnippet:jF+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),AP={kernelName:Vn,backendName:"webgl",kernelFunc:RP};class _P{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class FP{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const OP={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,l]=i,u=ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new FP(r.shape,c,l,o,s):new _P(r.shape,c,l,o,s);return n.runWebGLProgram(u,[r],"float32")}};class DP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,o,s]=e,i=[n&&o>1?a-1:a,n&&s>1?r-1:r],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const MP={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=new DP(o.shape,r.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class zP{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class LP{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=e;this.outputShape=[o,t,n,c];const l=[a&&t>1?s-1:s,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(h,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const PP={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,l]=i,u=ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LP(r.shape,c,l,o,s):new zP(r.shape,c,l,o,s);return n.runWebGLProgram(u,[r],r.dtype)}};class BP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,o,s]=e,i=[n&&o>1?a-1:a,n&&s>1?r-1:r],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],l=i[0]/c[0],u=i[1]/c[1],h=1/l,d=1/u,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(h,");\n        const float invWidthScale = float(").concat(d,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const WP={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,i=new BP(o.shape,r.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class UP{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=m_(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class VP{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=LF("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),o="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),s=m_(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),o=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(o,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(s," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(o,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const GP={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a,s=r.shape.length,i=Y(o,r.shape);if(0===s)return fO({inputs:{x:r},backend:n});const c=ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new VP(r.shape,i):new UP(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class HP{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const jP={kernelName:Oa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:s,center:i}=n,c=a,l=new HP(r.shape,s),[u,h]=_p(i,r.shape[1],r.shape[2]),d=[[u,h,Math.sin(o),Math.cos(o)]];return c.runWebGLProgram(l,[r],r.dtype,d)}},KP=CO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),qP={kernelName:Hn,backendName:"webgl",kernelFunc:KP},XP=CO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:yF}),YP={kernelName:jn,backendName:"webgl",kernelFunc:XP};class QP{constructor(e,t,n,a,r,o){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=m_(r.length),c=m_(o.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";s&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class ZP{constructor(e,t,n,a,r,o){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const i=m_(r.length),c=m_(o.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let h="";1===a?h="i":2===a&&(h="i, coords[1]");const d="getUpdates(".concat(h,")");let p="";s&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(d,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const JP={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:s}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ph(0,r,s),d=[h/l,l];if(0===h)return n.makeTensorInfo(s,r.dtype);const p=DO({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=DO({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=ve().getBool("WEBGL_PACK")?new ZP(c,i,p.shape.length,f.shape.length,u,d):new QP(c,i,p.shape.length,f.shape.length,u,d);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=DO({inputs:{x:y},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class $P{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),o=2===ve().getNumber("WEBGL_VERSION")?"while (left < right) {":r,s="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(o,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(s," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const eB={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=new $P(r.shape[0],r.shape[1],o.shape[1],s),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,o],"int32",c)}};class tB{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let a=0;a<t.length;a++)s.push("".concat(n[a])),a<e&&o.push("".concat(n[a]));a=o.join(),r=s.join()}const o=m_(n);this.userCode="\n      void main() {\n        ".concat(o," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const nB={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t,s=new tB(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(s,[a,r,o],Br(r.dtype,o.dtype))}},aB=CO({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Pp,";\n  float scale = ").concat(Bp,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),rB={kernelName:Qn,backendName:"webgl",kernelFunc:aB},oB=CO({opSnippet:IO+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xF}),sB={kernelName:ta,backendName:"webgl",kernelFunc:oB},iB=CO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),cB={kernelName:ea,backendName:"webgl",kernelFunc:iB},lB=CO({opSnippet:IO+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(dO,"\n  return result;\n")}),uB={kernelName:Jn,backendName:"webgl",kernelFunc:lB},hB=CO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),dB={kernelName:$n,backendName:"webgl",kernelFunc:hB},pB=CO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),fB={kernelName:na,backendName:"webgl",kernelFunc:pB},mB={kernelName:oa,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:s}=a;P(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...s);for(let y=1+o.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=mP({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),h=Fp(u.shape,o,i,!1),d=Op(h.length,o.length,!1),p=Dp(u.shape,o,i,!1),f=DO({inputs:{x:u},backend:n,attrs:{shape:h}}),m=HO({inputs:{x:f},backend:n,attrs:{perm:d}}),g=DO({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const gB={kernelName:ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:o,defaultValue:s}=t;if(1!==o.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(o.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==s.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(s.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(o.dataId),u=n.readSync(s.dataId)[0],[h,d,p,f,m]=kF(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const yB={kernelName:la,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:o}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==o.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(o.shape));const s=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(o.dataId)),[l,u,h]=SF(i,a.shape,a.dtype,s,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}};const bB={kernelName:ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(o.shape));const s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[l,u]=IF(s,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const xB={kernelName:ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==o.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(o.shape));const s=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(o.dataId),[l,u]=IF(s,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const vB={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:s}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Ph(0,r,i),p=!1;if("string"===o.dtype){const e=n.bufferSync(r),t=n.bufferSync(o),a=dr(n.readSync(s.dataId)[0]),f=bF(e,t,i,d,u,l,c,h,a,p);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new QP(l,c,r.shape.length,o.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[o,r,s],o.dtype),g=DO({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const wB={kernelName:sa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:s}=a,i=Y(s,r.shape)[0],c=hf(r,o,i),l=r.shape.length,u=new Array(l).fill(0),h=r.shape.slice();return c.map((e=>{const t=[...h];t[i]=e;const a=UD({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,a}))}},kB="return sqrt(x);",SB=CO({opSnippet:kB,packedOpSnippet:kB,cpuKernelImpl:CF}),IB={kernelName:aa,backendName:"webgl",kernelFunc:SB},CB={kernelName:fa,backendName:"webgl",kernelFunc:CO({opSnippet:"return x * x;"})},NB="return (a - b) * (a - b);",TB=NO({opSnippet:NB,packedOpSnippet:NB}),EB={kernelName:pa,backendName:"webgl",kernelFunc:TB};const RB={kernelName:ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const o=Tf(n.readSync(r.dataId)),s=NF(o,"string",a);return n.makeTensorInfo(r.shape,"string",s)}};const AB={kernelName:_a,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,o=jF+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),s=new HF(r.shape,o);return a.runWebGLProgram(s,[r],r.dtype)}};class _B{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=m_(n.length),o=m_(n.length);let s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(s,"));\n      }\n    ")}}const FB={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:s,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Zi(r.shape,o,s,i,c,l,u,h,d);let w;if(m)w=DO({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){P(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Pi(b,x,v),t=UD({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=DO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Ns(r.shape,r.dtype,e),a=TF(p,t,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new _B(b,v,p);w=n.runWebGLProgram(e,[r],r.dtype)}}const k=DO({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const OB={kernelName:ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,m]=EF(d,p,r,o,s,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const DB={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:o,delimiter:s}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error("Input must be a vector, got shape: ".concat(o.shape));if(0!==s.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(s.shape));const i=n.readSync(o.dataId),c=n.readSync(s.dataId)[0],[l,u,h]=RF(i,c,r),d=u.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const MB={kernelName:xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:o}=t;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const s=n.readSync(o.dataId),i=AF(s,r);return n.makeTensorInfo(o.shape,"int32",i)}},zB=CO({opSnippet:"return tan(x);"}),LB={kernelName:wa,backendName:"webgl",kernelFunc:zB},PB=CO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),BB={kernelName:ka,backendName:"webgl",kernelFunc:PB};const WB={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:o,updates:s}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ph(0,o,r.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,o.dtype);const p=DO({inputs:{x:o},backend:n,attrs:{shape:[c,i]}}),f=DO({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),m=DO({inputs:{x:r},backend:n,attrs:{shape:d}}),g=new QP(c,i,p.shape.length,f.shape.length,u,d,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=DO({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class UB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let o=0;o<n.length;o++)n[o]=e[o]*t[o];this.outputShape=n,this.rank=n.length;const a=m_(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function VB(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>dr(e))):e,a=Ns(r.shape,r.dtype,t),s=FF(a,o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new UB(r.shape,o);return n.runWebGLProgram(s,[r],r.dtype)}const GB={kernelName:Sa,backendName:"webgl",kernelFunc:VB};class HB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class jB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function KB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function qB(e){let t=1;for(;t<e;)t*=2;return t}const XB={kernelName:Ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:s}=a,i=ve().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=ve().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([r])||u<i||o>c){const e=n.readSync(r.dataId),[t,a]=OF(e,l,r.dtype,o,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[r,Nz({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=U(l)/u,m=DO({inputs:{x:p},attrs:{shape:[f,u]},backend:n});d&&KB(n,p);const g=qB(o),y=qB(u);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,a)=>{const r=x(),o=new HB(a),s=[[u],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(o,r,"int32",s),KB(n,i)};for(let C=1;C<g;C*=2){const e=2*C;for(let t=C;t>=1;t/=2)v(e,t,[f,y])}for(let C=y;C>g;C/=2){const e=x(),t=new jB([f,C/2]),a=[[u],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),KB(n,r);const o=g/2,s=2*o;for(let n=o;n>=1;n/=2)v(s,n,b.shape)}let w=b;b=UD({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,o]}}),KB(n,w);let k=jz({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});KB(n,m);const S=l.slice(0,-1);S.push(o),w=b,b=DO({inputs:{x:b},attrs:{shape:S},backend:n}),KB(n,w);const I=k;return k=DO({inputs:{x:k},attrs:{shape:S},backend:n}),KB(n,I),[k,b]}};class YB{constructor(e,t,n,a,r,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const s="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(s," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const QB={kernelName:Ca,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new YB(h,d,s,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,o],"float32")}};const ZB={kernelName:Ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:o}=t;ZA(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=a.readSync(o.dataId),{outputValues:i,outputShape:c,indices:l}=MF(s,r,o.shape,o.dtype);return[a.makeTensorInfo(c,o.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const JB={kernelName:Ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r,i=s.shape.length,c=r.shape[o],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==o&&(l[u++]=s.shape[m]);const h=[],d=new Array(i).fill(0),p=s.shape.slice();p[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[o]=m;const e=UD({inputs:{x:s},backend:n,attrs:{begin:d,size:p}}),t=DO({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class $B{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,o=e.numSegments,s=o*Math.ceil(r/n);this.outputShape=[a,s];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(h,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(o,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(o,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const eW={kernelName:Ra,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:s}=a,i=r.shape.length,c=[];let l=0;const u=Cl([l],i);let h=r;null!=u&&(h=HO({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(h),l=Tl(1,i)[0]);const d=Cf(h.shape,l,s),p=U([h.shape[l]]),f=DO({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(f);const m=Wr(r.dtype),g=(e,t,a,r,o)=>{const s=e.shape[0],i=e.shape[1],l=If(i,o),u=new $B({windowSize:l,inSize:i,batchSize:s,numSegments:o},t),h=n.compileAndRun(u,[e,a],r);if(c.push(h),h.shape[1]===o)return h;const d=SP({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),p=VB({inputs:{x:d},backend:n,attrs:{reps:[i/l]}});c.push(d),c.push(p);return g(h,t,p,r,o)},y=DO({inputs:{x:g(f,"unsortedSegmentSum",o,m,s)},backend:n,attrs:{shape:d}});let b=y;if(null!=u){c.push(y);const e=Nl(u);b=HO({inputs:{x:b},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},tW=[XO,QO,JO,eD,aD,sD,iD,cD,fD,mD,yD,xD,wD,SD,CD,ED,RD,FD,OD,DD,LD,GD,HD,jD,KD,JD,tM,rM,yO,iM,mM,SM,EM,AM,_M,FM,OM,MM,LM,BM,jM,KM,qM,YM,JM,tz,nz,rz,sz,iz,lz,uz,dz,fz,gz,bz,wz,Iz,Tz,Rz,Fz,Dz,Lz,Wz,Uz,Gz,Kz,Xz,Qz,mO,Zz,dM,$z,tL,aL,vO,oL,iL,cL,uL,dL,fL,gL,bL,wL,SL,CL,TL,EL,RL,FL,OL,DL,ML,zL,PL,UL,GL,JL,OO,eP,nP,rP,sP,XD,cP,hP,dP,gP,bP,SO,xP,vP,wP,kP,IP,QD,KL,NP,EP,AP,MO,OP,MP,PP,WP,GP,jP,qP,YP,JP,eB,nB,rB,sB,cB,uB,dB,VD,ZL,fB,mB,gB,yB,bB,xB,vB,wB,IB,CB,EB,RB,AB,FB,OB,DB,MB,YL,GO,LB,BB,WB,GB,XB,QB,jO,ZB,JB,eW,uP];for(const n of tW)Ha(n);var nW=n(879);const aW=ve();aW.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),aW.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),aW.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",(()=>-1)),aW.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!0)),aW.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),aW.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),aW.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),aW.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",(()=>!0)),aW.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",(()=>!1)),aW.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",(()=>-1)),aW.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),aW.registerFlag("WEBGPU_PRINT_SHADER",(()=>"")),aW.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",(()=>!1));class rW{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}class oW{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n,a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const o=sW(e,t);return r?(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).length>0?(n=this.freeBuffers.get(o).pop(),this.numFreeBuffers--):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e)):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.usedBuffers.get(o).push(n),this.numUsedBuffers++,this.numBytesUsed+=e,n}releaseBuffer(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.freeBuffers.size)return;const n=e.size,a=sW(n,e.usage),r=this.usedBuffers.get(a),o=r.indexOf(e);if(o<0)throw new Error("Cannot find the buffer in buffer manager");r[o]=r[r.length-1],r.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function sW(e,t){return"".concat(e,"_").concat(t)}class iW{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,a){const r=e*t*lW(n),o=cW(e,t,n,a);if(this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.usedTextures.has(o)||this.usedTextures.set(o,[]),this.numBytesUsed+=r,this.numUsedTextures++,this.freeTextures.get(o).length>0){this.numFreeTextures--;const e=this.freeTextures.get(o).shift();return this.usedTextures.get(o).push(e),e}this.numBytesAllocated+=r;const s=this.device.createTexture({size:[e,t],format:n,usage:a});return this.usedTextures.get(o).push(s),s}releaseTexture(e){if(0===this.freeTextures.size)return;const t=e.width,n=e.height,a=e.format,r=cW(t,n,a,e.usage);this.freeTextures.has(r)||this.freeTextures.set(r,[]),this.freeTextures.get(r).push(e),this.numFreeTextures++,this.numUsedTextures--;const o=this.usedTextures.get(r),s=o.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");o.splice(s,1);const i=t*n*lW(a);this.numBytesUsed-=i}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedTextures.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function cW(e,t,n,a){return"".concat(e,"_").concat(t,"_").concat(n,"_").concat(a)}function lW(e){if("rgba8unorm"===e)return 16;throw new Error("".concat(e," is not supported!"))}function uW(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=e.length,a=e.map((e=>"".concat(t,".").concat("xyzwuv"[e]))),r=new Array(n-1);r[n-2]=a[n-1];for(let o=n-3;o>=0;--o)r[o]="(".concat(r[o+1]," * ").concat(a[o+1],")");return r}const hW=(e,t,n)=>"int32"===n?"atomicAdd(".concat(e,", bitcast<i32>(").concat(t,"));"):"\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (".concat(t,");\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(").concat(e,", oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }");var dW;!function(e){e[e.FROM_PIXELS=0]="FROM_PIXELS",e[e.DRAW=1]="DRAW"}(dW||(dW={}));const pW=(e,t,n,a,r)=>{const o=function(e,t,n){const a=[],r=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,a.push("\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ".concat(SW(n)?"  return i32(globalId.x);":"  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ".concat(r,"u +\n                localIndex);\n        "),"\n      }\n    ")),null!=n.pixelsOpType){const r=n.pixelsOpType===dW.FROM_PIXELS?"@group(0) @binding(0) var<storage, read_write> result: array<".concat(IW(t.dtype,n.outputComponent),">;"):"@group(0) @binding(1) var<storage, read> inBuf : array<".concat(IW(e[0].dtype,n.outputComponent),">;"),o=3===t.shape.length?"vec2<i32>":"i32";a.push("\n        struct Uniform {\n          outShapeStrides : ".concat(o,",\n          size            : i32,\n          numChannels     : i32,\n          alpha           : f32,\n        };\n\n        ").concat(r,"\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      "));const s=CW(n);return[xW,a.join("\n"),wW(t.shape),n.getUserCode(),bW(s,n)].join("\n")}let o,s,i="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach(((t,n)=>{const a=mW(e[n].shape.length);i+="".concat(t.charAt(0).toLowerCase()+t.slice(1),"Shape : ").concat(a,", "),o=e[n].shape.length-1,s=mW(o),i+="".concat(t.charAt(0).toLowerCase()+t.slice(1),"ShapeStrides: ").concat(s,", ")}));const c=mW(t.shape.length);i+="outShape : ".concat(c,", "),o=t.shape.length-1,s=mW(o),i+="\n         outShapeStrides: ".concat(s,", "),n.size&&(i+="size : i32, ");n.uniforms&&(i+=n.uniforms);i+="};",i=function(e){const t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,(e=>"@align(16) "+e));const n=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(n,((e,t,n)=>"vec".concat(t,", @align(16) ").concat(n)))}(i),a.push(i),n.atomic?a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<".concat(IW(t.dtype,n.outputComponent),">;\n    "));n.variableNames.forEach(((t,r)=>{a.push("\n      @group(0) @binding(".concat(1+r,") var<storage, read> ").concat(t,": array<").concat(n.variableComponents?IW(e[r].dtype,n.variableComponents[r]):IW(e[r].dtype,n.outputComponent),">;\n        "))})),""!==i&&a.push("\n      @group(0) @binding(".concat(1+n.variableNames.length,") var<uniform> uniforms: Uniforms;\n      "));const l=function(e,t){const{x:n,y:a=[],z:r=[]}=t,o=e.length,s=n.length+a.length+r.length;if(s!==o)return"";if(n.length===o){const e=mW(o);return"fn getOutputCoords() -> ".concat(e,"{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  ")}let i="";const c=[n,a,r];for(let d=0;d<c.length;d++){const e=c[d];if(0!==e.length)if(1===e.length)i+="let d".concat(e[0]," = i32(globalId[").concat(d,"]);");else{const t=uW(e,"uniforms.outShape");i+="var index".concat(d," = i32(globalId[").concat(d,"]);");for(let n=0;n<t.length;n++)i+="let d".concat(e[n]," = index").concat(d," / ").concat(t[n],";"),n===t.length-1?i+="let d".concat(e[n+1]," = ")+"index".concat(d," - d").concat(e[n]," * ").concat(t[n],";"):i+="index".concat(d," = index").concat(d," - d").concat(e[n]," * ").concat(t[n],";")}}const l=[];for(let d=0;d<s;d++)l.push("d".concat(d));const u=mW(s);let h="fn getOutputCoords() -> ".concat(u," {\n  ").concat(i,"\n");0===l.length?h+="return ".concat(u,"(0); }"):h+="return ".concat(u,"(").concat(l.join(","),"); }");return h}(t.shape,n.dispatchLayout),u=[xW,a.join("\n")+vW,wW(t.shape),l,kW(t.shape.length)];n.atomic||u.push(function(e,t,n){const a=e.length,r=IW(t,n);let o="fn setOutputAtIndex(flatIndex : i32, value : ".concat(fW(n),") {\n      result[flatIndex] = ").concat(r,"(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ").concat(fW(n,"i32"),") {\n      result[flatIndex] = ").concat(r,"(value);\n    }\n    ");if(a>=2){const e=["d0","d1","d2","d3","d4","d5"].slice(0,a),t=mW(a);o+="\n      fn setOutputAtCoords(".concat(e.map((e=>"".concat(e," : i32"))).join(", "),", value : ").concat(fW(n),") {\n        let flatIndex = getOutputIndexFromCoords(").concat(t,"(").concat(e.join(", "),"));\n        setOutputAtIndex(flatIndex").concat(1===n?"":" / ".concat(n),", value);\n      }\n      fn setOutputAtCoordsI32(").concat(e.map((e=>"".concat(e," : i32"))).join(", "),", value : ").concat(fW(n,"i32"),") {\n        let flatIndex = getOutputIndexFromCoords(").concat(t,"(").concat(e.join(", "),"));\n        setOutputAtIndexI32(flatIndex").concat(1===n?"":" / ".concat(n),", value);\n      }\n    ")}return o}(t.shape,t.dtype,n.outputComponent));n.variableNames.forEach(((t,n)=>{u.push("".concat(wW(e[n].shape,t)))}));const h=e.map(((e,a)=>function(e,t,n,a){let r=function(e,t){const n=e.name,a=e.shape.length,r=mW(a),o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,a),i=s.map((e=>"".concat(e," : i32"))).join(", ");if(a<1)return"\n      fn ".concat(o,"() -> ").concat(fW(t)," {\n        return ").concat(fW(t),"(").concat(n,"[0]);\n      }\n    ");const c="uniforms.".concat(n.charAt(0).toLowerCase()+n.slice(1),"Shape");let l="".concat(a,"D");0===a&&(l="1D");return"\n    fn ".concat(o,"(").concat(i,") -> ").concat(fW(t)," {\n      return ").concat(fW(t),"(").concat(n,"[getIndexFromCoords").concat(l,"(").concat(r,"(").concat(s.join(","),"),\n        ").concat(c,")").concat(1===t?"":" / ".concat(t),"]);\n    }\n   ")}(e,n);const o=e.shape;o.length<=t.length&&(r+=function(e,t,n,a){const r=e.name,o=r.charAt(0).toUpperCase()+r.slice(1),s="get"+o+"ByOutput",i=e.shape.length,c=t.length,l=mW(c);if(G(e.shape,t)&&a)return"\n    fn ".concat(s,"Index(globalIndex : i32) -> ").concat(fW(n)," {\n      return ").concat(fW(n),"(").concat(r,"[globalIndex]);\n    }\n\n    fn ").concat(s,"Coords(coords : ").concat(l,") -> ").concat(fW(n)," {\n      return ").concat(fW(n),"(").concat(r,"[").concat(c>1?"getOutputIndexFromCoords(coords)":"coords").concat(1===n?"":" / ".concat(n),"]);\n    }\n    ");const u=Js(e.shape,t),h=c-i;let d="";if(0===i)return"\n    fn ".concat(s,"Index(globalIndex : i32) -> ").concat(fW(n),"{\n      return get").concat(o,"();\n    }\n\n    fn ").concat(s,"Coords(coords : ").concat(l,") -> ").concat(fW(n),"{\n      return get").concat(o,"();\n    }\n  ");d=c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(gW(e+h)," = 0;"))).join("\n");let p="";if(c<2&&i>0)p="coords";else if(c>1){const t=mW(i),n=e.shape.map(((e,t)=>"coords.".concat(gW(t+h)))).join(", ");p="".concat(t,"(").concat(n,")")}else p="coords";const f="uniforms.".concat(r.charAt(0).toLowerCase()+r.slice(1),"Shape"),m="".concat(i,"D");return"\n  fn ".concat(s,"Index(globalIndex : i32) -> ").concat(fW(n)," {\n    var coords = getCoordsFromIndex(globalIndex);\n    ").concat(d,"\n    return ").concat(fW(n),"(").concat(r,"[getIndexFromCoords").concat(m,"(").concat(p,", ").concat(f,")").concat(1===n?"":" / ".concat(n),"]);\n  }\n\n  fn ").concat(s,"Coords(coordsIn : ").concat(l,") -> ").concat(fW(n)," {\n    var coords = coordsIn;\n    ").concat(d,"\n    return ").concat(fW(n),"(").concat(r,"[getIndexFromCoords").concat(m,"(").concat(p,", ").concat(f,")").concat(1===n?"":" / ".concat(n),"]);\n  }\n")}(e,t,n,a));return r}(e,t.shape,n.variableComponents?n.variableComponents[a]:n.outputComponent,n.dispatchLayout.x.length===t.shape.length))).join("\n");u.push(h),u.push(n.getUserCode());const d=CW(n);u.push(bW(d,n));const p=u.join("\n");return p}(n,{dtype:a.dtype,shape:a.shape},t),s=e.createShaderModule({code:o,label:t.constructor.name});let i=ve().get("WEBGPU_PRINT_SHADER");if(""!==i){i=i.toLowerCase();const e=i.split(",");("all"===i||e.some((e=>t.shaderKey.toLowerCase().includes(e))))&&(console.group(t.shaderKey),console.debug(o),console.groupEnd())}return r?e.createComputePipelineAsync({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},fW=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"f32";switch(e){case 1:return"".concat(t);case 2:return"vec2<".concat(t,">");case 3:return"vec3<".concat(t,">");case 4:return"vec4<".concat(t,">");default:throw new Error("".concat(e,"-component ").concat(t," is not supported."))}};function mW(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function gW(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error("Index ".concat(e," is not yet supported"))}function yW(){let e;switch(arguments.length){case 0:e="\n        fn main()\n      ";break;case 1:e="\n        fn main(".concat(arguments.length<=0?void 0:arguments[0]," : i32)\n      ");break;default:throw Error("Unreachable")}return e}function bW(e,t){let n;return n="\n     ".concat(function(e){return"\n  @compute @workgroup_size(".concat(e.workgroupSize[0],", ").concat(e.workgroupSize[1],", ").concat(e.workgroupSize[2],")\n")}(t),"\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ").concat(e?"main(getGlobalIndex());":"main();",";\n      }\n    "),n}const xW="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",vW="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function wW(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const n=e.length,a=""!==t?"get".concat(t.charAt(0).toUpperCase()+t.slice(1),"CoordsFromIndex"):"getCoordsFromIndex",r=""!==t?"".concat(t.charAt(0).toLowerCase()+t.slice(1),"ShapeStrides"):"outShapeStrides";if(n<=1)return"fn ".concat(a,"(index : i32) -> i32 { return index; }");const o=se(e),s=mW(n),i=[];for(let l=0;l<n;l++)i.push("d".concat(l));if(1===o.length)return"    fn ".concat(a,"(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.").concat(r,"; let d1 = index - d0 * uniforms.").concat(r,";\n      return vec2<i32>(d0, d1);\n    }");let c;return c="var index2 = index;"+o.map(((e,t)=>{const n="let ".concat(i[t]," = index2 / uniforms.").concat(r,".").concat(gW(t)),a=t===o.length-1?"let ".concat(i[t+1]," = index2 - ").concat(i[t]," * uniforms.").concat(r,".").concat(gW(t)):"index2 = index2 - ".concat(i[t]," * uniforms.").concat(r,".").concat(gW(t));return"".concat(n,"; ").concat(a,";")})).join(""),"\n    fn ".concat(a,"(index : i32) -> ").concat(s," {\n      ").concat(c,"\n      return ").concat(s,"(").concat(i.join(","),");\n    }\n  ")}function kW(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:P(!1,(()=>"Unsupported ".concat(e,"D shape")))}return t}function SW(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function IW(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if("float32"===e)return fW(t,"f32");if("int32"===e||"bool"===e)return fW(t,"i32");throw new Error("type ".concat(e," is not supported."))}function CW(e){return(!e.dispatchLayout.hasOwnProperty("y")||0===e.dispatchLayout.y.length)&&(!e.dispatchLayout.hasOwnProperty("z")||0===e.dispatchLayout.z.length)}const NW=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function TW(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1];const[r,o,s]=[Math.ceil(NW(e.x.map((e=>t[e])))/(n[0]*a[0])),e.y?Math.ceil(NW(e.y.map((e=>t[e])))/(n[1]*a[1])):1,e.z?Math.ceil(NW(e.z.map((e=>t[e])))/(n[2]*a[2])):1];return[r,o,s]}function EW(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[8,8,1];const n=NW(e.x.map((e=>t[e]))),a=NW(e.y.map((e=>t[e])));return n<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function RW(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[4,4,1];const n=NW(e.x.map((e=>t[e]))),a=NW(e.y.map((e=>t[e])));return n<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function AW(e){return{x:e.map(((e,t)=>t))}}function _W(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error("Unknown dtype ".concat(e))}function FW(){return!("undefined"===typeof globalThis||!globalThis.navigator||!globalThis.navigator.gpu)}function OW(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&P("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGPU backend."))}))}var DW;!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(DW||(DW={}));const MW=ve().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD");class zW extends _{nextDataId(){return zW.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!FW())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new rW(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new oW(this.device),this.textureManager=new iW(this.device),this.tensorMap=new A(this,go()),ve().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.tensorMap.has(e))return!0;const n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,!(n.refCount>0)&&(null!=n.complexTensorInfos&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);t&&t.resource&&(t.external||(t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource)),t.resource=null)}refCount(e){if(this.tensorMap.has(e)){return this.tensorMap.get(e).refCount}return 0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:n,shape:t,values:e,refCount:1}),a}move(e,t,n,a,r){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:n,values:t,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach((e=>{this.releaseResource(e),this.tensorMap.delete(e)})),this.uniformPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e))),this.stagingPendingDisposal.forEach((e=>this.bufferManager.releaseBuffer(e,!1))),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map(((t,n)=>{this.pipelineCache[t]=e[n]}))}async getBufferData(e){if(ve().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const a=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n),ve().getBool("WEBGPU_USE_PROFILE_TOOL")&&(P(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n,complexTensorInfos:a}=t;if(null!=n||"string"===t.dtype)return n;if("complex64"===t.dtype){const t=le(Kp(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)).buffer,"float32");return this.convertAndCacheOnCPU(e,t),t}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const r=["opaque","premultiplied"],o=t.resource,s=o.size;P(s%4===0,(()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4."));const i=s/4,c=new ArrayBuffer(s),l=256,u=256,h=r.map((e=>new OffscreenCanvas(l,u))),d=new OffscreenCanvas(l,u);this.endComputePassEncoder(),h.map(((e,t)=>{const n=e.getContext("webgpu");return n.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[t]}),n.getCurrentTexture()})).map(((e,t)=>{const n=(n,a,s)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:o,bytesPerRow:1024,offset:s},{texture:e},{width:n,height:a}),this.submitQueue();const i=d.getContext("2d",{willReadFrequently:!0});i.clearRect(0,0,n,a),i.drawImage(h[t],0,0);const l=i.getImageData(0,0,n,a).data,u=r[t],p=new Uint8ClampedArray(c,s,n*a*4);for(let e=0;e<p.length;e+=4)if("premultiplied"===u)p[e+3]=l[e+3];else{const t=l[e];p[e]=l[e+2],p[e+1]=l[e+1],p[e+2]=t}},a=Math.floor(i/65536);let s=l,p=u,f=0;for(let r=0;r<a;r++)n(s,p,f),f+=262144;const m=i%65536;p=Math.floor(m/l),p>0&&(n(s,p,f),f+=1024*p),s=m%l,s>0&&n(s,1,f)}));const p=le(c,t.dtype);return this.convertAndCacheOnCPU(e,p),p}async read(e){if(!this.tensorMap.has(e))throw new Error("Tensor ".concat(e," was not registered!"));const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return n;let a;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]);a=Kp(e[0],e[1])}else{a=le(await this.getBufferData(t.resource),t.dtype)}return this.convertAndCacheOnCPU(e,a),a}copyBuffer(e){const t=e.size,n=e.usage,a=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,t),this.submitQueue(),a}createTensorFromGPUData(e,t,n){let a=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");const r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});const o=this.tensorMap.get(r),s=_W(o.dtype)*U(o.shape);if(e.buffer.size<s)throw new Error("GPUBuffer size(".concat(e.buffer.size,") is smaller than tensor size(").concat(s,")!"));if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(a=this.copyBuffer(a)),o.resource=a,go().makeTensorFromDataId(r,t,n,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:n,dtype:a,shape:r,resource:o}=t;if("complex64"===a)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==o)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const s=o,i=s.size,c=s.usage,l=this.bufferManager.acquireBuffer(i,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,l,0,i),this.submitQueue();const u=this.makeTensorInfo(r,a),h=go().makeTensorFromTensorInfo(u);return this.tensorMap.get(u.dataId).resource=l,{tensorRef:h,buffer:l}}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>dr(e)));return Ns(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ns(e.shape,e.dtype,t)}async time(e){this.supportTimestampQuery||this.hasTimestampQueryWarned||(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=fr(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=fr(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},i=await Promise.all(r);return s.kernelMs=L(i),s.getExtraProfileInfo=()=>i.map(((e,t)=>({name:o[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,s}makeTensorInfo(e,t,n){"string"===t&&null!=n&&n.length>0&&te(n[0])&&(n=n.map((e=>hr(e))));return{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){const t=this.tensorMap.get(e);if(null!=t.resource)return;const n=_W(t.dtype)*U(t.shape);let a;const r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(a=this.bufferManager.acquireBuffer(n,r,!0),"unmapped"===a.mapState){const e=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),r=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,n),this.stagingPendingDisposal.push(e)}else{const e=a.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),a.unmap()}t.values=null}else a=this.bufferManager.acquireBuffer(n,r);t.resource=a}makeUniforms(e){let t=0,n=0;const a=[];let r=1;e.forEach((e=>{let o;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:o=4;break;case 2:o=8;break;case 3:case 4:case 5:case 6:o=16;break;default:P(!1,(()=>"Unsupported ".concat(e.data.length,"D shape")))}5!==n&&6!==n||(o=16),o>r&&(r=o),t=Math.ceil(t/o)*o,n=e.data.length,a.push(t),t+=4*e.data.length})),t=Math.ceil(t/r)*r;const o=new ArrayBuffer(t);e.forEach(((e,t)=>{const n=a[t];"int32"===e.type?new Int32Array(o,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(o,n,e.data.length).set(e.data):new Float32Array(o,n,e.data.length).set(e.data)}));const s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,o,0,t),this.uniformPendingDisposal.push(s),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,n,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),0===U(r.shape))return this.tensorMap.get(r.dataId).values=Z(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=((e,t)=>{const n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,r=t.dispatch;if(r.every((e=>e<=n)))return r;P(r[0]>n&&void 0===a.y&&void 0===a.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let o=Math.ceil(Math.sqrt(r[0]));return o>n?(o=Math.ceil(Math.cbrt(r[0])),P(o<=n,(()=>"Total dispatch size exceeds WebGPU maximum.")),[o,o,o]):[o,o,1]})(this.device,e);const o=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}}));e.shaderKey=function(e,t,n){let a=e.shaderKey;if(null!=e.pixelsOpType)return a;const r=[],o=[];t.forEach((e=>{r.push(e.shape),o.push(e.dtype)})),r.push(n.shape),o.push(n.dtype);const s=t.map((e=>Js(e.shape,n.shape))),i=t.map((e=>G(e.shape,n.shape))).join("_"),c=s.map((e=>e.join("_"))).join(";"),l=SW(e)?"flatDispatch":"";return a+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+r.map((e=>e.length)).join(",")+o.join(",")+e.variableNames.join(",")+c+i+l,a}(e,o,r);const s=ve().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=pW(this.device,e,o,r,s)),e.pipeline=this.pipelineCache[e.shaderKey],s||this.recordAndSubmit(e,r,t,a),r}recordAndSubmit(e,t,n,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],o=[];const s="int32";if(null==e.pixelsOpType){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),o=n.concat(t).map((e=>e.shape));const e="int32";o.map((t=>{r.push({type:e,data:t});const n=se(t);r.push({type:e,data:n})}))}else{const e=se(t.shape);r.push({type:s,data:e})}if(e.size){const t=U(e.outputShape);r.push({type:s,data:[e.outputComponent?t/e.outputComponent:t]})}a&&(r=[...r,...a]);const i=[this.tensorToBinding(t),...n.map((e=>this.tensorToBinding(e))),this.makeUniforms(r)];n.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(t.dataId);const c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:i.map(((e,t)=>({binding:t,resource:e})))}),l=null!=this.activeTimers;this.ensureCommandEncoderReady();const u={};l&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),u.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(u)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(u)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(l||ve().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===dW.DRAW)&&(this.endComputePassEncoder(),l?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:MW;return ve().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).resource&&U(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}var LW;zW.nextDataId=0,FW()&&ko("webgpu",(async()=>{const e={powerPreference:ve().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},a=[];t.features.has("timestamp-query")&&a.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&a.push(["bgra8unorm-storage"]),n.requiredFeatures=a;const r=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const o=await t.requestDevice(n),s=await t.requestAdapterInfo();return new zW(o,s)}),3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.FLOOR_DIV=7]="FLOOR_DIV",e[e.GREATER=8]="GREATER",e[e.GREATER_EQUAL=9]="GREATER_EQUAL",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"}(LW||(LW={}));const PW="let resultTemp = a + b;",BW="let resultTemp = atan2(a, b);",WW="let resultTemp = areal * breal - aimag * bimag;",UW="let resultTemp = areal * bimag + aimag * breal;",VW="let resultTemp = a / b;",GW="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",HW="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a == b);\n",jW="\n  let remainder =\n      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));\n  let quotient = (a - remainder) / b;\n  let resultTemp =\n      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));\n",KW="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a > b);\n",qW="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a >= b);\n",XW="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a < b);\n",YW="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a <= b);\n",QW="return f32(a >= 1.0 && b >= 1.0);",ZW="return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));",JW="return f32(a >= 1.0 || b >= 1.0);",$W="return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));",eU="let resultTemp = max(a, b);",tU="let resultTemp = min(a, b);",nU="\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n",aU="\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n",rU="let resultTemp = a * b;",oU="\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n",sU="\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n",iU="\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n",cU="\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n",lU="if (a < 0.0) { return b * a; }  return a;",uU="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",hU="let resultTemp = (a - b) * (a - b);",dU="let resultTemp = a - b;";function pU(e,t){let n;do{switch(e){case LW.ATAN2:n=BW;break;case LW.MAX:n=eU;break;case LW.MIN:n=tU;break;case LW.MOD:n=t?aU:nU;break;case LW.NOT_EQUAL:n=t?sU:oU;break;case LW.POW:n=t?cU:iU;break;default:continue}let a,r,o;return t?(a="isnanVec4",r="vec4<f32>",o="vec4<bool>"):(a="isnan",r="f32",o="bool"),"\n      let aIsNaN = ".concat(a,"(a);\n      let aPostLegalization = select(a, ").concat(r,"(42), aIsNaN);\n      let bIsNaN = ").concat(a,"(b);\n      let bPostLegalization = select(b, ").concat(r,"(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ").concat(n,"\n        return select(\n            resultTemp, ").concat(r,"(valueForNaN),\n            ").concat(o,"(isNaN) | aIsNaN | bIsNaN);\n      }\n    ")}while(0);switch(e){case LW.ADD:n=PW;break;case LW.COMPLEX_MULTIPLY_IMAG:n=UW;break;case LW.COMPLEX_MULTIPLY_REAL:n=WW;break;case LW.DIV:n=VW;break;case LW.ELU_DER:n=GW;break;case LW.EQUAL:n=HW;break;case LW.FLOOR_DIV:n=jW;break;case LW.GREATER:n=KW;break;case LW.GREATER_EQUAL:n=qW;break;case LW.LESS:n=XW;break;case LW.LESS_EQUAL:n=YW;break;case LW.LOGICAL_AND:return t?ZW:QW;case LW.LOGICAL_OR:return t?$W:JW;case LW.MUL:n=rU;break;case LW.PRELU:return t?uU:lU;case LW.SQUARED_DIFFERENCE:n=hU;break;case LW.SUB:n=dU}return"\n    ".concat(n,"\n    return resultTemp;\n  ")}var fU;!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(fU||(fU={}));const mU="return abs(a);",gU="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n",yU="\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n",bU="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n",xU="return asinh(a);",vU="\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n",wU="\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n",kU="return ceil(a);",SU="return cos(a);",IU="\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n",CU="return exp(a) - 1.0;",NU="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",TU="\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n",EU='\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = '.concat(Wp,";\n  let a1 = ").concat(Up,";\n  let a2 = ").concat(Vp,";\n  let a3 = ").concat(Gp,";\n  let a4 = ").concat(Hp,";\n  let a5 = ").concat(jp,";\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n"),RU="return exp(a);",AU="return floor(a);",_U="return f32(!isnan(a) && !isinf(a));",FU="return f32(isinf(a));",OU="return f32(isnan(a));",DU="return a;",MU="if (a < 0.0) { return uniforms.NAN; }\n  return log(a);",zU="\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n",LU="return f32(!(a >= 1.0));",PU="return -a;",BU="if (a < 0.0) { return uniforms.alpha * a; } return a;",WU="\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n",UU="return 1.0 / a;",VU="return select(a, 0.0, a < 0.0);",GU="return clamp(a, 0.0, 6.0);",HU="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",jU="\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n",KU="return round(a);",qU="return inverseSqrt(a);",XU="\n  if (a >= 0.0) {\n    return ".concat(Bp," * a;\n  } else {\n    return ").concat(Pp," * (exp(a) - 1.0);\n  }\n"),YU="return 1.0 / (1.0 + exp(-1.0 * a));",QU="return sign(a);",ZU="return sin(a);",JU="\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n",$U="\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n",eV="return sqrt(a);",tV="return a * a;",nV="\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n",aV="return tan(a);",rV="\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n",oV="return f32(i32((a)));";function sV(e,t){switch(e){case fU.ABS:return mU;case fU.ACOS:return gU;case fU.ACOSH:return yU;case fU.ASIN:return bU;case fU.ASINH:return xU;case fU.ATAN:return vU;case fU.ATANH:return wU;case fU.COS:return SU;case fU.COSH:return IU;case fU.CEIL:return kU;case fU.ELU:return t?TU:NU;case fU.ERF:return EU;case fU.EXP:return RU;case fU.EXPM1:return CU;case fU.FLOOR:return AU;case fU.IS_FINITE:return _U;case fU.IS_INF:return FU;case fU.IS_NAN:return OU;case fU.LINEAR:return DU;case fU.LOG:return MU;case fU.LOG1P:return zU;case fU.LOGICAL_NOT:return LU;case fU.NEG:return PU;case fU.LEAKYRELU:return t?WU:BU;case fU.RECIPROCAL:return UU;case fU.RELU:return t?jU:VU;case fU.RELU6:return t?HU:GU;case fU.ROUND:return KU;case fU.RSQRT:return qU;case fU.SELU:return XU;case fU.SIGMOID:return YU;case fU.SIGN:return QU;case fU.SIN:return ZU;case fU.SINH:return JU;case fU.SOFTPLUS:return $U;case fU.SQRT:return eV;case fU.SQUARE:return tV;case fU.STEP:return nV;case fU.TAN:return aV;case fU.TANH:return rV;case fU.TO_INT:return oV;default:throw new Error("BinaryType ".concat(e," is not implemented!"))}}function iV(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3;if(null===e)return"";let r="";if("linear"===e)r=sV(fU.LINEAR);else if("relu"===e)r=sV(fU.RELU,n);else if("elu"===e)r=sV(fU.ELU,n);else if("relu6"===e)r=sV(fU.RELU6,n);else if("prelu"===e)r=pU(LW.PRELU,n);else if("sigmoid"===e)r=sV(fU.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error("Activation ".concat(e," has not been implemented for the WebGPU backend."));r=sV(fU.LEAKYRELU,n)}const o=fW(n?4:1);let s="";return s=t?"\n      fn activation(a : ".concat(o,", coords : vec").concat(a,"<i32>) -> ").concat(o," {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ").concat(r,"\n      }"):"\n      fn activation(a : ".concat(o,", coords : vec").concat(a,"<i32>) -> ").concat(o," {\n        ").concat(r,"\n      }"),s}function cV(e,t){return"\n      ".concat(e?"value = value + getBiasByOutputCoords(coords);":"","\n      ").concat(t?"value = activation(value, coords);":"","\n      ")}function lV(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;P(e&&1===r||!e,(()=>"transposeA ".concat(e," is not compatible with component size ").concat(r)));const o="\n      ".concat(e?"value = getA(batch, col, row);":"value = getA(batch, row, col);","\n\n    "),s=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return"\n  fn mm_readA(batch: i32, row: i32, col: i32) -> ".concat(fW(r)," {\n    var value = ").concat(fW(r),"(0.0);\n    ").concat(n&&a?o:"\n    ".concat(e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])","\n    {\n      ").concat(o,"\n    }\n    "),"\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, col: i32) -> ").concat(fW(r)," {\n    var value = ").concat(fW(r),"(0.0);\n    ").concat(s,"\n    return value;\n  }\n  ")}function uV(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>7&&void 0!==arguments[7]?arguments[7]:1;return"\n  ".concat(lV(n,a,r,o,arguments.length>6&&void 0!==arguments[6]&&arguments[6],s),"\n  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ").concat(fW(s),") {\n    ").concat(r&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)","\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ").concat(cV(e,t),"\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  ")}function hV(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6];const i=t[1]*e[1],c=t[0]*e[0],l=n?i:a,u=n?a:i,h=l/t[0],d=a/t[1],p=e[1],f=e[0];return P((n&&4===h&&4===e[1]||!n&&(3===h||4===h))&&l%t[0]===0&&a%t[1]===0&&4===e[0],(()=>"If transposeA ".concat(n," is true, innerElementSize ").concat(h," and workPerThread[1] ").concat(e[1]," must be 4.\n          Otherwise, innerElementSize ").concat(h," must be 3 or 4.\n      tileAWidth ").concat(l," must be divisible by workgroupSize[0]").concat(t[0],". tileInner ").concat(a," must be divisible by workgroupSize[1] ").concat(t[1],". colPerThread ").concat(e[0]," must be 4."))),"\n  var<workgroup> mm_Asub : array<array<vec".concat(h,"<f32>, ").concat(l/h,">, ").concat(u,">;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ").concat(c/e[0],">, ").concat(a,">;\n\n  ").concat(yW()," {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ").concat(p,";\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ").concat(p,";\n    let globalCol = i32(globalId.x) * ").concat(f,";\n    let batch = ").concat(r?"0":"i32(globalId.z)",";\n    let batchA = ").concat(r||!s?"batch":"batch % uniforms.aShape[0]",";\n    let batchB = ").concat(r||!s?"batch":"batch % uniforms.bShape[0]",";\n    let globalRowStart = i32(workgroupId.y) * ").concat(i,";\n\n    let numTiles = ").concat(r?"".concat(Math.ceil(o/a)):"(uniforms.dimInner - 1) / ".concat(a," + 1"),";\n    var kStart = ").concat(r?"i32(globalId.z) * ".concat(o):"0",";\n\n    var acc: array<vec4<f32>, ").concat(p,">;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ").concat(d,";\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ").concat(p,"; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ").concat(((e,t)=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol * ".concat(t,");\n        "):"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart + inputCol * ".concat(t,");\n        "))(n,h),"\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ").concat(d,"; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ").concat(a,";\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        ").concat(((e,t,n,a)=>{if(e)return"\n      for (var k = 0; k < ".concat(a,"; k++) {\n        let BCached0 = mm_Bsub[k][tileCol];\n        let ACached0 = mm_Asub[k][localRow];\n        for (var i = 0; i < ").concat(n,"; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n        }\n      }");{let e="",r="";for(let n=0;n<t;n++)e+="let BCached".concat(n," = mm_Bsub[k * ").concat(t," + ").concat(n,"][tileCol];"),r+="acc[i] = fma(BCached".concat(n,", vec4<f32>(ACached[").concat(n,"]), acc[i]);");return"\n      for (var k = 0; k < ".concat(a/t,"; k++) {\n        ").concat(e,"\n        for (var i = 0; i < ").concat(n,"; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          ").concat(r,"\n        }\n      }")}})(n,h,p,a),"\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ").concat(p,"; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }")}const dV=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function pV(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];const c=e[1]*t[1],l=e[0]*t[0],u=n?c:a,h=n?a:c;P(h%t[1]===0&&u%t[0]===0&&a%t[1]===0,(()=>"tileAHight ".concat(h," must be divisible by workgroupSize[1]").concat(t[1],", tileAWidth ").concat(u," must be divisible by workgroupSize[0]").concat(t[0],", tileInner ").concat(a," must be divisible by workgroupSize[1]").concat(t[1])));const d=h/t[1],p=u/t[0],f=a/t[1],m=e[1],g=e[0],y=s?"\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ".concat(c,";\n      let globalColStart = i32(workgroupId.x) * ").concat(l,";\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(h,"; inputRow = inputRow + ").concat(t[1],") {\n          for (var inputCol = localCol; inputCol < ").concat(u,"; inputCol = inputCol + ").concat(t[0],") {\n            ").concat(dV(n),"\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(a,"; inputRow = inputRow + ").concat(t[1],") {\n              for (var inputCol = localCol; inputCol < ").concat(l,"; inputCol = inputCol + ").concat(t[0],") {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ").concat(a,";\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ").concat(g,">;\n        for (var k = 0; k < ").concat(a,"; k++) {\n          for (var inner = 0; inner < ").concat(g,"; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ").concat(t[0],"];\n          }\n          for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n            let ACached = ").concat(n?"mm_Asub[k][localRow + innerRow * ".concat(t[1],"];"):"mm_Asub[localRow + innerRow * ".concat(t[1],"][k];"),"\n            for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ").concat(t[1],";\n        for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ").concat(t[0],";\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      "):"\n  let tileRow = i32(localId.y) * ".concat(m,";\n  let tileCol = i32(localId.x) * ").concat(g,";\n\n  let globalRow = i32(globalId.y) * ").concat(m,";\n  let globalCol = i32(globalId.x) * ").concat(g,";\n  let globalRowStart = i32(workgroupId.y) * ").concat(c,";\n\n  let tileRowA = i32(localId.y) * ").concat(d,";\n  let tileColA = i32(localId.x) * ").concat(p,";\n  let tileRowB = i32(localId.y) * ").concat(f,";\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ").concat(d,"; innerRow++) {\n      for (var innerCol = 0; innerCol < ").concat(p,"; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ").concat(dV(n),"\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ").concat(f,"; innerRow++) {\n      for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ").concat(a,";\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ").concat(g,">;\n    for (var k = 0; k < ").concat(a,"; k++) {\n      for (var inner = 0; inner < ").concat(g,"; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n        ").concat((e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n),"\n        for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n    for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  ");return"\n    var<workgroup> mm_Asub : array<array<f32, ".concat(u,">, ").concat(h,">;\n    var<workgroup> mm_Bsub : array<array<f32, ").concat(l,">, ").concat(a,">;\n\n    ").concat(yW()," {\n      let batch = ").concat(r?"0":"i32(globalId.z)",";\n      let batchA = ").concat(r||!i?"batch":"batch % uniforms.aShape[0]",";\n      let batchB = ").concat(r||!i?"batch":"batch % uniforms.bShape[0]",";\n      let numTiles = ").concat(r?"".concat(Math.ceil(o/a)):"(uniforms.dimInner - 1) / ".concat(a," + 1"),";\n      var kStart = ").concat(r?"i32(globalId.z) * ".concat(o):"0",";\n\n      var acc : array<array<f32, ").concat(g,">, ").concat(m,">;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ").concat(m,"; innerRow++) {\n        for (var innerCol = 0; innerCol < ").concat(g,"; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ").concat(y,"\n    }\n  ")}class fV{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const c=n?e[1]:e[2];if(this.isVec4=(c%4===0&&!n||t[1]%4===0&&n)&&t[2]%4===0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const e=function(e,t,n){const a=[8,8,1],r=[4,4,1];return arguments.length>3&&void 0!==arguments[3]&&arguments[3]||(e<=8&&(r[1]=1),t<=16&&n<=16&&(a[0]=4)),{workgroupSize:a,elementsPerThread:r}}(t[1],c,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const l=null!=r,u=null!=s;l&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=i,this.transposeA=n,this.transposeB=a,this.addBias=l,this.activation=o,this.hasPreluActivationWeights=u,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey="matMulPacked_".concat(this.elementsPerThread,"_").concat(n,"_").concat(a,"_").concat(this.activation,"_").concat(this.fitAOuter,"_").concat(this.fitBOuter,"_").concat(this.fitInner,"_").concat(this.isVec4,"_").concat(this.isVectorA,"_").concat(this.sequentialAccessByThreads)}getShapeFit(e,t,n){const a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=r;return[e%a===0,t%r===0,n%this.tileInner===0]}getUserCode(){const e="\n      ".concat(iV(this.activation,this.hasPreluActivationWeights,this.isVec4),"\n      ").concat(uV(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1),"\n      ").concat(this.isVec4?hV(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];P(1===e[1]&&1===e[2],(()=>"A linear work group size is required. But got ".concat(e,".")));const n=4*e[0];return"\n    var<workgroup> mm_Asub : array<vec4<f32>, ".concat(e[0],">;\n\n    ").concat(yW()," {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ").concat(n," + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ").concat(n," + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(").concat((e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t),");\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ").concat(n/4,"; k++) {\n          let rowB = t * ").concat(n," + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  ")}(this.workgroupSize,this.transposeA):pV(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0),"\n    ");return e}}class mV{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize);const s=null!=a,i=null!=o;s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=s,this.activation=r,this.hasPreluActivationWeights=i,this.shaderKey="matMulReduce_".concat(this.activation,"_").concat(t,"_").concat(n)}getUserCode(){var e;return"\n      ".concat(iV(this.activation,this.hasPreluActivationWeights),"\n      ").concat(uV(this.addBias,this.activation,this.transposeA,this.transposeB),"\n      ").concat((e=this.workgroupSize[0],"\n    var<workgroup> sumValues : array<f32, ".concat(e,">;\n    ").concat(yW()," {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ").concat(e,") {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ").concat(e/2,"u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  ")),"\n    ")}}class gV{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];const c=null!=o;c&&this.variableNames.push("bias");const l=null!=i;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=c,this.activation=s,this.hasPreluActivationWeights=l,this.shaderKey="matMulSmallOutputSize_".concat(this.activation,"_").concat(a,"_").concat(r)}getUserCode(){return"\n      ".concat(iV(this.activation,this.hasPreluActivationWeights),"\n      ").concat(uV(this.addBias,this.activation,this.transposeA,this.transposeB),"\n      ").concat(function(e){const t=e[1],n=e[0],a=t>n?t:n;return"\n  var<workgroup> mm_Asub : array<array<f32, ".concat(a,">, ").concat(t,">;\n  var<workgroup> mm_Bsub : array<array<f32, ").concat(n,">, ").concat(a,">;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ").concat(yW()," {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ").concat(a," + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ").concat(a,";\n    globalRowB = globalRowB + ").concat(a,";\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ").concat(a,";\n      globalRowB = globalRowB + ").concat(a,";\n\n      for (var k = 0; k < ").concat(a,"; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  ")}(this.workgroupSize),"\n    ")}}class yV{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,P(1===e[0],(()=>"MatMulSplitKProgram only supports batch = 1.")),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const r=(n&&this.outputShape[1]%4===0||!n&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=TW(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=a,this.shaderKey="matMulSplitK_".concat(n,"_").concat(a,"_").concat(this.elementsPerThread,"_").concat(this.outputComponent)}getUserCode(){const e=this.outputComponent;return"\n      ".concat(lV(!1,this.transposeB,!1,!1,!1,e),"\n      fn mm_write(batch: i32, row : i32, col : i32, value : ").concat(fW(e),") {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ").concat(e,"; i = i + 1) {\n            ").concat(hW("&result[flatIndex + i]","".concat(e>1?"value[i]":"value"),"float32"),"\n          }\n        }\n      }\n      ").concat(4===e?hV(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):pV(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner),"\n    ")}}class bV{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=a,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey="biasActivation_".concat(n)}getUserCode(){return"\n    ".concat(iV(this.activation,this.hasPreluActivationWeights),"\n    ").concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ").concat(cV(this.addBias,this.activation),"\n        setOutputAtIndex(index, value);\n      }\n    }\n    ")}}class xV{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  ")}}function vV(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:o}=n;if(o=o||ae(r),"string"===o){const e=J(o,U(a));return e.fill(r),t.makeTensorInfo(a,o,e)}{const e=new xV(a),n=[{type:"float32",data:[r]}];return t.runWebGPUProgram(e,[],o,n)}}const wV={kernelName:_t,backendName:"webgpu",kernelFunc:vV};function kV(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,o=U(a.shape),s=X(r,o),i=U(s);return P(o===i,(()=>"The new shape (".concat(s,") has ").concat(i," elements and the old ")+"shape (".concat(a.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}const SV={kernelName:Ln,backendName:"webgpu",kernelFunc:kV};function IV(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,h=n.shape.length,d=a?t.shape[u-2]:t.shape[u-1],p=r?n.shape[h-1]:n.shape[h-2],f=a?t.shape[u-1]:t.shape[u-2],m=r?n.shape[h-2]:n.shape[h-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=U(g),x=U(y),v=ei(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);P(d===p,(()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,d,f]:[b,f,d],k=r?[x,m,p]:[x,p,m],S=kV({inputs:{x:t},backend:o,attrs:{shape:w}}),I=kV({inputs:{x:n},backend:o,attrs:{shape:k}}),C=[S,I],N=Math.max(b,x),T=[S,I],E=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[d]}];let R,A;const _=[N,f,m];let F=ve().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(F<0){const e=ve().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:o.thresholdToIncreaseWorkgroups,n=N*Math.ceil(f/32)*Math.ceil(m/32);F=n<=t||f<=8&&n<=2*t?N*f*m<=128?DW.MatMulReduceProgram:1===N&&p>=2e3?DW.MatMulSplitKProgram:DW.MatMulSmallOutputSizeProgram:DW.MatMulPackedProgram}switch(F){case DW.MatMulReduceProgram:R=new mV(_,a,r,s,l,i);break;case DW.MatMulSplitKProgram:if(A=vV({backend:o,attrs:{shape:_,value:0,dtype:t.dtype}}),R=new yV(_,p,a,r),s||l){A=o.runWebGPUProgram(R,T,t.dtype,E,A);const e=new bV(A.shape,s,l,i);let n=null;const a=[A];s&&a.push(s),i&&a.push(i),"leakyrelu"===l&&(n=[{type:"float32",data:[c]}],e.uniforms+=" alpha : f32,");const r=o.runWebGPUProgram(e,a,A.dtype,n);C.push(A);const u=kV({inputs:{x:r},backend:o,attrs:{shape:v}});C.push(r);for(const t of C)o.disposeData(t.dataId);return u}break;case DW.MatMulSmallOutputSizeProgram:R=new gV(w,k,_,a,r,s,l,i);break;case DW.MatMulPackedProgram:const e=o.adapterInfo.isIntel();R=new fV(w,_,a,r,s,l,i,e);break;default:throw new Error("Unsupported MatMulProgramType ".concat(F,"."))}s&&T.push(s),i&&T.push(i),"leakyrelu"===l&&(E.push({type:"float32",data:[c]}),R.uniforms+=" alpha : f32,"),A=o.runWebGPUProgram(R,T,t.dtype,E,A);const O=kV({inputs:{x:A},backend:o,attrs:{shape:v}});C.push(A);for(const D of C)o.disposeData(D.dataId);return O}const CV={kernelName:Da,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:h}=a;return IV({a:r,b:o,transposeA:c,transposeB:l,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:h,activation:u})}};class NV{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=ei(t,n),this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="binaryOpComplex_".concat(e),this.op=e}getUserCode(){const e=pU(this.op,!1);return"\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ".concat(e,"\n      }\n\n      ").concat(yW("index")," {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    ")}}class TV{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=ei(t,n),this.dispatchLayout=AW(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey="binary_".concat(e,"_").concat(this.lastDimensionSize),this.type="shared",this.workgroupSize=[256,1,1];else{const a=t.length>0&&t[t.length-1]%4===0,r=n.length>0&&n[n.length-1]%4===0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&(V(n)||1===n[n.length-1])||r&&(V(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey="binary_".concat(e,"_").concat(this.variableComponents),this.workgroupSize=[128,1,1]}this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=4===this.outputComponent?"vec4<f32>":"f32",n="\n    fn binaryOperation(a : ".concat(t,", b : ").concat(t,") -> ").concat(t," {\n      ").concat(pU(this.op,4===this.outputComponent),"\n    };\n    ");if("shared"===this.type){const t=this.lastDimensionSize>1?"coords[".concat(this.outputShape.length-1,"]"):"0",a=this.useSharedMemoryWithB?"let a = getAByOutputIndex(index);\n          let b = sharedBuf[".concat(t,"];"):"let a = sharedBuf[".concat(t,"];\n          let b = getBByOutputIndex(index);");e="\n        ".concat(n,"\n        var<workgroup> sharedBuf : array<f32, ").concat(this.lastDimensionSize,">;\n        ").concat(yW("index")," {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ").concat(this.lastDimensionSize,") {\n            sharedBuf[localIndex] = f32(").concat(this.useSharedMemoryWithB?"B":"A","[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ").concat(a,"\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        ")}else e="\n       ".concat(n,"\n       ").concat(yW("index")," {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ").concat(this.outputComponent,");\n           let a = ").concat(t,"(getAByOutputCoords(coords));\n           let b = ").concat(t,"(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       ");return e}}function EV(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const RV={kernelName:Wt,backendName:"webgpu",kernelFunc:EV};function AV(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,o=n.makeTensorInfo(a.shape,"complex64"),s=n.tensorMap.get(o.dataId),i=EV({inputs:{x:a},backend:n}),c=EV({inputs:{x:r},backend:n});return s.complexTensorInfos={real:i,imag:c},o}const _V={kernelName:Ze,backendName:"webgpu",kernelFunc:AV};class FV{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";this.variableNames=["A"],this.size=!0;this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey="unary_".concat(t)}getUserCode(){return"\n      fn unaryOperation(a : f32) -> f32 {\n        ".concat(sV(this.op,!1),"\n      }\n      ").concat(yW("index")," {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      ")}}function OV(e){let{opType:t,cpuKernelImpl:n,dtype:a}=e;return e=>{let{inputs:r,backend:o}=e;const{x:s}=r,i=o,c=a||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=n){const e=i.tensorMap.get(s.dataId),t=n(e.values,c);return i.makeTensorInfo(s.shape,c,t)}const l=new FV(s.shape,t);return i.runWebGPUProgram(l,[s],c)}}function DV(e){let{opType:t,cpuKernelImpl:n,supportsComplex:a=!1,dtype:r}=e;return e=>{let{inputs:o,backend:s}=e;const{a:i,b:c}=o,l=s;if(a&&"complex64"===i.dtype){const e=l.tensorMap.get(i.dataId),n=l.tensorMap.get(c.dataId);let a,r;if(t!==LW.MUL)[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:i.shape},o={dataId:a.dataId,dtype:a.dtype,shape:c.shape},s=new TV(t,i.shape,c.shape);return l.runWebGPUProgram(s,[r,o],Br(n.dtype,a.dtype))}));else{const t=new NV(LW.COMPLEX_MULTIPLY_REAL,i.shape,c.shape),o=new NV(LW.COMPLEX_MULTIPLY_IMAG,i.shape,c.shape),s=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:i.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:c.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:c.shape}];a=l.runWebGPUProgram(t,s,"float32"),r=l.runWebGPUProgram(o,s,"float32")}const o=AV({inputs:{real:a,imag:r},backend:l});return l.disposeData(a.dataId),l.disposeData(r.dataId),o}const u=r||Br(i.dtype,c.dtype);if(("string"===i.dtype||"string"===c.dtype||l.shouldExecuteOnCPU([i,c]))&&null!=n){const e=l.tensorMap.get(i.dataId).values,t=l.tensorMap.get(c.dataId).values,a="string"===i.dtype?Tf(e):e,r="string"===i.dtype?Tf(t):t,[o,s]=n(i.shape,c.shape,a,r,u);return l.makeTensorInfo(s,u,o)}const h=new TV(t,i.shape,c.shape);return l.runWebGPUProgram(h,[i,c],u)}}const{mx:MV,ct:zV,YG:LV,hH:PV,z3:BV,sG:WV,uM:UV,vS:VV,C1:GV,qB:HV,GG:jV,lg:KV,rq:qV,cu:XV,WR:YV,px:QV,jC:ZV,He:JV,hE:$V,BF:eG,Dk:tG,cl:nG,_B:aG,qy:rG,Zy:oG,bu:sG,dH:iG,HS:cG,eW:lG,GK:uG,dl:hG,Dw:dG,xT:pG,_X:fG,wz:mG}=N,gG=OV({opType:fU.ABS,cpuKernelImpl:iG}),yG={kernelName:Ce,backendName:"webgpu",kernelFunc:gG},bG=OV({opType:fU.ACOS}),xG={kernelName:Ne,backendName:"webgpu",kernelFunc:bG},vG=OV({opType:fU.ACOSH}),wG={kernelName:Te,backendName:"webgpu",kernelFunc:vG},kG=DV({opType:LW.ADD,cpuKernelImpl:MV,supportsComplex:!0}),SG={kernelName:Ee,backendName:"webgpu",kernelFunc:kG};class IG{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>"T".concat(t))),this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push("let v".concat(t," = get").concat(t,"ByOutputCoords(coords);"))}));const t=this.variableNames.map((e=>"v".concat(e))).join(" + ");return"\n      ".concat(yW("index")," {\n        for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ").concat(e.join("\n        "),"\n            setOutputAtIndex(flatIndex, ").concat(t,");\n          }\n        }\n      }\n    ")}}const CG={kernelName:Re,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;if(1===a.length)return EV({inputs:{x:a[0]},backend:n});const r=a.map((e=>e.dtype)).reduce(((e,t)=>Br(e,t))),o=a.map((e=>e.shape)),s=new IG(o);return n.runWebGPUProgram(s,a,r)}};class NG{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){P(this.workgroupSize[0]===this.workgroupSize[1],(()=>"Must be a square tile, current tile shape is ".concat(this.workgroupSize[0]," x ").concat(this.workgroupSize[1])));const e=this.workgroupSize[0];return"\n      var<workgroup> tile : array<array<f32, ".concat(this.workgroupSize[0]+1,">, ").concat(this.workgroupSize[0],">;\n      ").concat(yW()," {\n        var x = i32(workgroupId.x) * ").concat(e," + i32(localId.x);\n        var y = i32(workgroupId.y) * ").concat(e," + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ").concat(e," + i32(localId.x);\n        y = i32(workgroupId.x) * ").concat(e," + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    ")}}class TG{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey="transpose_".concat(t)}getUserCode(){const e=mW(this.outputShape.length),t=EG(this.newDim);return"\n      ".concat(yW("index")," {\n        for(var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords").concat(this.outputShape.length,"D(\n              ").concat(e,"(").concat(t,"), uniforms.aShape)]);\n          }\n        }\n      }\n    ")}}function EG(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=new Array(t);for(let a=0;a<e.length;a++)n[e[a]]="coords.".concat(gW(a));return n.join()}function RG(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:o}=a,s=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[o[u]];if(n.shouldExecuteOnCPU([r])){const e=s.tensorMap.get(r.dataId).values,t=fG(e,r.shape,r.dtype,o,c);return n.makeTensorInfo(c,r.dtype,t)}if(2===r.shape.length&&G(o,[1,0])){const e=new NG(r.shape,o);return s.runWebGPUProgram(e,[r],r.dtype)}const l=new TG(r.shape,o);return s.runWebGPUProgram(l,[r],r.dtype)}const AG={kernelName:Na,backendName:"webgpu",kernelFunc:RG};class _G{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[a]=kl(this.inputShape,[1]);this.outputShape=0===a.length?[1]:a,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey="reduce_".concat(t)}getUserCode(){let e="",t="0.0";const n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e="\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ".concat("min"===this.reduceType?"<":">"," bestValue)\n           {  bestValue = candidate; }"),t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const a="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);",r="\n         var<workgroup> xBestValues : array<f32, ".concat(n,">;\n       ");return"\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       ".concat(r,"\n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ").concat(1===this.outputShape.length?"outputCoords":"outputCoords[0]"," * uniforms.reduceSize;\n          return offset;\n       }\n       ").concat(yW("index")," {\n         let outputIndex = index / ").concat(n,";\n         let offset = getOffset(outputIndex);\n         var bestValue = ").concat(t,";\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ").concat(n,"u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ").concat(n,") {\n           let candidate = f32(x[offset + k]);\n           ").concat(e,"\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ").concat(n,"u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ").concat(e,"\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ").concat(a,"\n        }\n       }\n     ")}}const FG={mean:"float32",all:"bool",any:"bool"};function OG(e,t,n,a,r){const o=e.shape.length,s=[],i=Y(t,e.shape);let c=i;const l=Cl(c,o);let u=e;null!=l&&(u=RG({inputs:{x:e},attrs:{perm:l},backend:r}),c=Tl(c.length,o),s.push(u)),Il(a,c,o);const[h,d]=kl(u.shape,c);let p,f=h;if(n&&(f=Sl(h,i)),"max"!==a&&"prod"!==a||!r.shouldExecuteOnCPU([u])){const t=U(d),n={windowSize:t,inSize:t,batchSize:U(u.shape)/t,outSize:1},o=FG[a]||Wr(e.dtype),i=[{type:"int32",data:[t]}],c=new _G(n,a,r.device.limits.maxComputeWorkgroupSizeX),l=r.runWebGPUProgram(c,[u],o,i);s.push(l),p=kV({inputs:{x:l},attrs:{shape:f},backend:r})}else{const t=r.tensorMap.get(u.dataId).values;switch(a){case"max":const n=ZV(t,U(d),f,e.dtype);p=r.makeTensorInfo(f,e.dtype,n);break;case"prod":const{outVals:o,outShape:s,outDtype:i}=aG(u.shape,u.dtype,t,c);p=r.makeTensorInfo(s,i,o);break;default:throw new Error("".concat(a," CPU implementation is not yet supported."))}}return s.forEach((e=>r.disposeData(e.dataId))),p}const DG={kernelName:Ae,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return OG(r,s,o,"all",n)}};const MG={kernelName:_e,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return OG(r,s,o,"any",n)}};class zG{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const a=[t];this.op="min"===n?"<":">";const[r,o]=kl(e,a);this.outputShape=0===r.length?[1]:r,this.dispatchLayout=AW(this.outputShape),U(o)<32?(this.type="plain",this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=TW(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey="argMinMax_".concat(this.op,"_").concat(this.type)}getUserCode(){const e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":"uniforms.xShape.".concat(gW(this.inputShape.length-1)),n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+="outputCoords.".concat(gW(t),",");return e};if("shared"===this.type){const a="\n      var<workgroup> xBestIndices : array<i32, ".concat(e,">;\n      var<workgroup> xBestValues : array<f32, ").concat(e,">;\n    ");return"\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ".concat(a,"\n\n      ").concat(yW("index")," {\n        let outputIndex = index / ").concat(e,";\n        let reduceLength = ").concat(t(),";\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ").concat(e,") {\n          let candidate = getX(").concat(n()," k);\n          if (!isnan(candidate) && candidate ").concat(this.op," bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ").concat(e,"u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ").concat(this.op," bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    ")}return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(").concat(n()," 0);\n          let reduceLength = ").concat(t(),";\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(").concat(n()," i);\n            if (candidate ").concat(this.op," bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      ")}}const LG={kernelName:Fe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Y(o,r.shape);const i=Cl(s,r.shape.length);let c=r;const l=[];null!=i&&(c=RG({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=Tl(s.length,c.shape.length)),Il("argMax",[s[0]],c.shape.length);const u=new zG(c.shape,s[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(u,[c],"int32",h);return l.forEach((e=>n.disposeData(e.dataId))),d}};const PG={kernelName:Oe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o}=a;let s=Y(o,r.shape);const i=Cl(s,r.shape.length);let c=r;const l=[];null!=i&&(c=RG({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),s=Tl(s.length,c.shape.length)),Il("argMin",[s[0]],c.shape.length);const u=new zG(c.shape,s[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(u,[c],"int32",h);return l.forEach((e=>n.disposeData(e.dataId))),d}},BG=OV({opType:fU.ASIN}),WG={kernelName:De,backendName:"webgpu",kernelFunc:BG},UG=OV({opType:fU.ASINH}),VG={kernelName:Me,backendName:"webgpu",kernelFunc:UG},GG=OV({opType:fU.ATAN}),HG={kernelName:ze,backendName:"webgpu",kernelFunc:GG},jG=DV({opType:LW.ATAN2}),KG={kernelName:Pe,backendName:"webgpu",kernelFunc:jG},qG=OV({opType:fU.ATANH}),XG={kernelName:Le,backendName:"webgpu",kernelFunc:qG};class YG{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    ")}}class QG{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey="pool2D_".concat(t,"_").concat(n,"_").concat(a,"_").concat(r)}getUserCode(){let e;if("avg"===this.poolType)e="resultValue = resultValue + value; count = count + 1.0;";else if(this.computePositions){const t=this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC";e="let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ".concat(t,";\n      }")}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return"\n      ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ").concat(this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":"var resultValue = ".concat("avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)",";"),"\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ").concat(e,"\n            }\n          }\n\n          ").concat(this.computePositions?"setOutputAtIndexI32(index, maxPosition);":"setOutputAtIndex(index, ".concat(t,");"),"\n        }\n      }\n    ")}}class ZG{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey="pool3D_".concat(t,"_").concat(n,"_").concat(a,"_").concat(r)}getUserCode(){let e;if("avg"===this.poolType)e="resultValue += value; count += 1.0;";else if(this.computePositions){const t=this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC";e="let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ".concat(t,";\n      }")}else e="resultValue = max(value, resultValue);";let t="resultValue";"avg"===this.poolType&&(t="resultValue / max(count, 1.0)");return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ").concat(this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":"var resultValue = ".concat("avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)",";"),"\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ").concat(e,"\n              }\n            }\n          }\n\n          ").concat(this.computePositions?"setOutputAtIndexI32(index, maxPosition);":"setOutputAtIndex(index, ".concat(t,");"),"\n        }\n      }\n    ")}}function JG(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:o,keepDims:s}=a;return OG(r,o,s,"max",n)}const $G={kernelName:an,backendName:"webgpu",kernelFunc:JG};function eH(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:o,axis:s}=a;return OG(r,s,o,"mean",n)}const tH={kernelName:hn,backendName:"webgpu",kernelFunc:eH};function nH(e,t,n,a){if(1===t.filterWidth&&1===t.filterHeight&&G(t.inShape,t.outShape))return EV({inputs:{x:e},backend:a});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){const r=e.shape.length,o=kV({inputs:{x:e},backend:a,attrs:{shape:[e.shape[r-3]*e.shape[r-2],e.shape[r-1]]}});let s;"avg"===n?s=eH({inputs:{x:o},backend:a,attrs:{axis:0,keepDims:!1}}):(P("max"===n,(()=>"Invalid pool type ".concat(n))),s=JG({inputs:{x:o},backend:a,attrs:{reductionIndices:0,keepDims:!1}}));const i=kV({inputs:{x:s},backend:a,attrs:{shape:t.outShape}});return a.disposeData(o.dataId),a.disposeData(s.dataId),i}let r;const o=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?r=new YG(t):("avg"===n?r=new QG(t,"avg"):(P("max"===n,(()=>"Invalid pool type ".concat(n))),r=new QG(t,"max")),o.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),a.runWebGPUProgram(r,[e],e.dtype,o)}const aH={kernelName:Be,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;return nH(r,dc(r.shape,o,s,1,i,c),"avg",n)}};const rH={kernelName:Ue,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=pc(r.shape,o,s,[1,1,1],i,l,c),h=new ZG(u,"avg"),d=[{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.inDepth,u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[r],r.dtype,d)}};class oH{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return"\n      ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class sH{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return"\n      ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const iH={kernelName:Ve,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=pc(s.shape,i,c,1,l,u),d=new sH(h),p=1/(h.filterDepth*h.filterHeight*h.filterWidth),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(d,[r],s.dtype,f)}};const cH={kernelName:We,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o;OW([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=dc(s.shape,i,c,1,l),h=new oH(u),d=1/(u.filterHeight*u.filterWidth),p=[{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.effectiveFilterHeight-1-u.padInfo.top,u.effectiveFilterWidth-1-u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"float32",data:[d]}];return n.runWebGPUProgram(h,[r],s.dtype,p)}};const lH={kernelName:Ge,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:o}=t,{transposeA:s,transposeB:i}=a;return IV({a:r,b:o,transposeA:s,transposeB:i,backend:n})}};class uH{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms="start : ".concat(mW(e.length),", "),this.shaderKey="slice"}getUserCode(){const e=mW(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return hH.slice(0,e).map((e=>"sourceLoc.".concat(e))).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let n;n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>"sourceLoc.".concat(hH[t]," = uniforms.start.").concat(gW(t)," + coords.").concat(hH[t],";")));return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          var sourceLoc : ").concat(e,";\n          let coords = getCoordsFromIndex(index);\n          ").concat(n.join("\n"),"\n          setOutputAtIndex(index, getSource(").concat(t,"));\n        }\n      }\n    ")}}const hH=["x","y","z","w","u","v"];function dH(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,size:s}=a,[i,c]=Qi(r,o,s);if(zi(r,i,c),n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.tensorMap.get(r.dataId),t=cG(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}if(0===U(c))return n.makeTensorInfo(c,r.dtype,[]);const l=new uH(i,c),u=[{type:"int32",data:i}];return n.runWebGPUProgram(l,[r],r.dtype,u)}const pH={kernelName:Zn,backendName:"webgpu",kernelFunc:dH},fH={kernelName:He,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,crops:s}=a;P(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=Fp(r.shape,o,i),l=Op(c.length,o.length),u=Dp(r.shape,o,i),h=Mp(s,o.length),d=zp(u,s,o.length),p=[],f=kV({inputs:{x:r},backend:n,attrs:{shape:c}}),m=RG({inputs:{x:f},backend:n,attrs:{perm:l}}),g=kV({inputs:{x:m},backend:n,attrs:{shape:u}}),y=dH({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeData(e.dataId))),y}},mH="\n  fn bincount_write(index: i32, value: f32) {\n    ".concat(hW("&result[index]","value","float32"),"\n  }\n");class gH{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey="bincount_".concat(this.hasWeights,"_").concat(this.binaryOutput,"_").concat(this.rank)}getUserCode(){return"\n    ".concat(this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":mH,"\n  ").concat(yW("index")," {\n    ").concat(1===this.rank?"if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ".concat(this.binaryOutput?1:this.hasWeights?"getW(index)":"1.",";\n        bincount_write(indexVal, value);\n      }\n    }"):"let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ".concat(this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1.",";\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }"),"\n  }\n  ")}}const yH={kernelName:je,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s}=a,i=U(r.shape),c=U(o.shape)>0,l=[s],u=o.dtype,h=vV({backend:n,attrs:{shape:l,value:0,dtype:u}}),d=new gH([i],c),p=[{type:"int32",data:[s]}],f=c?[r,o]:[r];return n.runWebGPUProgram(d,f,u,p,h)}};class bH{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return"\n  ".concat(yW("index")," {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  ")}}const xH={kernelName:qe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t;if(n.shouldExecuteOnCPU([a,r])){const e=n.tensorMap.get(a.dataId),t=n.tensorMap.get(r.dataId),o=e.values,s=t.values,i=ei(Array.from(o),Array.from(s));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const o=U(a.shape),s=U(r.shape),i=Math.max(o,s),c=new bH(i),l=[{type:"int32",data:[o]},{type:"int32",data:[s]}];return n.runWebGPUProgram(c,[a,r],"int32",l)}},vH=DV({opType:LW.NOT_EQUAL,dtype:"bool",cpuKernelImpl:nG}),wH={kernelName:xn,backendName:"webgpu",kernelFunc:vH};function kH(e){const{inputs:t,backend:n}=e,{input:a}=t;return EV({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.real},backend:n})}const SH={kernelName:Dn,backendName:"webgpu",kernelFunc:kH};const IH={kernelName:Xe,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:o}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===o.dtype)return EV({inputs:{x:o},backend:a});const t=gu(o.shape),n=e({inputs:{x:o},backend:a,attrs:{dtype:"float32"}}),r=AV({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),r}if("complex64"===o.dtype){const t=kH({inputs:{input:o},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeData(t.dataId),n}if(!$(o.dtype,s)){const e=EV({inputs:{x:o},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([o])){const e=a.tensorMap.get(o.dataId).values,[t,n,r]=zV(e,o.shape,o.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){const n=new FV(e.shape,fU.TO_INT),a=t.runWebGPUProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(o,a);if("bool"===s){const e=a.makeTensorInfo([],"bool",Z("bool",1)),t=vH({inputs:{a:o,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(s))}},CH=OV({opType:fU.CEIL,cpuKernelImpl:LV}),NH={kernelName:Ye,backendName:"webgpu",kernelFunc:CH};class TH{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    ")}}class EH{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    ")}}const RH={kernelName:Qe,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:o,clipValueMax:s}=a;let i;const c=[{type:"float32",data:[o]},{type:"float32",data:[s]}];return i=U(r.shape)%4===0?new TH(r.shape):new EH(r.shape),n.runWebGPUProgram(i,[r],r.dtype,c)}};class AH{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  ")}}function _H(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const FH={kernelName:Je,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.tensorMap.get(a.dataId),o=new AH(a.shape),s=[_H(a,r.complexTensorInfos.real),_H(a,r.complexTensorInfos.imag)];return n.runWebGPUProgram(o,s,s[0].dtype)}};class OH{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Sp(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t))),this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+="offset".concat(t," : i32,");this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let a=1;a<this.offsetLength;a++)e.push("else if (yC < uniforms.offset".concat([a],"){ ")+"setOutputAtCoords(coords.x, coords.y, getT".concat(a,"(yR, yC - uniforms.offset").concat(a-1,")); }"));const t=this.offsetLength,n=this.offsetLength-1;e.push("else { setOutputAtCoords(coords.x, coords.y, getT".concat(t,"(yR, yC - uniforms.offset").concat(n,")); }"))}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return"\n      ".concat(yW("index")," {\n        for(var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let flatIndex = index * ").concat(this.workPerThread," + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ").concat(e.join("\n        "),"\n          }\n        }\n      }\n    ")}}function DH(e){const{inputs:t,backend:n}=e,{input:a}=t;return EV({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.imag},backend:n})}const MH={kernelName:Vt,backendName:"webgpu",kernelFunc:DH};function zH(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>kH({inputs:{input:e},backend:n}))),r=e.map((e=>DH({inputs:{input:e},backend:n}))),o=zH(a,t,n),s=zH(r,t,n),i=AV({inputs:{real:o,imag:s},backend:n});return a.forEach((e=>n.disposeData(e.dataId))),r.forEach((e=>n.disposeData(e.dataId))),n.disposeData(o.dataId),n.disposeData(s.dataId),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=U(e.shape.slice(t));return kV({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),o=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),s=Sp(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=PV(o,s,a,i),l=Sp(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,a,c);return r.forEach((e=>n.disposeData(e.dataId))),u}const o=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>o){const a=[];for(let s=0;s<e.length;s+=o){const r=e.slice(s,s+o);a.push(zH(r,t,n))}const r=zH(a,t,n);for(const e of a)n.disposeData(e.dataId);return r}const{tensors2D:s,outShape:i}=function(e,t,n){const a=Sp(e.map((e=>e.shape)),t),r=e.map((e=>kV({inputs:{x:e},backend:n,attrs:{shape:[U(e.shape.slice(0,t)),U(e.shape.slice(t))]}})));return{tensors2D:r,outShape:a}}(e,t,n),c=s.map((e=>e.shape)),l=new OH(c),u=[],h=new Array(c.length-1);if(h.length>0){h[0]=c[0][1],u.push({type:"int32",data:[h[0]]});for(let e=1;e<h.length;e++)h[e]=h[e-1]+c[e][1],u.push({type:"int32",data:[h[e]]})}const d=n.runWebGPUProgram(l,s,s[0].dtype,u);s.forEach((e=>n.disposeData(e.dataId)));const p=kV({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeData(d.dataId),p}function LH(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,o=Y(r,t[0].shape)[0];kp(t.map((e=>e.shape)),o);const s=Sp(t.map((e=>e.shape)),o);if(0===U(s))return n.makeTensorInfo(s,t[0].dtype,[]);const i=t.filter((e=>U(e.shape)>0));return 1===i.length?EV({inputs:{x:i[0]},backend:n}):zH(i,o,n)}const PH={kernelName:$e,backendName:"webgpu",kernelFunc:LH};class BH{constructor(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=EW(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=RW(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),s&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=i,this.addBias=r,this.activation=o,this.hasPreluActivationWeights=s,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=a%this.tileInner===0,this.shaderKey="conv2DMM_".concat(this.elementsPerThread,"_").concat(this.activation,"}_").concat(this.fitAOuter,"_").concat(this.fitBOuter,"_").concat(this.fitInner,"_").concat(this.isVec4,"_").concat(this.innerElementSize,"_").concat(this.isChannelsLast,"_").concat(this.sequentialAccessByThreads)}getUserCode(){const e=this.isVec4?hV(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):pV(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1],n="\n    ".concat(function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:4,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:4,l=arguments.length>9&&void 0!==arguments[9]?arguments[9]:4;const u=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",h=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",d=e?"uniforms.xShape[1]":"uniforms.xShape[2]",p=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g="\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ".concat(e?"uniforms.outShape[2]":"uniforms.outShape[3]",";\n      let outRow = ").concat(f," / outWidth;\n      let outCol = ").concat(f," % outWidth;\n\n      let WRow = ").concat(m," / (uniforms.filterDims[1] * inChannels);\n      let WCol = ").concat(m," / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ").concat(m," % inChannels;\n      var resData = ").concat(fW(i),"(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ").concat(d," && xCol >= 0 && xCol < ").concat(p,") {\n        ").concat(u,"\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ").concat((e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(i),"\n      }\n      return resData;"),y=e?t&&a?"\n      ".concat(g):"\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ".concat(g,"\n      }\n      return ").concat(fW(i),"(0.0);"):a&&n?"\n      ".concat(g):"\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ".concat(g,"\n      }\n      return ").concat(fW(i),"(0.0);"),b="".concat((e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(c)),x=fW(l),v=fW(e?i:c),w=fW(e?c:i);return"\n      ".concat(iV(o,s,4===l,4),"\n      fn mm_readA(batch: i32, row : i32, col : i32) -> ").concat(v," {\n        ").concat(e?y:b,"\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> ").concat(w," {\n        ").concat(e?b:y,"\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ").concat(x,") {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ").concat(e?"uniforms.outShape[2]":"uniforms.outShape[3]",";\n        ").concat(h,"\n        ").concat(cV(r,o),"\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }")}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2]),"\n    ").concat(e,"\n  ");return n}}class WH{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey="conv2dnaive_".concat(this.activation,"_").concat(this.isChannelsLast)}getUserCode(){return"\n       ".concat(iV(this.activation,this.hasPreluActivationWeights,!1,4),"\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ").concat(this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);","\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ").concat(cV(this.addBias,this.activation),"\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ").concat(yW("index")," {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ").concat(this.isChannelsLast?"coords[3];":"coords[1];","\n         let outRow = ").concat(this.isChannelsLast?"coords[1];":"coords[2];","\n         let outCol = ").concat(this.isChannelsLast?"coords[2];":"coords[3];","\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ").concat(this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"," xChannel = xChannel + 1) {\n               ").concat(this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);","\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     ")}}class UH{constructor(e,t){this.variableNames=["x"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey="im2col_".concat(this.isChannelsLast)}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return"\n    ".concat(yW("index")," {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ").concat(n,";\n        let col = ").concat(a,";\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[").concat(e,"] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[").concat(t,"] && xCol >= 0) {\n            value = ").concat(r,";\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   ")}}function VH(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function GH(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=null!=o,u=null!=s,h="channelsLast"===a.dataFormat,d=h&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type,p=ve().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!p&&(d||1===a.filterHeight&&1===a.filterWidth&&1===a.dilationHeight&&1===a.dilationWidth&&1===a.strideHeight&&1===a.strideWidth&&("SAME"===a.padInfo.type||"VALID"===a.padInfo.type)))return function(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const l="channelsLast"===a.dataFormat,u=!l,h=[];let d,p;if(l&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type){const e=a.inHeight*a.inWidth*a.inChannels;d=kV({inputs:{x:t},backend:r,attrs:{shape:[1,a.batchSize,e]}}),p=kV({inputs:{x:n},backend:r,attrs:{shape:[1,e,a.outChannels]}})}else d=kV({inputs:{x:t},backend:r,attrs:{shape:l?[a.batchSize,a.inHeight*a.inWidth,a.inChannels]:[a.batchSize,a.inChannels,a.inHeight*a.inWidth]}}),p=kV({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});if(h.push(d),h.push(p),null!=s){const e=VH(s.shape,l);null!=e&&(s=kV({inputs:{x:s},backend:r,attrs:{shape:e}}),h.push(s))}if(null!=o){const e=VH(o.shape,l);null!=e&&(o=kV({inputs:{x:o},backend:r,attrs:{shape:e}}),h.push(o))}const f=IV({a:l?d:p,b:l?p:d,transposeA:u,transposeB:!1,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),m=kV({inputs:{x:f},backend:r,attrs:{shape:a.outShape}});h.push(f);for(const g of h)r.disposeData(g.dataId);return m}({x:t,filter:n,convInfo:a,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i});const f=ve().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>-1?f:r.thresholdToIncreaseWorkgroups,g=a.batchSize*Math.ceil(a.outHeight*a.outWidth/32)*Math.ceil(a.outChannels/32);if(ve().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=m)return function(e){let{x:t,filter:n,convInfo:a,backend:r,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:h,strideWidth:d,strideHeight:p,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:b,dataFormat:x}=a,v="channelsLast"===x,w=l*u*h,k=g*m,S=v?[a.batchSize,k,w]:[a.batchSize,w,k],I=new UH(S,v),C=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[p,d]},{type:"int32",data:[b,y]},{type:"int32",data:[m]},{type:"int32",data:[h*l]},{type:"int32",data:[h]}],N=r.runWebGPUProgram(I,[t],t.dtype,C),T=[];T.push(N);const E=kV({inputs:{x:n},backend:r,attrs:{shape:[1,w,-1]}});if(T.push(E),null!=s){const e=VH(s.shape,v);null!=e&&(s=kV({inputs:{x:s},backend:r,attrs:{shape:e}}),T.push(s))}if(null!=o){const e=VH(o.shape,v);null!=e&&(o=kV({inputs:{x:o},backend:r,attrs:{shape:e}}),T.push(o))}const R=IV({a:v?N:E,b:v?E:N,transposeA:!v,transposeB:!1,backend:r,bias:o,activation:c,preluActivationWeights:s,leakyreluAlpha:i}),A=kV({inputs:{x:R},backend:r,attrs:{shape:a.outShape}});T.push(R);for(const _ of T)r.disposeData(_.dataId);return A}({x:t,filter:n,convInfo:a,backend:r,bias:o,preluActivationWeights:s,leakyreluAlpha:i,activation:c});let y;const b=[a.padInfo.top,a.padInfo.left],x=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...b]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(p)y=new WH(a,l,c,u);else{const e=h?a.outHeight*a.outWidth:a.outChannels,t=h?a.outChannels:a.outHeight*a.outWidth,n=a.filterHeight*a.filterWidth*a.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[n]});const o=r.adapterInfo.isIntel();y=new BH(a,e,t,n,l,c,u,o)}const v=[],w=[t,n];l&&(h||1!==o.shape.length||(o=kV({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}}),v.push(o)),w.push(o)),u&&(h||1!==s.shape.length||(s=kV({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),v.push(s)),w.push(s)),"leakyrelu"===c&&(x.push({type:"float32",data:[i]}),y.uniforms+=" alpha : f32,");const k=r.runWebGPUProgram(y,w,t.dtype,x);for(const S of v)r.disposeData(S.dataId);return k}const HH={kernelName:et,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=n,h=Ic(c);return GH({x:r,filter:o,convInfo:fc(r.shape,o.shape,s,l,i,u,!1,h),backend:a})}};class jH{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey="conv2DDerInput_".concat(this.isChannelsLast,"_").concat(this.isVec4,"_").concat(this.workPerThread)}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,a="\n    ".concat(yW()," {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ").concat(this.workPerThread,";\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ").concat(this.workPerThread,">;\n      for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    ");return this.isVec4?"\n    ".concat(a,"\n    "):"\n    ".concat(yW("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[").concat(n,"];\n\n        let dyCorner = vec2<i32>(coords[").concat(e,"], coords[").concat(t,"]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ").concat(this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)",";\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class KH{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey="conv2DDerFilter_".concat(this.isChannelsLast)}getUserCode(){return"\n    ".concat(yW("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (").concat(this.isChannelsLast,") {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class qH{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}class XH{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  ")}}const YH={kernelName:tt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,h=Ic(c),d=fc(r.shape,u,s,1,i,l,!1,h),p=new KH(d),f=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return n.runWebGPUProgram(p,[r,o],r.dtype,f)}};class QH{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,P("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=EW(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=RW(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey="conv2DDerInputMM_".concat(this.isVec4,"_").concat(this.elementsPerThread)}getUserCode(){const e=this.isVec4?hV(this.elementsPerThread,this.workgroupSize):pV(this.elementsPerThread,this.workgroupSize),t="\n    ".concat(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:4;const t="\n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ".concat(fW(e),"(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ").concat(fW(e),"(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/").concat(e,"];"),n="if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ".concat(t,"\n      }\n      return ").concat(fW(e),"(0.0);");return"\n  fn mm_readA(batch: i32, row : i32, col : i32) -> ".concat(fW(e)," {\n    ").concat(n,"\n  }\n\n  fn mm_readB(batch: i32, row : i32, col : i32) -> ").concat(fW(e)," {\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ").concat((e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error("innerElementSize ".concat(e," is not supported."))}})(e),"\n    }\n    return ").concat(fW(e),"(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ").concat(fW(e),") {\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/").concat(e,"] = value;\n    }\n  }")}(this.isVec4?4:1),"\n    ").concat(e,"\n    ");return t}}const ZH={kernelName:nt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{inputShape:s,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,h=Ic(l),d=fc(s,o.shape,i,1,c,u,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let f;if(ve().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==d.dataFormat)f=new jH(d);else{f=new QH(d);const e=d.inHeight*d.inWidth,t=d.inChannels,n=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(f,[r,o],"float32",p)}};class JH{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }")}}const $H={kernelName:at,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,l=mc(r.shape,o.shape,s,c,i),u=[l.padInfo.front,l.padInfo.top,l.padInfo.left],h=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[...u]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationDepth,l.dilationHeight,l.dilationWidth]}],d=new JH(l),p=Br(r.dtype,o.dtype);return n.runWebGPUProgram(d,[r,o],p,h)}};const ej={kernelName:rt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,pad:i,filterShape:c}=a,l=mc(r.shape,c,s,1,i),u=new qH(l),h=[{type:"int32",data:[l.padInfo.front,l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.batchSize]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.inDepth]},{type:"int32",data:[l.inHeight]},{type:"int32",data:[l.inWidth]}];return n.runWebGPUProgram(u,[r,o],o.dtype,h)}};const tj={kernelName:ot,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,pad:i,inputShape:c}=a,l=mc(c,o.shape,s,1,i),u=new XH(l),h=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[l.filterDepth-1-l.padInfo.front,l.filterHeight-1-l.padInfo.top,l.filterWidth-1-l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.outChannels]}];return n.runWebGPUProgram(u,[r,o],r.dtype,h)}},nj=OV({opType:fU.COS}),aj={kernelName:st,backendName:"webgpu",kernelFunc:nj},rj=OV({opType:fU.COSH}),oj={kernelName:it,backendName:"webgpu",kernelFunc:rj};class sj{constructor(e,t,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===a?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey="cropAndResize_".concat(this.methodId,"_").concat(this.cropHeightBiggerThan1,"_").concat(this.cropWidthBiggerThan1)}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,a,r]=this.cropHeightBiggerThan1?["(".concat(e," / f32(uniforms.outShape[1] - 1))"),"(y2-y1) * height_ratio","y1*".concat(e," + f32(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(e)],[o,s,i]=this.cropWidthBiggerThan1?["(".concat(t," / f32(uniforms.outShape[2] - 1))"),"(x2-x1) * width_ratio","x1*".concat(t," + f32(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(t)];return"\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(").concat(n,");\n        let width_ratio = f32(").concat(o,");\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ").concat(a,";\n        let width_scale = ").concat(s,";\n        let in_y = ").concat(r,";\n        if( in_y < 0.0 || in_y > ").concat(e," ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ").concat(i,";\n        if( in_x < 0.0 || in_x > ").concat(t," ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(").concat(this.methodId," == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    ")}}const ij={kernelName:ut,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:o,boxInd:s}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new sj(r.shape[3],o.shape,i,c),h=[{type:"float32",data:[l]}];return n.runWebGPUProgram(u,[r,o,s],"float32",h)}};var cj;!function(e){e.Prod="*",e.Sum="+"}(cj||(cj={}));class lj{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=a,this.op=e,this.shaderKey="cum_".concat(this.op,"_").concat(this.exclusive,"_").concat(this.reverse)}getUserCode(){const e=this.outputShape.length,t=this.op===cj.Prod?"1.0":"0.0",n=this.exclusive?t:"getX(".concat(uj(e,"coords",this.op),")"),a=this.outputShape[this.outputShape.length-1];let r="",o="";return this.exclusive?(r=this.reverse?"end != ".concat(a-1):"end != 0",o=this.reverse?"end + 1":"end - 1"):(r=this.reverse?"end + pow2 < ".concat(a):"end >= pow2",o=this.reverse?"end + pow2":"end - pow2"),"\n      ".concat(yW("index")," {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ").concat(hj(e,"coords",this.op),";\n         var val = ").concat(n,";\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (").concat(r,") {\n           let idx = ").concat(o,";\n           ").concat(hj(e,"coords",this.op)," = idx;\n           val ").concat(this.op,"= getX(").concat(uj(e,"coords",this.op),");\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    ")}}function uj(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function hj(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function dj(e,t,n,a,r,o){const s=t.shape.length,i=Cl([a],s);let c=t;null!=i&&(c=RG({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Tl(1,s)[0];if(l!==s-1)throw new Error("WebGPU cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let h=EV({inputs:{x:c},backend:n});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const t=new lj(e,c.shape,!1,o),a=h,r=[{type:"float32",data:[d]}];h=n.runWebGPUProgram(t,[h],h.dtype,r),n.disposeData(a.dataId)}if(r){const t=new lj(e,c.shape,r,o),a=h,s=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(t,[h],h.dtype,s),n.disposeData(a.dataId)}if(null!=i){const e=RG({inputs:{x:h},backend:n,attrs:{perm:Nl(i)}});return n.disposeData(h.dataId),n.disposeData(c.dataId),e}return h}const pj={kernelName:ct,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return dj(cj.Prod,r,n,o,s,i)}};const fj={kernelName:lt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,exclusive:s,reverse:i}=a;return dj(cj.Sum,r,n,o,s,i)}};const mj={kernelName:ht,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:o}=t,{size:s,binaryOutput:i}=a,c=1===r.shape.length,l=U(o.shape)>0,u=o.dtype,h=c?[r.shape[0]]:[r.shape[0],r.shape[1]],d=vV({backend:n,attrs:{shape:c?[s]:[r.shape[0],s],value:0,dtype:u}}),p=new gH(h,l,i),f=[{type:"int32",data:[s]}],m=l?[r,o]:[r];return n.runWebGPUProgram(p,m,u,f,d)}};class gj{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthToSpace_".concat(t),this.dataFormat=t}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ").concat(this.getHeightCoordString(),";\n          let w = ").concat(this.getWidthCoordString(),";\n          let d = ").concat(this.getDepthCoordString(),";\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ").concat(this.getOutputDepthSize(),";\n          let in_d = d + offset_d;\n\n          let rlt = ").concat(this.getInputSamplingString(),";\n          setOutputAtIndex(index, rlt);\n        }\n      }")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const yj={kernelName:dt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:o,dataFormat:s}=a,i=r.shape[0],c=("NHWC"===s?r.shape[1]:r.shape[2])*o,l=("NHWC"===s?r.shape[2]:r.shape[3])*o,u=("NHWC"===s?r.shape[3]:r.shape[1])/(o*o),h=[{type:"int32",data:[o]}],d=new gj("NHWC"===s?[i,c,l,u]:[i,u,c,l],s);return n.runWebGPUProgram(d,[r],r.dtype,h)}};class bj{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=o,this.filterHeight=t,this.filterWidth=n,this.shaderKey="depthwiseNCHW_".concat(this.activation,"_").concat(this.filterHeight,"_").concat(this.filterWidth)}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return"\n      ".concat(iV(this.activation,this.hasPreluActivation,!1,4),"\n\n      var<workgroup> mm_Asub : array<array<f32, ").concat(a,">, ").concat(n,">;\n      var<workgroup> mm_Bsub : array<array<f32, ").concat(this.filterWidth,">, ").concat(this.filterHeight,">;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ").concat(yW()," {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ").concat(n,"; inputRow = inputRow + ").concat(this.workgroupSize[1],") {\n          for (var inputCol = localCol; inputCol < ").concat(a,"; inputCol = inputCol + ").concat(this.workgroupSize[0],") {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ").concat(e<t?"if (wIndex < ".concat(e,")"):"for(; wIndex < ".concat(e,"; wIndex = wIndex + ").concat(t,")"),"\n\n        {\n          let wRow = wIndex / ").concat(this.filterWidth,";\n          let wCol = wIndex % ").concat(this.filterWidth,";\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ").concat(this.filterHeight,"; wR = wR + 1) {\n          for (var wC = 0; wC < ").concat(this.filterWidth,"; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ").concat(cV(this.addBias,this.activation),"\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    ")}}class xj{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=AW(r),this.dispatch=TW(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),P("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey="depthwiseVec4_".concat(n,"_").concat(this.convInfo.filterHeight,"_").concat(this.convInfo.filterWidth,"_").concat(this.convInfo.strideHeight,"_").concat(this.convInfo.strideWidth,"_").concat(this.workPerThread)}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return"\n      ".concat(iV(this.activation,this.hasPreluActivation,!0,4),"\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ").concat(yW("index")," {\n        let width0 = uniforms.outShape[3] / ").concat(this.outputComponent,";\n        let d1 = (index % width0) * ").concat(this.outputComponent,";\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ").concat(this.workPerThread,";\n        let c = (index1 % width1) * ").concat(this.workPerThread,";\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(").concat(t,", ").concat(n,") - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ").concat(e,">;\n        var dotProd : array<vec4<f32>, ").concat(this.workPerThread,">;\n        for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ").concat(this.convInfo.filterHeight,"; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ").concat(e,"; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ").concat(this.convInfo.filterWidth,"; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ").concat(this.workPerThread,"; i++) {\n                dotProd[i] = fma(xVals[i * ").concat(n," + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ").concat(this.workPerThread,"; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ").concat(cV(this.addBias,this.activation),"\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    ")}}class vj{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey="depthwise_".concat(this.activation,"_").concat(this.isChannelsLast)}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return"\n      ".concat(iV(this.activation,this.hasPreluActivation,!1,4),"\n\n      ").concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.").concat(this.isChannelsLast?"yz":"zw",") * uniforms.strides - uniforms.pads;\n          let d2 = coords[").concat(this.isChannelsLast?3:1,"];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ").concat(e,";\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ").concat(e,";\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ").concat(cV(this.addBias,this.activation),"\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    ")}}const wj={kernelName:pt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,h=Ic(c);let d=l;null==d&&(d=[1,1]);const p=fc(r.shape,o.shape,s,d,i,u,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m="channelsLast"===p.dataFormat;let g;return!m&&p.inHeight>16&&p.inWidth>16&&1===p.strideHeight&&1===p.strideWidth&&1===p.dilationWidth&&1===p.dilationHeight&&p.inChannels===p.outChannels?g=new bj(p.outShape,p.filterHeight,p.filterWidth):m&&p.outHeight>4&&p.outWidth>4&&p.strideWidth<=2&&p.inChannels===p.outChannels&&1===p.dilationHeight&&1===p.dilationWidth&&p.inChannels%4===0?(g=new xj(p),f.push({type:"int32",data:[g.virtualWidth]})):(g=new vj(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(g,[r,o],r.dtype,f)}};class kj{constructor(e){this.variableNames=["x","dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return"\n      ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class Sj{constructor(e){this.variableNames=["dy","W"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return"\n      ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const Ij={kernelName:ft,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,h=fc(r.shape,u,s,i,c,l,!0),d=new kj(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[r,o],"float32",p)}};const Cj={kernelName:mt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:o}=t,{strides:s,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,h=fc(u,o.shape,s,i,c,l,!0),d=new Sj(h),p=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return n.runWebGPUProgram(d,[r,o],r.dtype,p)}};class Nj{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    ")}}const Tj={kernelName:gt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],o=U(a.shape),s=kV({inputs:{x:a},backend:n,attrs:{shape:[o]}}),i=new Nj(o),c=n.runWebGPUProgram(i,[s],s.dtype),l=kV({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeData(s.dataId),n.disposeData(c.dataId),l}};class Ej{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return"\n       ".concat(yW("index")," {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     ")}}const Rj={kernelName:yt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o}=t,{strides:s,pad:i,dilations:c}=a,l=hc(r.shape,o.shape,s,i,"NHWC",c),u=[l.padInfo.top,l.padInfo.left],h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[...u]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]}],d=new Ej(l);return n.runWebGPUProgram(d,[r,o],r.dtype,h)}};class Aj{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=AW(e.outShape),this.dispatch=TW(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw new Error("Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ".concat(t," type."));this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return"\n       ".concat(yW("index")," {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ").concat(hW("&result[flatIndexIn]","value",this.type),"\n         }\n       }\n     ")}}class _j{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=AW(e.outShape),this.dispatch=TW(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error("Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ".concat(n," type."));this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return"\n       ".concat(yW("index")," {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ").concat(hW("&result[flatIndexIn]","value",this.type),"\n         }\n       }\n     ")}}const Fj={kernelName:xt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:l}=a,u=hc(r.shape,o.shape,i,c,"NHWC",l),h=o.dtype,d=new _j(u,o.shape,h),p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[U(u.outShape)]}],f=vV({backend:n,attrs:{shape:o.shape,value:0,dtype:h}});return n.runWebGPUProgram(d,[r,o,s],h,p,f)}};const Oj={kernelName:bt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,dy:s}=t,{strides:i,pad:c,dilations:l}=a,u=hc(r.shape,o.shape,i,c,"NHWC",l),h=r.dtype,d=new Aj(u,h),p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[U(u.outShape)]}],f=vV({backend:n,attrs:{shape:u.inShape,value:0,dtype:h}});return n.runWebGPUProgram(d,[r,o,s],h,p,f)}};class Dj{constructor(e,t,n){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=dW.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=n,this.shaderKey="draw_".concat(t,"_").concat(n)}getUserCode(){let e;const t="float32"===this.type?"value":"value / 255.0";e="\n      if (uniforms.numChannels == 1) {\n        rgba[0] = ".concat(t,";\n        rgba[1] = ").concat(t,";\n        rgba[2] = ").concat(t,";\n      } else {\n        rgba[d] = ").concat(t,";\n      }");return"\n       @group(0) @binding(0) var outImage : texture_storage_2d<".concat(this.textureFormat,", write>;\n       ").concat(yW("index")," {\n         if (index < uniforms.size) {\n           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);\n           for (var d = 0; d < uniforms.numChannels; d = d + 1) {\n             let value = f32(inBuf[index * uniforms.numChannels + d]);\n             ").concat(e,"\n           }\n           rgba.x = rgba.x * rgba.w;\n           rgba.y = rgba.y * rgba.w;\n           rgba.z = rgba.z * rgba.w;\n           let coords = getCoordsFromIndex(index);\n           textureStore(outImage, vec2<i32>(coords.yx), rgba);\n         }\n       }\n      ")}}const Mj={kernelName:vt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:o,options:s}=a,[i,c]=r.shape.slice(0,2),{imageOptions:l}=s||{},u=(null===l||void 0===l?void 0:l.alpha)||1,h=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[i,c],p=new Dj(d,r.dtype,h);o.width=c,o.height=i;const f="webgpu";let m,g=o.getContext(f);g||(m=new OffscreenCanvas(c,i),g=m.getContext(f));const y=3===r.shape.length?r.shape[2]:1;g.configure({device:n.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const b="int32",x=n.makeTensorInfo(d,b),v=n.tensorMap.get(x.dataId);v.resource=g.getCurrentTexture(),v.external=!0;const w=[{type:"uint32",data:[y]},{type:"float32",data:[u]}];if(n.runWebGPUProgram(p,[r],b,w,x),m){const e=o.getContext("2d");if(!e)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(m,0,0)}return n.disposeData(x.dataId),r}},zj=DV({opType:LW.MUL,cpuKernelImpl:eG,supportsComplex:!0}),Lj={kernelName:yn,backendName:"webgpu",kernelFunc:zj};function Pj(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return OG(r,o,s,"sum",n)}const Bj={kernelName:ra,backendName:"webgpu",kernelFunc:Pj};const Wj={kernelName:kt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,o=t,{allDims:s,summedDims:i,idDims:c}=rf(r,o.length);sf(s.length,c,o);const{path:l,steps:u}=cf(i,c),h=u.length;let d=null,p=s.length;const f=[];for(let m=0;m<h;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=of(p,c[e]);let r;lf(t)?r=o[e]:(r=RG({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),f.push(r));const s=r.shape.slice();for(let e=0;e<a.length;++e)s.splice(a[e],0,1);G(r.shape,s)||(r=kV({inputs:{x:r},backend:n,attrs:{shape:s}}),f.push(r)),null===d?d=r:(d=zj({inputs:{a:r,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=Pj({inputs:{x:d},backend:n,attrs:{axis:l[m]-(s.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&n.disposeData(m.dataId);return d}},Uj=OV({opType:fU.ELU}),Vj={kernelName:St,backendName:"webgpu",kernelFunc:Uj},Gj={kernelName:It,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,o=new TV(LW.ELU_DER,a.shape,r.shape);return n.runWebGPUProgram(o,[a,r],a.dtype)}},Hj=DV({opType:LW.EQUAL,dtype:"bool",cpuKernelImpl:BV}),jj={kernelName:Nt,backendName:"webgpu",kernelFunc:Hj},Kj=OV({opType:fU.ERF}),qj={kernelName:Ct,backendName:"webgpu",kernelFunc:Kj},Xj=OV({opType:fU.EXP,cpuKernelImpl:WV,dtype:"float32"}),Yj={kernelName:Tt,backendName:"webgpu",kernelFunc:Xj};function Qj(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:o}=t,s=o.shape.length,i=o.shape.slice();let c=r;return r<0&&(P(-(s+1)<=r,(()=>"Axis must be in the interval [".concat(-(s+1),", ").concat(s,"]"))),c=s+r+1),i.splice(c,0,1),kV({inputs:{x:o},backend:a,attrs:{shape:i}})}const Zj={kernelName:Et,backendName:"webgpu",kernelFunc:Qj},Jj=OV({opType:fU.EXPM1,cpuKernelImpl:UV}),$j={kernelName:Rt,backendName:"webgpu",kernelFunc:Jj};class eK{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey="fft_".concat(e)}getUserCode(){const e="real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;";return"\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ".concat(e,"\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ").concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  ")}}function tK(e,t,n){const a=n.tensorMap.get(e.dataId),r=U(e.shape),o=e.shape[e.shape.length-1],s=[],i=kV({inputs:{x:e},backend:n,attrs:{shape:[r/o,o]}});s.push(i);const c=i.shape,l=new eK("real",c),u=new eK("imag",c),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:c},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:c}],d=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?c[1]:1]}],p=n.runWebGPUProgram(l,h,"float32",d);s.push(p);const f=n.runWebGPUProgram(u,h,"float32",d);s.push(f);const m=AV({inputs:{real:p,imag:f},backend:n});s.push(m);const g=kV({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return s.forEach((e=>n.disposeData(e.dataId))),g}const nK={kernelName:At,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return tK(a,!1,n)}};class aK{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    ")}}const rK={kernelName:Ft,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,o=new aK(a.shape);return r.runWebGPUProgram(o,[a],a.dtype)}},oK=OV({opType:fU.FLOOR,cpuKernelImpl:VV}),sK={kernelName:Ot,backendName:"webgpu",kernelFunc:oK},iK=DV({opType:LW.FLOOR_DIV,cpuKernelImpl:GV,dtype:"int32"}),cK={kernelName:Dt,backendName:"webgpu",kernelFunc:iK};class lK{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.pixelsOpType=dW.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey="fromPixels_".concat(this.importVideo)}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)",t=this.importVideo?"texture_external":"texture_2d<f32>";return"\n      @binding(1) @group(0) var src: ".concat(t,";\n      ").concat(yW("index")," {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ").concat(e,";\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  ")}}const uK={kernelName:Fa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:o}=a;if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const s="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,c="undefined"!==typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!==typeof OffscreenCanvas&&r instanceof OffscreenCanvas,l="undefined"!==typeof ImageBitmap&&r instanceof ImageBitmap,[u,h]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,u,o],p=ve().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,f=s||i;if(l||c||f){let e;if(p)e=n.device.importExternalTexture({source:r});else{if(f){const e=ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=hK&&e===dK||(dK=e,hK=document.createElement("canvas").getContext("2d",{willReadFrequently:dK})),hK.canvas.width=u,hK.canvas.height=h,hK.drawImage(r,0,0,u,h),r=hK.canvas}const t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,a="rgba8unorm",o=n.textureManager.acquireTexture(d[1],d[0],a,t);n.queue.copyExternalImageToTexture({source:r},{texture:o},[d[1],d[0]]),e=o}const t=U(d),a=se(d),s=new lK(d,o,p),i=[{type:"uint32",data:[t]},{type:"uint32",data:[o]},{type:"uint32",data:[...a]}],c=n.makeTensorInfo([h,u],"int32");n.tensorMap.get(c.dataId).resource=e;const l=n.runWebGPUProgram(s,[c],"int32",i);return n.disposeData(c.dataId),l}const m=r.data;let g=m;if(null!=o&&4!==o){g=new Uint8Array(r.width*r.height*o);const e=m.length;let t=0;for(let n=0;n<e;n++)n%4<o&&(g[t++]=m[n])}const y=n.makeTensorInfo(d,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}};let hK,dK=ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");class pK{constructor(e,t,n,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],ei(e,t),ei(e,n),this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=a&&(ei(e,a),this.variableNames.push("offset")),null!=r&&(ei(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";null!=this.scaleShape&&(t="getScaleByOutputIndex(index)");return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ").concat(e,";\n          let scaleValue = ").concat(t,";\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  ")}}const fK={kernelName:Mt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r,scale:o,offset:s,mean:i,variance:c}=t,{varianceEpsilon:l}=n,u=a,h=[r,i,c];let d=null;null!=s&&(d=s.shape,h.push(s));let p=null;null!=o&&(p=o.shape,h.push(o));const f=new pK(r.shape,i.shape,c.shape,d,p),m=[{type:"float32",data:[l]}];return u.runWebGPUProgram(f,h,r.dtype,m)}};const mK={kernelName:Ma,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=a,m=Ic(u);return GH({x:r,filter:o,convInfo:fc(r.shape,o.shape,c,h,l,d,!1,m),backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:f,activation:p})}};const gK={kernelName:za,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:o,bias:s,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=a;let f=u;null==f&&(f=[1,1]),P(kc(c,f),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(f,"'")));const m=fc(r.shape,o.shape,c,f,l,h,!0),g=[r,o],y=null!=s,b=null!=i;y&&g.push(s),b&&g.push(i);const x=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&m.inChannels%4===0?(v=new xj(m,y,d,b),x.push({type:"int32",data:[v.virtualWidth]})):(v=new vj(m,y,d,b),x.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),"leakyrelu"===d&&(x.push({type:"float32",data:[p]}),v.uniforms+=" alpha : f32,"),n.runWebGPUProgram(v,g,"float32",x)}};class yK{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gathernd_".concat(e),this.sliceDim=e,this.uniforms="sliceDim : i32, strides : ".concat(mW(e),",")}getUserCode(){let e;e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides";return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ").concat(e,";\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      ")}}const bK={kernelName:Lt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,o=r.shape,s=o[o.length-1],i=U(a.shape),[c,l,u,h]=Lp(a,r),d=kV({inputs:{x:r},backend:n,attrs:{shape:[l,s]}}),p=kV({inputs:{x:a},backend:n,attrs:{shape:[U(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),o=HV(e,t,a.dtype,l,s,u,h,a.shape,i);return n.makeTensorInfo(c,a.dtype,o.values)}const f=new yK(s,[l,u]),m=[{type:"int32",data:[s]},{type:"int32",data:h}],g=n.runWebGPUProgram(f,[p,d],p.dtype,m),y=kV({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(g.dataId),y}};class xK{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("indexZ"):n.push("".concat(t[a]));return n.join()}(this.aShape);return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(").concat(e,"));\n        }\n      }\n    ")}}function vK(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:o}=t,{axis:s,batchDims:i}=a,c=Nf(r,o,Y(s,r.shape)[0],i),l=U(o.shape),u=[],h=kV({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=kV({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});u.push(h),u.push(d);const p=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,o])){const e=n.tensorMap.get(d.dataId).values,t=Ns(d.shape,d.dtype,e),a=n.tensorMap.get(h.dataId).values,r=Ns(h.shape,h.dtype,a),o=jV(r,t,p);return u.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(c.outputShape,o.dtype,o.values)}const f=new xK(h.shape,p),m=n.runWebGPUProgram(f,[h,d],h.dtype);u.push(m);const g=kV({inputs:{x:m},backend:n,attrs:{shape:c.outputShape}});return u.forEach((e=>n.disposeData(e.dataId))),g}const wK={kernelName:zt,backendName:"webgpu",kernelFunc:vK},kK=DV({opType:LW.GREATER,cpuKernelImpl:qV,dtype:"bool"}),SK={kernelName:Pt,backendName:"webgpu",kernelFunc:kK},IK=DV({opType:LW.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:KV}),CK={kernelName:Bt,backendName:"webgpu",kernelFunc:IK};const NK={kernelName:Ut,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return tK(a,!0,n)}},TK=OV({opType:fU.IS_FINITE,dtype:"bool"}),EK={kernelName:Gt,backendName:"webgpu",kernelFunc:TK},RK=OV({opType:fU.IS_INF,dtype:"bool"}),AK={kernelName:Ht,backendName:"webgpu",kernelFunc:RK},_K=OV({opType:fU.IS_NAN,dtype:"bool"}),FK={kernelName:jt,backendName:"webgpu",kernelFunc:_K};const OK={kernelName:Kt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:o}=a,s=[{type:"float32",data:[o]}],i=new FV(r.shape,fU.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(i,[r],"float32",s)}},DK=DV({opType:LW.LESS,dtype:"bool",cpuKernelImpl:YV}),MK={kernelName:qt,backendName:"webgpu",kernelFunc:DK},zK=DV({opType:LW.LESS_EQUAL,dtype:"bool",cpuKernelImpl:XV}),LK={kernelName:Xt,backendName:"webgpu",kernelFunc:zK};class PK{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    ")}}const BK={kernelName:Yt,backendName:"webgpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:o}=n,s=(r-a)/(o-1),i=new PK(o),c=[{type:"float32",data:[a]},{type:"float32",data:[s]}];return t.runWebGPUProgram(i,[],"float32",c)}},WK=OV({opType:fU.LOG,cpuKernelImpl:QV}),UK={kernelName:Qt,backendName:"webgpu",kernelFunc:WK},VK=OV({opType:fU.LOG1P}),GK={kernelName:Zt,backendName:"webgpu",kernelFunc:VK},HK=DV({opType:LW.LOGICAL_AND,dtype:"bool"}),jK={kernelName:Jt,backendName:"webgpu",kernelFunc:HK},KK=OV({opType:fU.LOGICAL_NOT}),qK={kernelName:$t,backendName:"webgpu",kernelFunc:KK},XK=DV({opType:LW.LOGICAL_OR}),YK={kernelName:en,backendName:"webgpu",kernelFunc:XK},QK="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n";class ZK{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ").concat(QK,"\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  ")}}class JK{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,P(t<=this.maxAllowRadius,(()=>"Radius must be less than or equal to ".concat(this.maxAllowRadius,", current radius is ").concat(t))),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=TW(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return"\n    var <workgroup>lrnSub: array<f32, ".concat(this.workgroupSize[0],">;\n    const elementsPerWorkgroup = ").concat(this.elementsPerWorkgroup,";\n    const maxAllowRadius = ").concat(this.maxAllowRadius,";\n\n    ").concat(yW()," {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ").concat(QK,"\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } ")}}const $K={kernelName:tn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:o,bias:s,alpha:i,beta:c}=a;let l;l=o>16?new ZK(r.shape):new JK(r.shape,o);const u=[{type:"int32",data:[o]},{type:"float32",data:[s]},{type:"float32",data:[i]},{type:"float32",data:[c]}];return n.runWebGPUProgram(l,[r],r.dtype,u)}};class eq{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  ")}}const tq={kernelName:nn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:o,dy:s}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,h=new eq(r.shape),d=[{type:"int32",data:[i]},{type:"float32",data:[c]},{type:"float32",data:[l]},{type:"float32",data:[u]}];return n.runWebGPUProgram(h,[r,o,s],r.dtype,d)}},nq=DV({opType:LW.MAX,cpuKernelImpl:JV}),aq={kernelName:rn,backendName:"webgpu",kernelFunc:nq};const rq={kernelName:on,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:c}=a;return nH(r,dc(r.shape,o,s,1,i,c),"max",n)}};const oq={kernelName:cn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:o,strides:s,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=pc(r.shape,o,s,[1,1,1],i,l,c),h=new ZG(u,"max"),d=[{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.inDepth,u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterDepth,u.effectiveFilterHeight,u.effectiveFilterWidth]}];return n.runWebGPUProgram(h,[r],r.dtype,d)}};class sq{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return"\n      ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}class iq{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return"\n      ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    ")}}const cq={kernelName:ln,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o}=t,s=o,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,h=pc(s.shape,i,c,[1,1,1],l,u),d=new ZG(h,"max",!0);let p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];const f=n.runWebGPUProgram(d,[s],"int32",p),m=new iq(h);p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];const g=n.runWebGPUProgram(m,[r,f],s.dtype,p);return n.disposeData(f.dataId),g}};const lq={kernelName:sn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:o,output:s}=t,i=o;OW([o,s],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:h}=a,d=dc(i.shape,c,l,1,u,h),p=new QG(d,"max",!0);let f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const m=n.runWebGPUProgram(p,[i],"int32",f),g=new sq(d);f=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const y=n.runWebGPUProgram(g,[r,m],i.dtype,f);return n.disposeData(m.dataId),y}};const uq={kernelName:un,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{filterSize:r,strides:o,pad:s,includeBatchInIndex:i}=a,{x:c}=t;P(4===c.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(c.shape.length,".")));const l=[1,1];P(kc(o,l),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(l,"'")));const u=dc(c.shape,r,o,l,s),h=[{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]}];let d=new QG(u,"max",!1);const p=n.runWebGPUProgram(d,[c],c.dtype,h);return d=new QG(u,"max",!0,!0,i),[p,n.runWebGPUProgram(d,[c],"int32",h)]}};const hq={kernelName:dn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return OG(r,o,s,"min",n)}},dq=DV({opType:LW.MIN,cpuKernelImpl:$V}),pq={kernelName:pn,backendName:"webgpu",kernelFunc:dq};class fq{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.offset="reflect"===n?0:1,this.shaderKey="mirrorPad_".concat(n)}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>"uniforms.pad".concat(t,"[0]"))).join(","),n=this.xShape.map(((t,n)=>"uniforms.pad".concat(n,"[0] + uniforms.xShape").concat(e>1?"[".concat(n,"]"):""))).join(","),a=1===e?"start":"start[i]",r=1===e?"end":"end[i]",o=1===e?"outC":"outC[i]",s=mW(e),i=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let start = ").concat(s,"(").concat(t,");\n          let end = ").concat(s,"(").concat(n,");\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ").concat(e,"; i = i + 1) {\n            if (").concat(o," < ").concat(a,") {\n              ").concat(o," = ").concat(a," * 2 - ").concat(o," - ").concat(this.offset,";\n            } else if(").concat(o," >= ").concat(r,") {\n              ").concat(o," = (").concat(r," - 1) * 2 - ").concat(o," + ").concat(this.offset,";\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(").concat(i,"));\n        }\n      }\n    ")}}const mq={kernelName:fn,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{paddings:o,mode:s}=n,i=a,c=o.map((e=>({type:"int32",data:[e[0],e[1]]}))),l=new fq(r.shape,o,s);return i.runWebGPUProgram(l,[r],r.dtype,c)}},gq=DV({opType:LW.MOD}),yq={kernelName:mn,backendName:"webgpu",kernelFunc:gq};class bq{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return"\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  ")}}class xq{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return"\n    var<workgroup> buf : array<f32, ".concat(this.workgroupSize[0],">;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ").concat(this.workgroupSize[0],";\n    ").concat(yW("index")," {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    ")}}function vq(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:o}=a,s=kV({inputs:{x:r},backend:n,attrs:{shape:[U(r.shape)/r.shape[o],r.shape[o]]}}),i=new xq(s.shape),c=n.runWebGPUProgram(i,[s],r.dtype),l=kV({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeData(s.dataId),n.disposeData(c.dataId),l}const wq={kernelName:ia,backendName:"webgpu",kernelFunc:vq};const kq={kernelName:gn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:o,seed:s,normalized:i}=a,c=i?r:vq({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],h=new bq(l,o),d=[{type:"float32",data:[s]},{type:"int32",data:[u]}],p=n.runWebGPUProgram(h,[c],"int32",d);return i||n.disposeData(c.dataId),p}};const Sq={kernelName:bn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.tensorMap.get(a.dataId),[t,r]=tG(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}const r=new FV(a.shape,fU.NEG);return n.runWebGPUProgram(r,[a],a.dtype)}};const Iq={kernelName:vn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(o.dataId),{selectedIndices:h}=Ed(l,u,s,i,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}};const Cq={kernelName:kn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:o}=t,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),h=n.readSync(o.dataId),d=s,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=Ad(u,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Nq{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    ")}}const Tq={kernelName:In,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:o,depth:s,onValue:i,offValue:c}=a,l=U(r.shape),u=new Nq(l,s),h=kV({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=[{type:"float32",data:[i]},{type:"float32",data:[c]}],p=n.runWebGPUProgram(u,[h],o,d);n.disposeData(h.dataId);const f=kV({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeData(p.dataId),f}};function Eq(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=kH({inputs:{input:a},backend:n}),t=Eq({inputs:{x:e},backend:n}),r=DH({inputs:{input:a},backend:n}),o=Eq({inputs:{x:r},backend:n}),s=AV({inputs:{real:t,imag:o},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(o.dataId),s}return vV({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const Rq={kernelName:Aa,backendName:"webgpu",kernelFunc:Eq};const Aq={kernelName:Sn,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=kH({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),o=DH({inputs:{input:r},backend:a}),s=Eq({inputs:{x:o},backend:a}),i=AV({inputs:{real:n,imag:s},backend:a});return a.disposeData(t.dataId),a.disposeData(n.dataId),a.disposeData(o.dataId),a.disposeData(s.dataId),i}return vV({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const _q={kernelName:Cn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Qj({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const o=t[0].shape,s=t[0].dtype;t.forEach((e=>{B(o,e.shape,"All tensors passed to stack must have matching shapes"),P(s===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=LH({inputs:t.map((e=>{const t=Qj({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeData(e.dataId))),c}};function Fq(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.length,a=mW(n),r=e.map(((e,t)=>"uniforms.pad".concat(t,"[0]"))).join(","),o=e.map(((e,t)=>"uniforms.pad".concat(t,"[0] + uniforms.xShape").concat(n>1?"[".concat(t,"]"):""))).join(","),s=n>1?"".concat(a,"(").concat(r,")"):"".concat(r),i=n>1?"".concat(a,"(").concat(o,")"):"".concat(o),c=n>1?"any(paddedCoords < start)":"paddedCoords < start",l=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",u=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return"\n        let start = ".concat(s,";\n        let end = ").concat(i,";\n        if (").concat(c," || ").concat(l,") {\n          setOutputAtIndex(index, ").concat(t?0:"uniforms.constantValue",");\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(").concat(u,"));\n        }\n  ")}class Oq{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.xShape=e,this.shaderKey="pad"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ").concat(Fq(this.xShape),"\n        }\n      }\n    ")}}const Dq={kernelName:Nn,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:o,constantValue:s}=a;if(o.every((e=>G(e,[0,0]))))return EV({inputs:{x:r},backend:n});if(0===U(r.shape)){const e=o.map(((e,t)=>e[0]+r.shape[t]+e[1]));return vV({backend:n,attrs:{shape:e,value:s,dtype:r.dtype}})}const i=[{type:"float32",data:[s]}];o.map((e=>i.push({type:"int32",data:[e[0],e[1]]})));const c=new Oq(r.shape,o);return n.runWebGPUProgram(c,[r],r.dtype,i)}},Mq=DV({opType:LW.POW}),zq={kernelName:Tn,backendName:"webgpu",kernelFunc:Mq};const Lq={kernelName:En,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,o=new TV(LW.PRELU,a.shape,r.shape);return n.runWebGPUProgram(o,[a,r],"float32")}};const Pq={kernelName:Rn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:o,keepDims:s}=a;return OG(r,o,s,"prod",n)}},Bq={kernelName:On,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:o,dtype:s}=n,i=rG(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},Wq=DV({opType:LW.DIV}),Uq={kernelName:wt,backendName:"webgpu",kernelFunc:Wq},Vq=OV({opType:fU.RECIPROCAL}),Gq={kernelName:Mn,backendName:"webgpu",kernelFunc:Vq},Hq=OV({opType:fU.RELU}),jq={kernelName:zn,backendName:"webgpu",kernelFunc:Hq},Kq=OV({opType:fU.RELU6}),qq={kernelName:Vn,backendName:"webgpu",kernelFunc:Kq};class Xq{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    ")}}const Yq={kernelName:Wn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,size:s,halfPixelCenters:i}=a,[c,l]=s,u=[{type:"float32",data:[o&&c>1?1:0,o&&l>1?1:0]},{type:"float32",data:[i?.5:0]}],h=new Xq(r.shape,c,l);return n.runWebGPUProgram(h,[r],"float32",u)}};class Qq{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey="resizeBilinearBackprop_".concat(t)}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    ")}}const Zq={kernelName:Un,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,[,i,c]=r.shape,[,l,u]=o.shape,h=[s&&l>1?i-1:i,s&&u>1?c-1:c],d=[s&&l>1?l-1:l,s&&u>1?u-1:u],p=h[0]/d[0],f=h[1]/d[1],m=1/p,g=1/f,y=2*Math.ceil(m)+2,b=2*Math.ceil(g)+2,x=new Qq(r.shape,s),v=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[b]}];return n.runWebGPUProgram(x,[o],o.dtype,v)}};class Jq{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey="resizeNearest_".concat(a)}getUserCode(){let e;e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC";return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ").concat(e,";\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    ")}}const $q={kernelName:Pn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:o,halfPixelCenters:s,size:i}=a,[c,l]=i,u=[{type:"float32",data:[o&&c>1?1:0,o&&l>1?1:0]},{type:"float32",data:[o?.5:0]}],h=new Jq(r.shape,c,l,s);return n.runWebGPUProgram(h,[r],r.dtype,u)}};class eX{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey="resizeNearestNeigborBackprop_".concat(t)}getUserCode(){return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ").concat(this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)","));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ").concat(this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)","));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    ")}}const tX={kernelName:Bn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:o}=t,{alignCorners:s}=a,[,i,c]=r.shape,[,l,u]=o.shape,h=[s&&l>1?i-1:i,s&&u>1?c-1:c],d=[s&&l>1?l-1:l,s&&u>1?u-1:u],p=1/(h[0]/d[0]),f=1/(h[1]/d[1]),m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2,y=new eX(r.shape,s),b=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[p]},{type:"float32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[g]}];return n.runWebGPUProgram(y,[o],o.dtype,b)}};class nX{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return"\n      ".concat("\n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    ","\n      ").concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    ")}}const aX={kernelName:Gn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:o}=a,s=r.shape.length;if(0===s)return EV({inputs:{x:r},backend:n});const i=r.shape,c=[1,1,1,1];i.forEach(((e,t)=>{c[t+4-s]=e}));const l=Y(o,r.shape),u=[0,0,0,0];l.forEach((e=>{u[e+4-s]=1}));const h=[{type:"int32",data:u}],d=kV({inputs:{x:r},backend:n,attrs:{shape:c}}),p=new nX(c),f=n.runWebGPUProgram(p,[d],d.dtype,h);n.disposeData(d.dataId);const m=kV({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeData(f.dataId),m}};class rX{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"===typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return"\n        ".concat(yW("index")," {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ").concat(this.fillSnippet,"\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      ")}}const oX={kernelName:Oa,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:o,fillValue:s,center:i}=n,c=a,l=new rX(r.shape,s),[u,h]=_p(i,r.shape[1],r.shape[2]),d=[{type:"float32",data:[u]},{type:"float32",data:[h]},{type:"float32",data:[Math.sin(o)]},{type:"float32",data:[Math.cos(o)]}];"number"===typeof s?d.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):d.push({type:"float32",data:s});return c.runWebGPUProgram(l,[r],r.dtype,d)}},sX=OV({opType:fU.ROUND}),iX={kernelName:Hn,backendName:"webgpu",kernelFunc:sX},cX=OV({opType:fU.RSQRT,cpuKernelImpl:oG}),lX={kernelName:jn,backendName:"webgpu",kernelFunc:cX};class uX{constructor(e,t,n,a,r,o,s){let i=!(arguments.length>7&&void 0!==arguments[7])||arguments[7];this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=o,this.type=s,this.sumDupeIndices=i,this.dispatchLayout=AW(e),this.dispatch=TW(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey="scatter_".concat(n,"_").concat(a,"_").concat(this.sliceDimGreaterThanOne,"_").concat(s,"_").concat(i,"_").concat(r.length);const c=mW(r.length);this.uniforms="sliceDim : i32, strides: ".concat(c,", updatesSize: i32,"),this.updatesRank=a,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t="getIndices(".concat(e,")"),n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let a="",r="";1===this.dispatchLayout.x.length?(a="flattenedIndex",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(a="vec2<i32>(flattenedIndex, coords[1])",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");const o=Array.from({length:this.updatesRank},((e,t)=>"coords[".concat(t,"]"))),s="getUpdates(".concat(o.join(", "),")");return"\n    ".concat(r,"\n      ").concat(yW("index")," {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(").concat(t,"));\n            flattenedIndex = flattenedIndex + indexInside * ").concat(n,";\n          }\n          let updateValue =\n              ").concat(IW(this.type),"(").concat(s,");\n          let flatIndex = getOutputIndexFromCoords(").concat(a,");\n\n          ").concat(this.sumDupeIndices?hW("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));","\n        }\n      }")}}const hX={kernelName:Kn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:o}=t,{shape:s}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ph(0,r,s),d=[h/l,l];if(0===h)return n.makeTensorInfo(s,r.dtype);const p=kV({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=kV({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=f.dtype,g=vV({backend:n,attrs:{shape:d,value:0,dtype:m}}),y=[{type:"int32",data:[i]},{type:"int32",data:u},{type:"int32",data:[U(f.shape)]}],b=new uX(f.shape,i,p.shape.length,f.shape.length,u,d,m),x=n.runWebGPUProgram(b,[f,p],m,y,g),v=kV({inputs:{x:x},backend:n,attrs:{shape:s}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),v}};class dX{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey="search_sorted_".concat(t)}getUserCode(){const e="left"===this.side?"<":"<=";return"\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ".concat(e," value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ").concat(yW("index")," {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    ")}}const pX={kernelName:Xn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:o}=t,{side:s}=a,i=new dX([o.shape[0],o.shape[1]],s),c=[{type:"int32",data:[r.shape[1]]}];return n.runWebGPUProgram(i,[r,o],"int32",c)}};class fX{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error("Where for rank ".concat(this.rank," is not yet supported"));if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push("".concat(n[e])),e<this.cRank&&a.push("".concat(n[e]));e=a.join(),t=r.join()}return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(").concat(e,");\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(").concat(t,"));\n          } else {\n            setOutputAtIndex(index, getB(").concat(t,"));\n          }\n        }\n      }\n    ")}}const mX={kernelName:Yn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:o}=t,s=new fX(a.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(s,[a,r,o],Br(r.dtype,o.dtype))}},gX=OV({opType:fU.SELU}),yX={kernelName:Qn,backendName:"webgpu",kernelFunc:gX},bX=OV({opType:fU.SIGMOID}),xX={kernelName:ta,backendName:"webgpu",kernelFunc:bX},vX=OV({opType:fU.SIGN}),wX={kernelName:ea,backendName:"webgpu",kernelFunc:vX},kX=OV({opType:fU.SIN}),SX={kernelName:Jn,backendName:"webgpu",kernelFunc:kX},IX=OV({opType:fU.SINH}),CX={kernelName:$n,backendName:"webgpu",kernelFunc:IX},NX=OV({opType:fU.SOFTPLUS}),TX={kernelName:na,backendName:"webgpu",kernelFunc:NX};class EX{constructor(e,t,n,a,r,o){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(a.length);for(let i=0;i<s.length;i++)s[i]=a[r[i]];this.outputShape=s,this.newDim=r,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+="reshapedPaddedXShape : ".concat(mW(a.length),", paddedXShapeStrides : ").concat(mW(o),", "),n.map(((e,t)=>{this.uniforms+=" pad".concat(t," : vec2<i32>,")})),this.shaderKey="spaceToBatchND_".concat(r)}getUserCode(){const e=mW(this.outputShape.length),t=EG(this.newDim);return"\n      ".concat(wW(this.paddedXShape,"PaddedX"),"\n      ").concat(yW("index")," {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords").concat(this.outputShape.length,"D(").concat(e,"(").concat(t,"), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ").concat(Fq(this.xShape,!0),"\n        }\n      }\n    ")}}const RX={kernelName:oa,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:o,paddings:s}=a;P(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const i=o.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...s);for(let b=1+o.length;b<r.shape.length;++b)c.push([0,0]);const l=c.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=Fp(l,o,i,!1),h=Op(u.length,o.length,!1),d=Dp(l,o,i,!1),p=se(l),f=new EX(r.shape,l,c,u,h,p.length),m=[{type:"int32",data:u},{type:"int32",data:p}];c.map((e=>m.push({type:"int32",data:[e[0],e[1]]})));const g=n.runWebGPUProgram(f,[r],r.dtype,m),y=kV({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeData(g.dataId),y}};class AX{constructor(e,t,n){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=n,this.dispatchLayout=AW([t]),this.dispatch=TW(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.sparseSize) {\n        let indexInSegmentIds = index / uniforms.segmentSize;\n        let indexInSegment = index % uniforms.segmentSize;\n        let indexInInput = indices[indexInSegmentIds];\n        let segmentId = segmentIds[indexInSegmentIds];\n\n        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];\n        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;\n        ").concat(hW("&result[outIndex]","value",this.type),"\n      }\n    }\n  ")}}class _X{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=AW(t),this.dispatch=TW(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.segmentIdsShape) {\n        let segmentId = segmentIds[index];\n        ").concat(hW("&result[segmentId]","1","int32"),"\n      }\n    }\n  ")}}class FX{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=AW(e),this.dispatch=TW(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.size) {\n        let segmentId = index / uniforms.segmentSize;\n        let count = sameSegmentIdCount[segmentId];\n        if (count != 0) {\n          ").concat("float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);","\n        }\n      }\n    }\n  ")}}function OX(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0;const o=U(e.shape)/e.shape[0],s=e.dtype,i=U(t.shape),c=r.readSync(n.dataId),l=i>0?c[i-1]+1:0;let u;const h=e.shape.slice();h[0]=l;const d=i*o,p=vV({backend:r,attrs:{shape:h,value:0,dtype:s}});u=new AX(h,d,s);let f=[{type:"int32",data:[o]},{type:"int32",data:[d]}];const m=r.runWebGPUProgram(u,[e,t,n],s,f,p);if(a)return m;const g=vV({backend:r,attrs:{shape:[l],value:0,dtype:"int32"}});u=new _X(l,n.shape);const y=r.runWebGPUProgram(u,[n],"int32",null,g),b=vV({backend:r,attrs:{shape:h,value:0,dtype:s}});u=new FX(h,s),f=[{type:"int32",data:[o]}];const x=r.runWebGPUProgram(u,[m,y],s,f,b);return r.disposeData(m.dataId),r.disposeData(y.dataId),x}const DX={kernelName:ua,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;return OX(a,r,o,!1,n)}};const MX={kernelName:ha,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:o}=t;return OX(a,r,o,!0,n)}};class zX{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>=5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"(resRC % ".concat(t,"aShape)");const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e;r++)a.push("(".concat(n[r]," % ").concat(t,"aShape[").concat(r,"])"));return a.join()}(this.rank,"uniforms.");return"\n      ".concat(yW("index")," {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(").concat(e,"));\n        }\n      }\n    ")}}function LX(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:o}=a;if(n.shouldExecuteOnCPU([r])||"string"===r.dtype||r.shape.length>=5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>dr(e))):e,a=Ns(r.shape,r.dtype,t),s=dG(a,o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const s=new zX(r.shape,o);return n.runWebGPUProgram(s,[r],r.dtype)}const PX={kernelName:Sa,backendName:"webgpu",kernelFunc:LX};const BX={kernelName:da,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:o,defaultValue:s}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:h,outputSize:d}=Ph(0,r,i),p=!1;if("string"===o.dtype){const e=n.bufferSync(r),t=n.bufferSync(o),a=dr(n.readSync(s.dataId)[0]),f=sG(e,t,i,d,u,l,c,h,a,p);return n.makeTensorInfo(i,f.dtype,f.values)}const f=[d/u,u],m=kV({inputs:{x:r},backend:n,attrs:{shape:[l,c]}}),g=o.shape.length?kV({inputs:{x:o},backend:n,attrs:{shape:[l,u]}}):EV({inputs:{x:o},backend:n}),y=g.dtype,b=n.makeTensorInfo([],y,he(1,y)),x=kV({inputs:{x:s},backend:n,attrs:{shape:Array(f.length).fill(1)}}),v=LX({inputs:{x:x},backend:n,attrs:{reps:f}}),w=[{type:"int32",data:[c]},{type:"int32",data:h},{type:"int32",data:[U([l,u])]}];switch(l){case 0:break;case 1:{const e=new uX([l,u],c,m.shape.length,g.shape.length,h,f,y,p);n.runWebGPUProgram(e,[g,m],y,w,v)}break;default:{const e=new uX([l,u],c,m.shape.length,b.shape.length,h,f,y,p);n.runWebGPUProgram(e,[b,m],y,w,v)}{const e=new uX([l,u],c,m.shape.length,g.shape.length,h,f,y);n.runWebGPUProgram(e,[g,m],y,w,v)}}const k=kV({inputs:{x:v},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(x.dataId),n.disposeData(b.dataId),n.disposeData(v.dataId),k}};const WX={kernelName:sa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:o,axis:s}=a,i=Y(s,r.shape)[0],c=hf(r,o,i),l=r.shape.length,u=new Array(l).fill(0),h=r.shape.slice();return c.map((e=>{const t=[...h];t[i]=e;const a=dH({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,a}))}},UX=OV({opType:fU.SQRT}),VX={kernelName:aa,backendName:"webgpu",kernelFunc:UX},GX={kernelName:fa,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n,o=new FV(a.shape,fU.SQUARE);return r.runWebGPUProgram(o,[a],a.dtype)}},HX=DV({opType:LW.SQUARED_DIFFERENCE}),jX={kernelName:pa,backendName:"webgpu",kernelFunc:HX};const KX={kernelName:_a,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,o=new FV(r.shape,fU.STEP,"stepAlpha : f32,"),s=[{type:"float32",data:[n.alpha]}];return a.runWebGPUProgram(o,[r],r.dtype,s)}};class qX{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=mW(this.outputShape.length);this.uniforms="begin : ".concat(t,",  strides : ").concat(t,", "),this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?"coords * uniforms.strides[".concat(n,"] + uniforms.begin[").concat(n,"]"):"coords[".concat(t-1,"] * uniforms.strides[").concat(n,"] + uniforms.begin[").concat(n,"]")))).join(",")}return"\n       ".concat(yW("index")," {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(").concat(e,"));\n         }\n       }\n     ")}}const XX={kernelName:ga,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:o,end:s,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=Zi(r.shape,o,s,i,c,l,u,h,d);let w;if(m)w=kV({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){P(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Pi(b,x,v),t=dH({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=kV({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeData(t.dataId)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Ns(r.shape,r.dtype,e),a=lG(p,t,v,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new qX(p),t=[{type:"int32",data:b},{type:"int32",data:v}],a=n.runWebGPUProgram(e,[r],r.dtype,t);w=kV({inputs:{x:a},backend:n,attrs:{shape:f}}),n.disposeData(a.dataId)}}return w}};const YX={kernelName:ya,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:o,leftPad:s,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:h}=t,d=n.readSync(u.dataId),p=n.readSync(h.dataId),[f,m]=uG(d,p,r,o,s,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},QX=DV({opType:LW.SUB,cpuKernelImpl:hG,supportsComplex:!0}),ZX={kernelName:va,backendName:"webgpu",kernelFunc:QX},JX=OV({opType:fU.TAN}),$X={kernelName:wa,backendName:"webgpu",kernelFunc:JX},eY=OV({opType:fU.TANH}),tY={kernelName:ka,backendName:"webgpu",kernelFunc:eY};const nY={kernelName:qn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:o,updates:s}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:h}=Ph(0,o,r.shape),d=[h/l,l];if(0===h)return n.makeTensorInfo(r.shape,o.dtype);const p=[],f=kV({inputs:{x:o},backend:n,attrs:{shape:[c,i]}});p.push(f);const m=kV({inputs:{x:s},backend:n,attrs:{shape:[c,l]}});p.push(m);const g=kV({inputs:{x:r},backend:n,attrs:{shape:d}});p.push(g);const y=LX({inputs:{x:g},backend:n,attrs:{reps:Array(d.length).fill(1)}}),b=new uX([c,l],i,f.shape.length,m.shape.length,u,d,r.dtype,!1),x=[{type:"int32",data:[i]},{type:"int32",data:u},{type:"int32",data:[U([c,l])]}],v=n.runWebGPUProgram(b,[m,f],g.dtype,x,y);p.push(v);const w=kV({inputs:{x:v},backend:n,attrs:{shape:r.shape}});return p.forEach((e=>n.disposeData(e.dataId))),w}};class aY{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return"\n        ".concat(yW("index")," {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      ")}}class rY{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return"\n        ".concat(yW("index")," {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      ")}}function oY(e,t){null!==t&&e.disposeData(t.dataId)}function sY(e){let t=1;for(;t<e;)t*=2;return t}const iY={kernelName:Ia,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:o,sorted:s}=a,i=r.shape,c=i[i.length-1];if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),[t,a]=pG(e,i,r.dtype,o,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===o)return i[i.length-1]=0,[n.makeTensorInfo(i,r.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(1===c)return[r,vV({attrs:{shape:i,dtype:"int32",value:0},backend:n})];const l=U(i)/c,u=kV({inputs:{x:r},attrs:{shape:[l,c]},backend:n}),h=sY(o),d=sY(c);let p=null;const f=()=>null===p?[u,u]:[u,p],m=(e,t,a)=>{const r=f(),o=new aY(a),s=[{type:"int32",data:[c]},{type:"int32",data:[null===p?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],i=p;p=n.runWebGPUProgram(o,r,"int32",s),oY(n,i)};for(let v=1;v<h;v*=2){const e=2*v;for(let t=v;t>=1;t/=2)m(e,t,[l,d])}for(let v=d;v>h;v/=2){const e=f(),t=new rY([l,v/2]),a=[{type:"int32",data:[c]},{type:"int32",data:[null===p?1:0]},{type:"int32",data:[h]}],r=p;p=n.runWebGPUProgram(t,e,"int32",a),oY(n,r);const o=h/2,s=2*o;for(let n=o;n>=1;n/=2)m(s,n,p.shape)}let g=p;p=dH({inputs:{x:p},backend:n,attrs:{begin:0,size:[l,o]}}),oY(n,g);let y=vK({inputs:{x:u,indices:p},backend:n,attrs:{axis:1,batchDims:1}});oY(n,u);const b=i.slice(0,-1);b.push(o),g=p,p=kV({inputs:{x:p},attrs:{shape:b},backend:n}),oY(n,g);const x=y;return y=kV({inputs:{x:y},attrs:{shape:b},backend:n}),oY(n,x),[y,p]}};class cY{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ".concat(yW("index")," {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        ")}}const lY={kernelName:Ca,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:c,outputShape:l}=a,[u,h,d,p]=r.shape,[f,m]=null!=l?l:[h,d],g=new cY([u,f,m,p]),y="nearest"===s?1:2;let b;switch(i){case"constant":default:b=1;break;case"reflect":b=2;break;case"wrap":b=3;break;case"nearest":b=4}const x=[{type:"int32",data:[y]},{type:"int32",data:[b]},{type:"float32",data:[c]}];return n.runWebGPUProgram(g,[r,o],"float32",x)}};const uY={kernelName:Ea,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:o}=a;o<0&&(o+=r.shape.length);const s=r,i=s.shape.length,c=r.shape[o],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==o&&(l[u++]=s.shape[m]);const h=[],d=new Array(i).fill(0),p=s.shape.slice();p[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){d[o]=m;const e=dH({inputs:{x:s},backend:n,attrs:{begin:d,size:p}}),t=kV({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeData(e.dataId))),f}};class hY{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=AW(e),this.dispatch=TW(this.dispatchLayout,e,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error("UnsortedSegmentSum only supports float32 and int32\n              types, does not support ".concat(n," type."));this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return"\n    ".concat(yW("index")," {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ").concat(hW("&result[flatIndex]","value",this.type),"\n        }\n      }\n    }\n  ")}}const dY={kernelName:Ra,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:o}=t,{numSegments:s}=a,i=r.shape.length,c=[];let l=0;const u=Cl([l],i);let h=r;null!=u&&(h=RG({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(h),l=Tl(1,i)[0]);const d=Cf(h.shape,l,s),p=U([h.shape[l]]),f=kV({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});c.push(f);const m=r.dtype,g=[f.shape[0],s],y=vV({backend:n,attrs:{shape:g,value:0,dtype:m}}),b=new hY(f.shape,g,m),x=[{type:"int32",data:[s]},{type:"int32",data:[U(f.shape)]}],v=n.runWebGPUProgram(b,[f,o],m,x,y),w=kV({inputs:{x:v},backend:n,attrs:{shape:d}});c.push(v);let k=w;if(null!=u){c.push(w);const e=Nl(u);k=RG({inputs:{x:k},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeData(e.dataId))),k}},pY=[CV,yG,xG,wG,SG,CG,DG,MG,LG,PG,WG,VG,HG,KG,XG,aH,rH,iH,cH,lH,fH,yH,xH,IH,NH,RH,_V,FH,PH,HH,YH,ZH,$H,ej,tj,aj,oj,ij,pj,fj,mj,yj,Ij,Cj,wj,Tj,Rj,Fj,Oj,Mj,Wj,Vj,Gj,jj,qj,Yj,Zj,$j,nK,wV,rK,uK,sK,cK,fK,mK,gK,bK,wK,SK,CK,RV,NK,MH,EK,AK,FK,OK,MK,LK,BK,GK,UK,jK,qK,YK,$K,tq,$G,aq,rq,lq,oq,cq,uq,tH,hq,pq,mq,yq,kq,Lj,Sq,Iq,Cq,wH,Tq,Aq,_q,Dq,zq,Lq,Pq,Bq,SH,Uq,Gq,jq,qq,SV,Yq,Zq,$q,tX,aX,oX,iX,lX,hX,pX,mX,yX,xX,wX,SX,CX,pH,KX,XX,YX,wq,TX,RX,DX,MX,BX,WX,VX,GX,jX,ZX,Bj,$X,tY,nY,PX,iY,lY,AG,uY,dY,Rq];for(const n of pY)Ha(n);var fY=function(e,t){return(fY=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(e,t)};function mY(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}fY(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var gY=function(){return(gY=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function yY(e,t,n,a){return new(n||(n=Promise))((function(r,o){function s(e){try{c(a.next(e))}catch(e){o(e)}}function i(e){try{c(a.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,i)}c((a=a.apply(e,t||[])).next())}))}function bY(e,t){var n,a,r,o,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,a&&(r=2&o[0]?a.return:o[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,o[1])).done)return r;switch(a=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,a=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((r=(r=s.trys).length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){s.label=o[1];break}if(6===o[0]&&s.label<r[1]){s.label=r[1],r=o;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(o);break}r[2]&&s.ops.pop(),s.trys.pop();continue}o=t.call(e,s)}catch(e){o=[6,e],a=0}finally{n=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}function xY(e,t,n){if(n||2===arguments.length)for(var a,r=0,o=t.length;r<o;r++)!a&&r in t||(a||(a=Array.prototype.slice.call(t,0,r)),a[r]=t[r]);return e.concat(a||Array.prototype.slice.call(t))}var vY=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],wY=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],kY={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},SY={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},IY=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],CY=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function NY(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function TY(e){return yY(this,void 0,void 0,(function(){var t,n;return bY(this,(function(a){switch(a.label){case 0:return t=document.createElement("canvas"),e instanceof Ar?[4,Fi(e,t)]:[3,2];case 1:return a.sent(),[3,3];case 2:t.width=NY(e.width),t.height=NY(e.height),n=t.getContext("2d"),e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0),a.label=3;case 3:return[2,t]}}))}))}function EY(e){return yY(this,void 0,void 0,(function(){var t,n,a,r,o,s;return bY(this,(function(i){switch(i.label){case 0:return e instanceof Ar?(t=e.shape.slice(0,2),n=t[0],a=t[1],r=ImageData.bind,[4,Fi(e)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,i.sent(),a,n]))];case 2:return o=document.createElement("canvas"),s=o.getContext("2d"),o.width=NY(e.width),o.height=NY(e.height),s.drawImage(e,0,0),[2,s.getImageData(0,0,o.width,o.height)]}}))}))}function RY(e){return yY(this,void 0,void 0,(function(){var t;return bY(this,(function(n){switch(n.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,TY(e)]:[3,2];case 1:return t=n.sent(),[3,3];case 2:t=e,n.label=3;case 3:return[2,Oi(t,4)]}}))}))}function AY(e){if(e<0||e>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(e));if(!Number.isInteger(e))throw new Error("Mask value must be an integer but got ".concat(e))}var _Y={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},FY=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return yY(this,void 0,void 0,(function(){return bY(this,(function(e){return[2,this.mask]}))}))},e.prototype.toImageData=function(){return yY(this,void 0,void 0,(function(){return bY(this,(function(e){return[2,EY(this.mask)]}))}))},e.prototype.toTensor=function(){return yY(this,void 0,void 0,(function(){return bY(this,(function(e){return[2,RY(this.mask)]}))}))},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function OY(e){return AY(e),"person"}var DY=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new nW.Pose({locateFile:function(t,n){if(e.solutionPath){var a=e.solutionPath.replace(/\/+$/,"");return"".concat(a,"/").concat(t)}return"".concat(n,"/").concat(t)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){if(n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks)n.poses=[];else{var t=n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:OY,mask:new FY(e.segmentationMask)}),n.poses=[t]}}))}return e.prototype.translateOutput=function(e,t){var n=this,a={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:wY[t]}}))};return null!=t&&(a.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:wY[t]}}))),a},e.prototype.estimatePoses=function(e,t,n){return yY(this,void 0,void 0,(function(){var a,r;return bY(this,(function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Ar?(r=ImageData.bind,[4,Fi(e)]):[3,2];case 1:return a=new(r.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:a=e,o.label=3;case 3:return e=a,[4,this.poseSolution.send({image:e},n)];case 4:return o.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function MY(e){return yY(this,void 0,void 0,(function(){var t,n;return bY(this,(function(a){switch(a.label){case 0:return t=function(e){if(null==e)return gY({},_Y);var t=gY({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=_Y.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=_Y.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=_Y.smoothSegmentation),null==t.modelType&&(t.modelType=_Y.modelType),t}(e),[4,(n=new DY(t)).initialize()];case 1:return a.sent(),[2,n]}}))}))}function zY(e){return e instanceof Ar?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function LY(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function PY(e){return e instanceof Ar?e:Oi(e)}function BY(e,t,n){return WY(n,"inputResolution"),[1/n.width*e[0][0]*t.width,1/n.height*e[0][1]*t.width,e[0][3]*t.width,1/n.width*e[1][0]*t.height,1/n.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function WY(e,t){P(0!==e.width,(function(){return"".concat(t," width cannot be 0.")})),P(0!==e.height,(function(){return"".concat(t," height cannot be 0.")}))}function UY(e,t,n){var a=n.rotationVectorStartKeypointIndex,r=n.rotationVectorEndKeypointIndex,o=e.locationData,s=o.relativeKeypoints[a].x*t.width,i=o.relativeKeypoints[a].y*t.height,c=o.relativeKeypoints[r].x*t.width,l=o.relativeKeypoints[r].y*t.height,u=2*Math.sqrt((c-s)*(c-s)+(l-i)*(l-i)),h=function(e,t,n){var a,r=e.locationData,o=n.rotationVectorStartKeypointIndex,s=n.rotationVectorEndKeypointIndex;a=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var i=r.relativeKeypoints[o].x*t.width,c=r.relativeKeypoints[o].y*t.height,l=r.relativeKeypoints[s].x*t.width,u=r.relativeKeypoints[s].y*t.height;return LY(a-Math.atan2(-(u-c),l-i))}(e,t,n);return{xCenter:s/t.width,yCenter:i/t.height,width:u/t.width,height:u/t.height,rotation:h}}function VY(e){if(16!==e.length)throw new Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function GY(e,t,n,a,r,o,s){return e[t][r]*(e[n][o]*e[a][s]-e[n][s]*e[a][o])}function HY(e,t,n){var a=(t+1)%4,r=(t+2)%4,o=(t+3)%4,s=(n+1)%4,i=(n+2)%4,c=(n+3)%4;return GY(e,a,r,o,s,i,c)+GY(e,r,o,a,s,i,c)+GY(e,o,a,r,s,i,c)}function jY(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var a=[],r=0,o=e;r<o.length;r++){var s=o[r],i=s.x-.5,c=s.y-.5,l=n.ignoreRotation?0:t.rotation,u=Math.cos(l)*i-Math.sin(l)*c,h=Math.sin(l)*i+Math.cos(l)*c;u=u*t.width+t.xCenter,h=h*t.height+t.yCenter;var d=s.z*t.width,p=gY({},s);p.x=u,p.y=h,p.z=d,a.push(p)}return a}function KY(e,t){var n=function(e,t,n,a){var r=(a-n)/255;return{scale:r,offset:n-0*r}}(0,0,t[0],t[1]);return bo((function(){return As(Os(e,n.scale),n.offset)}))}function qY(e,t,n){var a,r,o,s,i,c,l,u,h,d,p,f,m=t.outputTensorSize,g=t.keepAspectRatio,y=t.borderMode,b=t.outputTensorFloatRange,x=zY(e),v=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(x,n),w=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var a=t.height,r=t.width;WY(t,"targetSize"),WY(e,"roi");var o,s,i=a/r,c=e.height/e.width,l=0,u=0;return i>c?(o=e.width,s=e.width*i,u=(1-c/i)/2):(o=e.height/i,s=e.height,l=(1-i/c)/2),e.width=o,e.height=s,{top:u,left:l,right:l,bottom:u}}(v,m,g),k=(a=v,r=x.width,o=x.height,s=a.width,i=a.height,c=Math.cos(a.rotation),l=Math.sin(a.rotation),u=a.xCenter,h=a.yCenter,d=1/r,p=1/o,(f=new Array(16))[0]=s*c*1*d,f[1]=-i*l*d,f[2]=0,f[3]=(-.5*s*c*1+.5*i*l+u)*d,f[4]=s*l*1*p,f[5]=i*c*p,f[6]=0,f[7]=(-.5*i*c-.5*s*l*1+h)*p,f[8]=0,f[9]=0,f[10]=s*d,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,VY(f));return{imageTensor:bo((function(){var t=PY(e),n=Fh(BY(k,x,m),[1,8]),a="zero"===y?"constant":"nearest",r=fp.transform(Ml(Ts(t,"float32")),n,"bilinear",a,0,[m.height,m.width]);return null!=b?KY(r,b):r})),padding:w,transformationMatrix:k}}function XY(e,t,n,a){return 1===a?.5*(e+t):e+(t-e)*n/(a-1)}function YY(e){return null!=e&&null!=e.currentTime}function QY(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,a=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,s=0;s<e.length;++s){var i=e[s];n=Math.min(n,i.x),a=Math.max(a,i.x),r=Math.min(r,i.y),o=Math.max(o,i.y),t.locationData.relativeKeypoints.push({x:i.x,y:i.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:r,xMax:a,yMax:o,width:a-n,height:o-r},t}function ZY(e,t,n,a){return yY(this,void 0,void 0,(function(){var a,r,o,s,i;return bY(this,(function(c){switch(c.label){case 0:return e.sort((function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)})),a=Fh(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),r=_h(e.map((function(e){return e.score[0]}))),[4,fp.nonMaxSuppressionAsync(a,r,t,n)];case 1:return[4,(o=c.sent()).array()];case 2:return s=c.sent(),i=e.filter((function(e,t){return s.indexOf(t)>-1})),xo([a,r,o]),[2,i]}}))}))}function JY(e,t){return e.map((function(e){var n=gY(gY({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}function $Y(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,h,d,p,f,m,g,y,b,x,v,w,k,S,I,C,N;return bY(this,(function(T){switch(T.label){case 0:if(a=Nh(t,[0]),r=a.shape,o=r[0],s=r[1],i=r[2],e.length!==i)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(e.length,", heatmap length: ").concat(i));return c=[],[4,a.buffer()];case 1:for(l=T.sent(),u=0;u<e.length;u++)if(h=e[u],d=gY({},h),c.push(d),p=Math.trunc(d.x*s),f=Math.trunc(d.y*o),!(p<0||p>=s||f<0||p>=o)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,p-m),y=Math.min(s,p+m+1),b=Math.max(0,f-m),x=Math.min(o,f+m+1),v=0,w=0,k=0,S=0,I=b;I<x;++I)for(C=g;C<y;++C)N=l.get(I,C,u),v+=N,S=Math.max(S,N),w+=C*N,k+=I*N;S>=n.minConfidenceToRefine&&v>0&&(d.x=w/s/v,d.y=k/o/v)}return a.dispose(),[2,c]}}))}))}function eQ(e,t){var n=t.left,a=t.top,r=t.left+t.right,o=t.top+t.bottom;return e.map((function(e){return gY(gY({},e),{x:(e.x-n)/(1-r),y:(e.y-a)/(1-o),z:e.z/(1-r)})}))}function tQ(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o,s,i;return bY(this,(function(c){switch(c.label){case 0:return a=e[0],r=e[1],o=function(e,t,n){return bo((function(){var a,r,o,s;n.reverseOutputOrder?(r=Nh(Fc(e,[0,n.boxCoordOffset+0],[-1,1])),a=Nh(Fc(e,[0,n.boxCoordOffset+1],[-1,1])),s=Nh(Fc(e,[0,n.boxCoordOffset+2],[-1,1])),o=Nh(Fc(e,[0,n.boxCoordOffset+3],[-1,1]))):(a=Nh(Fc(e,[0,n.boxCoordOffset+0],[-1,1])),r=Nh(Fc(e,[0,n.boxCoordOffset+1],[-1,1])),o=Nh(Fc(e,[0,n.boxCoordOffset+2],[-1,1])),s=Nh(Fc(e,[0,n.boxCoordOffset+3],[-1,1]))),r=As(Os(Fs(r,n.xScale),t.w),t.x),a=As(Os(Fs(a,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(o=Os(Dl(Fs(o,n.hScale)),t.h),s=Os(Dl(Fs(s,n.wScale)),t.w)):(o=Os(Fs(o,n.hScale),t.h),s=Os(Fs(s,n.wScale),t.h));var i=Ys(a,Fs(o,2)),c=Ys(r,Fs(s,2)),l=As(a,Fs(o,2)),u=As(r,Fs(s,2)),h=Rc([Nc(i,[n.numBoxes,1]),Nc(c,[n.numBoxes,1]),Nc(l,[n.numBoxes,1]),Nc(u,[n.numBoxes,1])],1);if(n.numKeypoints)for(var d=0;d<n.numKeypoints;++d){var p=n.keypointCoordOffset+d*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=Nh(Fc(e,[0,p],[-1,1])),m=Nh(Fc(e,[0,p+1],[-1,1]))):(m=Nh(Fc(e,[0,p],[-1,1])),f=Nh(Fc(e,[0,p+1],[-1,1])));var g=As(Os(Fs(f,n.xScale),t.w),t.x),y=As(Os(Fs(m,n.yScale),t.h),t.y);h=Rc([h,Nc(g,[n.numBoxes,1]),Nc(y,[n.numBoxes,1])],1)}return h}))}(r,t,n),s=bo((function(){var e=a;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=jc(a,-n.scoreClippingThresh,n.scoreClippingThresh)),e=_c(e)):e})),[4,nQ(o,s,n)];case 1:return i=c.sent(),xo([o,s]),[2,i]}}))}))}function nQ(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,h,d,p,f;return bY(this,(function(m){switch(m.label){case 0:return a=[],[4,e.data()];case 1:return r=m.sent(),[4,t.data()];case 2:for(o=m.sent(),s=0;s<n.numBoxes;++s)if(!(null!=n.minScoreThresh&&o[s]<n.minScoreThresh||(i=s*n.numCoords,c=aQ(r[i+0],r[i+1],r[i+2],r[i+3],o[s],n.flipVertically,s),(l=c.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((u=c.locationData).relativeKeypoints=[],h=n.numKeypoints*n.numValuesPerKeypoint,d=0;d<h;d+=n.numValuesPerKeypoint)p=i+n.keypointCoordOffset+d,f={x:r[p+0],y:n.flipVertically?1-r[p+1]:r[p+1]},u.relativeKeypoints.push(f);a.push(c)}return[2,a]}}))}))}function aQ(e,t,n,a,r,o,s){return{score:[r],ind:s,locationData:{relativeBoundingBox:{xMin:t,yMin:o?1-n:e,xMax:a,yMax:o?1-e:n,width:a-t,height:n-e}}}}function rQ(e,t){return"none"===e?t:function(e){return 1/(1+Math.exp(-e))}(t)}function oQ(e,t,n,a){return yY(this,void 0,void 0,(function(){var r,o,s,i,c,l,u,h;return bY(this,(function(d){switch(d.label){case 0:return n=n||t.flipHorizontally||!1,a=a||t.flipVertically||!1,r=e.size,o=r/t.numLandmarks,[4,e.data()];case 1:for(s=d.sent(),i=[],c=0;c<t.numLandmarks;++c)l=c*o,(h={x:0,y:0}).x=n?t.inputImageWidth-s[l]:s[l],o>1&&(h.y=a?t.inputImageHeight-s[l+1]:s[l+1]),o>2&&(h.z=s[l+2]),o>3&&(h.score=rQ(t.visibilityActivation,s[l+3])),i.push(h);for(u=0;u<i.length;++u)(h=i[u]).x=h.x/t.inputImageWidth,h.y=h.y/t.inputImageHeight,h.z=h.z/t.inputImageWidth/(t.normalizeZ||1);return[2,i]}}))}))}function sQ(e,t,n){var a=e.width,r=e.height,o=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(o=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),LY(e)}(o,n)),0===o)e.xCenter=e.xCenter+a*n.shiftX,e.yCenter=e.yCenter+r*n.shiftY;else{var s=(t.width*a*n.shiftX*Math.cos(o)-t.height*r*n.shiftY*Math.sin(o))/t.width,i=(t.width*a*n.shiftX*Math.sin(o)+t.height*r*n.shiftY*Math.cos(o))/t.height;e.xCenter=e.xCenter+s,e.yCenter=e.yCenter+i}if(n.squareLong){var c=Math.max(a*t.width,r*t.height);a=c/t.width,r=c/t.height}else if(n.squareShort){var l=Math.min(a*t.width,r*t.height);a=l/t.width,r=l/t.height}return e.width=a*n.scaleX,e.height=r*n.scaleY,e}function iQ(e,t){return e.map((function(e){var n=gY(gY({},e),{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}var cQ=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),lQ=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new cQ(this.getAlpha(this.minCutOff)),this.dx=new cQ(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var a=Math.trunc(t);if(this.lastTimestamp>=a)return e;0!==this.lastTimestamp&&0!==a&&(this.frequency=1/(1e-6*(a-this.lastTimestamp))),this.lastTimestamp=a;var r=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,o=this.dx.applyWithAlpha(r,this.getAlpha(this.derivateCutOff)),s=this.minCutOff+this.beta*Math.abs(o),i=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(o):null;return this.x.applyWithAlpha(e,this.getAlpha(s),i)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),uQ=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var a=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return xY([],e,!0);r=1/n}return e.map((function(e,n){var o=gY(gY({},e),{x:a.xFilters[n].apply(e.x,t,r),y:a.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(o.z=a.zFilters[n].apply(e.z,t,r)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new lQ(t.config)})),this.yFilters=e.map((function(e){return new lQ(t.config)})),this.zFilters=e.map((function(e){return new lQ(t.config)})))},e}(),hQ=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new cQ(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var a,r=Math.trunc(t);if(this.lastTimestamp>=r)return e;if(-1===this.lastTimestamp)a=1;else{for(var o=e*n-this.lastValue*this.lastValueScale,s=r-this.lastTimestamp,i=o,c=s,l=(1+this.window.length)*(1e6/30),u=0,h=this.window;u<h.length;u++){var d=h[u];if(c+d.duration>l)break;i+=d.distance,c+=d.duration}var p=i/(1e-6*c);a=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:o,duration:s}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=r,this.lowPassFilter.applyWithAlpha(e,a)},e}(),dQ=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var a=this;if(null==e)return this.reset(),null;var r=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return xY([],e,!0);r=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var o=gY(gY({},e),{x:a.xFilters[n].apply(e.x,t,r),y:a.yFilters[n].apply(e.y,t,r)});return null!=e.z&&(o.z=a.zFilters[n].apply(e.z,t,r)),o}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new hQ(t.config)})),this.yFilters=e.map((function(e){return new hQ(t.config)})),this.zFilters=e.map((function(e){return new hQ(t.config)})))},e}(),pQ=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new dQ(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new uQ(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,a,r){if(void 0===a&&(a=!1),null==e)return this.keypointsFilter.reset(),null;var o=null!=r?function(e,t){return(e.width*t.width+e.height*t.height)/2}(r,n):1,s=a?JY(e,n):e,i=this.keypointsFilter.apply(s,t,o);return a?iQ(i,n):i},e}(),fQ=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new cQ(t.alpha)})));for(var n=[],a=0;a<e.length;++a){var r=e[a],o=gY({},r);o.score=this.visibilityFilters[a].apply(r.score),n.push(o)}return n},e}(),mQ={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},gQ={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},yQ={maxPoses:1,flipHorizontal:!1},bQ={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},xQ={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},vQ={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},wQ={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},kQ={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},SQ={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},IQ={kernelSize:7,minConfidenceToRefine:.5},CQ={alpha:.1},NQ={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},TQ={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},EQ={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},RQ={activation:"none"},AQ={combineWithPreviousRatio:.7},_Q=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return yY(this,void 0,void 0,(function(){return bY(this,(function(e){return[2,TY(this.mask)]}))}))},e.prototype.toImageData=function(){return yY(this,void 0,void 0,(function(){return bY(this,(function(e){return[2,EY(this.mask)]}))}))},e.prototype.toTensor=function(){return yY(this,void 0,void 0,(function(){return bY(this,(function(e){return[2,this.mask]}))}))},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function FQ(e){return AY(e),"person"}var OQ=function(){function e(e,t,n,a,r,o){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.enableSegmentation=a,this.smoothSegmentation=r,this.modelType=o,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],n=0;n<e.numLayers;){for(var a=[],r=[],o=[],s=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var c=XY(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)o.push(1),o.push(2),o.push(.5),s.push(.1),s.push(c),s.push(c);else{for(var l=0;l<e.aspectRatios.length;++l)o.push(e.aspectRatios[l]),s.push(c);if(e.interpolatedScaleAspectRatio>0){var u=i===e.strides.length-1?1:XY(e.minScale,e.maxScale,i+1,e.strides.length);s.push(Math.sqrt(c*u)),o.push(e.interpolatedScaleAspectRatio)}}i++}for(var h=0;h<o.length;++h){var d=Math.sqrt(o[h]);a.push(s[h]/d),r.push(s[h]*d)}var p=0,f=0;if(e.featureMapHeight.length>0)p=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];p=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<p;++g)for(var y=0;y<f;++y)for(var b=0;b<a.length;++b){var x={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/p,width:0,height:0};e.fixedAnchorSize?(x.width=1,x.height=1):(x.width=r[b],x.height=a[b]),t.push(x)}n=i}return t}(mQ);var s=_h(this.anchors.map((function(e){return e.width}))),i=_h(this.anchors.map((function(e){return e.height}))),c=_h(this.anchors.map((function(e){return e.xCenter}))),l=_h(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:c,y:l,w:s,h:i},this.prevFilteredSegmentationMask=this.enableSegmentation?Fh([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,h,d,p,f,m,g,y,b,x,v,w,k,S,I,C;return bY(this,(function(N){switch(N.label){case 0:return a=function(e){var t;if(null==(t=null==e?yQ:gY({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=a.maxPoses,this.timestamp=null!=n?1e3*n:YY(e)?1e6*e.currentTime:null,r=zY(e),o=bo((function(){return Ts(PY(e),"float32")})),null!=(s=this.regionOfInterest)?[3,2]:[4,this.detectPose(o)]);case 1:if(0===(i=N.sent()).length)return this.reset(),o.dispose(),[2,[]];c=i[0],s=this.poseDetectionToRoi(c,r),N.label=2;case 2:return[4,this.poseLandmarksByRoi(s,o)];case 3:return l=N.sent(),o.dispose(),null==l?(this.reset(),[2,[]]):(u=l.landmarks,h=l.auxiliaryLandmarks,d=l.poseScore,p=l.worldLandmarks,f=l.segmentationMask,m=this.poseLandmarkFiltering(u,h,p,r),g=m.actualLandmarksFiltered,y=m.auxiliaryLandmarksFiltered,b=m.actualWorldLandmarksFiltered,x=this.poseLandmarksToRoi(y,r),this.regionOfInterest=x,v=this.smoothSegmentation&&null!=f?this.poseSegmentationFiltering(f):f,null!=(w=null!=g?JY(g,r):null)&&w.forEach((function(e,t){e.name=wY[t]})),null!=(k=b)&&k.forEach((function(e,t){e.name=wY[t]})),S={score:d,keypoints:w,keypoints3D:k},null!==v&&(I=bo((function(){var e=Ml(v,2),t=Ru(e,[[0,0],[0,0],[0,1]]);return vu(t,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||xo(v),C={maskValueToLabel:FQ,mask:new _Q(I)},S.segmentation=C),[2,[S]])}}))}))},e.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return 0===t.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=function(e,t,n){return"webgl"===wo()?function(e,t,n){var a=n.combineWithPreviousRatio.toFixed(2),r={variableNames:["prevMask","newMask"],outputShape:e.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * ".concat(a,");\n\n      setOutput(outputValue);\n    }\n")},o=So();return bo((function(){var n=o.compileAndRun(r,[e,t]);return go().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}))}(e,t,n):bo((function(){var a=Ys(t,.5),r=Ms(a),o=Ys(1,xu(1,Os(r,As(5.68842,Os(r,As(-.748699,Os(r,As(-57.8051,Os(r,As(291.309,Os(r,-624.717)))))))))));return As(t,Os(Ys(e,t),Os(o,n.combineWithPreviousRatio)))}))}(t,e,AQ),xo(e)),xo(t),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),xo([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(xo(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=Fh([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return yY(this,void 0,void 0,(function(){var t,n,a,r,o,s,i,c,l,u;return bY(this,(function(h){switch(h.label){case 0:return t=qY(e,vQ),n=t.imageTensor,a=t.padding,r=this.detectorModel.predict(n),o=function(e){return bo((function(){var t=function(e){return bo((function(){return[Fc(e,[0,0,0],[1,-1,1]),Fc(e,[0,0,1],[1,-1,-1])]}))}(e),n=t[0],a=t[1];return{boxes:Nh(a),logits:Nh(n)}}))}(r),s=o.boxes,[4,tQ([i=o.logits,s],this.anchorTensor,bQ)];case 1:return 0===(c=h.sent()).length?(xo([n,r,i,s]),[2,c]):[4,ZY(c,this.maxPoses,.3)];case 2:return l=h.sent(),u=function(e,t){void 0===e&&(e=[]);for(var n=t.left,a=t.top,r=t.left+t.right,o=t.top+t.bottom,s=0;s<e.length;s++){var i=e[s],c=i.locationData.relativeBoundingBox,l=(c.xMin-n)/(1-r),u=(c.yMin-a)/(1-o),h=c.width/(1-r),d=c.height/(1-o);c.xMin=l,c.yMin=u,c.width=h,c.height=d,c.xMax=l+h,c.yMax=u+d;var p=i.locationData.relativeKeypoints;p&&p.forEach((function(e){var t=(e.x-n)/(1-r),s=(e.y-a)/(1-o);e.x=t,e.y=s}))}return e}(l,a),xo([n,r,i,s]),[2,u]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return sQ(UY(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,xQ)},e.prototype.poseLandmarksByRoi=function(e,t){return yY(this,void 0,void 0,(function(){var n,a,r,o,s,i,c,l,u,h,d,p,f,m;return bY(this,(function(g){switch(g.label){case 0:if(n=zY(t),a=qY(t,wQ,e),r=a.imageTensor,o=a.padding,s=a.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return i=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&i.push("activation_segmentation"),c=this.landmarkModel.execute(r,i),[4,this.tensorsToPoseLandmarksAndSegmentation(c)];case 1:return null==(l=g.sent())?(xo(c),xo(r),[2,null]):(u=l.landmarks,h=l.auxiliaryLandmarks,d=l.poseScore,p=l.worldLandmarks,f=l.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(n,e,o,s,u,h,p,f)]);case 2:return m=g.sent(),xo(c),xo(r),[2,gY({poseScore:d},m)]}}))}))},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,n,a,r,o,s,i){return yY(this,void 0,void 0,(function(){var c,l,u,h,d,p;return bY(this,(function(f){return c=eQ(r,n),l=eQ(o,n),u=jY(c,t),h=jY(l,t),d=function(e,t){for(var n=[],a=0,r=e;a<r.length;a++){var o=r[a],s=o.x,i=o.y,c=t.rotation,l=Math.cos(c)*s-Math.sin(c)*i,u=Math.sin(c)*s+Math.cos(c)*i,h=gY({},o);h.x=l,h.y=u,n.push(h)}return n}(s,t),p=null,this.enableSegmentation&&(p=bo((function(){var t=i.shape,n=t[0],r=t[1],o=function(e){var t=VY(new Array(16).fill(0));t[0][0]=HY(e,0,0),t[1][0]=-HY(e,0,1),t[2][0]=HY(e,0,2),t[3][0]=-HY(e,0,3),t[0][2]=HY(e,2,0),t[1][2]=-HY(e,2,1),t[2][2]=HY(e,2,2),t[3][2]=-HY(e,2,3),t[0][1]=-HY(e,1,0),t[1][1]=HY(e,1,1),t[2][1]=-HY(e,1,2),t[3][1]=HY(e,1,3),t[0][3]=-HY(e,3,0),t[1][3]=HY(e,3,1),t[2][3]=-HY(e,3,2),t[3][3]=HY(e,3,3);for(var n=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],a=0;a<t.length;a++)for(var r=0;r<t.length;r++)t[a][r]/=n;return t}(a),s=Fh(BY(o,{width:r,height:n},e),[1,8]),c=[1,n,r,1];return Nh(fp.transform(Nc(i,c),s,"bilinear","constant",0,[e.height,e.width]),[0,3])})),xo(i)),[2,{landmarks:u,auxiliaryLandmarks:h,worldLandmarks:d,segmentationMask:p}]}))}))},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return yY(this,void 0,void 0,(function(){var t,n,a,r,o,s,i,c,l,u,h,d,p;return bY(this,(function(f){switch(f.label){case 0:return t=e[0],n=e[1],a=e[2],r=e[3],o=this.enableSegmentation?e[4]:null,[4,n.data()];case 1:return(s=f.sent()[0])<.5?[2,null]:[4,oQ(t,kQ)];case 2:return[4,$Y(f.sent(),a,IQ)];case 3:return i=f.sent(),c=i.slice(0,33),l=i.slice(33,35),[4,oQ(r,SQ)];case 4:return u=f.sent(),h=u.slice(0,33),d=function(e,t,n){void 0===n&&(n=!0);for(var a=[],r=0;r<e.length;r++){var o=gY({},t[r]);n&&(o.score=e[r].score),a.push(o)}return a}(c,h,!0),p=this.enableSegmentation?function(e,t){return bo((function(){var n=Nh(e,[0]),a=n.shape[2];if(1===a){var r=n;switch(t.activation){case"none":break;case"sigmoid":r=_c(r);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(t.activation,")"))}return Nh(r,[2])}throw new Error("Unsupported number of tensor channels ".concat(a))}))}(o,RQ):null,[2,{landmarks:c,auxiliaryLandmarks:l,poseScore:s,worldLandmarks:d,segmentationMask:p}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return sQ(UY(QY(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,xQ)},e.prototype.poseLandmarkFiltering=function(e,t,n,a){var r,o,s;if(null!=this.timestamp&&this.enableSmoothing){var i=UY(QY(t),a,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new fQ(CQ)),r=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new fQ(CQ)),o=this.visibilitySmoothingFilterAuxiliary.apply(t),s=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new pQ(NQ)),r=this.landmarksSmoothingFilterActual.apply(r,this.timestamp,a,!0,i),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new pQ(TQ)),o=this.landmarksSmoothingFilterAuxiliary.apply(o,this.timestamp,a,!0,i),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new pQ(EQ)),s=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else r=e,o=t,s=n;return{actualLandmarksFiltered:r,auxiliaryLandmarksFiltered:o,actualWorldLandmarksFiltered:s}},e}();function DQ(e){return yY(this,void 0,void 0,(function(){var t,n,a,r,o,s;return bY(this,(function(i){switch(i.label){case 0:return t=function(e){var t=gY({},null==e?gQ:e);if(null==t.enableSmoothing&&(t.enableSmoothing=gQ.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=gQ.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=gQ.smoothSegmentation),null==t.modelType&&(t.modelType=gQ.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=gQ.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e),n="string"==typeof t.detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,a="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([oS(t.detectorModelUrl,{fromTFHub:n}),oS(t.landmarkModelUrl,{fromTFHub:a})])];case 1:return r=i.sent(),o=r[0],s=r[1],[2,new OQ(o,s,t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}}))}))}var MQ,zQ,LQ,PQ=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var a=n[t];if(a<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(a))}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var a=Array.from(Array(t[0].length).keys()),r=[],o=0,s=Array.from(Array(e.length).keys());o<s.length;o++){var i=s[o];if(0!==a.length){for(var c=-1,l=-1,u=0,h=a;u<h.length;u++){var d=h[u],p=t[i][d];p>=this.minSimilarity&&p>l&&(c=d,l=p)}if(c>=0){var f=this.tracks[c];f=Object.assign(f,this.createTrack(e[i],n,f.id)),e[i].id=f.id;var m=a.indexOf(c);a.splice(m,1)}else r.push(i)}else r.push(i)}for(var g=0,y=r;g<y.length;g++){i=y[g];var b=this.createTrack(e[i],n);this.tracks.push(b),e[i].id=b.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var a={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:xY([],e.keypoints,!0).map((function(e){return gY({},e)}))};return void 0!==e.box&&(a.box=gY({},e.box)),a},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),BQ=function(e){function t(t){return e.call(this,t)||this}return mY(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),a=Math.max(e.box.yMin,t.box.yMin),r=Math.min(e.box.xMax,t.box.xMax),o=Math.min(e.box.yMax,t.box.yMax);if(n>=r||a>=o)return 0;var s=(r-n)*(o-a);return s/(e.box.width*e.box.height+t.box.width*t.box.height-s)},t}(PQ),WQ=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return mY(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,a=e;n<a.length;n++){for(var r=a[n],o=[],s=0,i=this.tracks;s<i.length;s++){var c=i[s];o.push(this.oks(r,c))}t.push(o)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,a=0,r=0,o=0;o<e.keypoints.length;++o){var s=e.keypoints[o],i=t.keypoints[o];if(!(s.score<this.keypointThreshold||i.score<this.keypointThreshold)){r+=1;var c=Math.pow(s.x-i.x,2)+Math.pow(s.y-i.y,2),l=2*this.keypointFalloff[o];a+=Math.exp(-1*c/(2*n*Math.pow(l,2)))}}return r<this.minNumKeyoints?0:a/r},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),a=Math.min.apply(Math,xY([1],n.map((function(e){return e.x})),!1)),r=Math.max.apply(Math,xY([0],n.map((function(e){return e.x})),!1)),o=Math.min.apply(Math,xY([1],n.map((function(e){return e.y})),!1));return(r-a)*(Math.max.apply(Math,xY([0],n.map((function(e){return e.y})),!1))-o)},t}(PQ);function UQ(e){switch(e){case zQ.BlazePose:return wY.reduce((function(e,t,n){return e[t]=n,e}),{});case zQ.PoseNet:case zQ.MoveNet:return vY.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model ".concat(e," is not supported."))}}(LQ=MQ||(MQ={})).Keypoint="keypoint",LQ.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(zQ||(zQ={}));Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case zQ.BlazePose:return kY;case zQ.PoseNet:case zQ.MoveNet:return SY;default:throw new Error("Model ".concat(e," is not supported."))}},getAdjacentPairs:function(e){switch(e){case zQ.BlazePose:return CY;case zQ.PoseNet:case zQ.MoveNet:return IY;default:throw new Error("Model ".concat(e," is not supported."))}},getKeypointIndexByName:UQ});var VQ=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],GQ={modelType:"SinglePose.Lightning",enableSmoothing:!0},HQ={},jQ={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},KQ={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},qQ={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function XQ(e,t){var n,a,r,o;return e?t.width>t.height?(n=1,a=t.height/t.width,r=0,o=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,a=1,r=(t.height/2-t.width/2)/t.height,o=0):t.width>t.height?(n=t.width/t.height,a=1,r=(t.height/2-t.width/2)/t.height,o=0):(n=1,a=t.height/t.width,r=0,o=(t.width/2-t.height/2)/t.width),{yMin:r,xMin:o,yMax:r+n,xMax:o+a,height:n,width:a}}function YQ(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var QQ=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=UQ(zQ.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new uQ(jQ),this.cropRegionFilterYMin=new cQ(.9),this.cropRegionFilterXMin=new cQ(.9),this.cropRegionFilterYMax=new cQ(.9),this.cropRegionFilterXMax=new cQ(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===MQ.Keypoint?this.tracker=new WQ(t.trackerConfig):t.trackerType===MQ.BoundingBox&&(this.tracker=new BQ(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return yY(this,void 0,void 0,(function(){var t,n,a,r,o;return bY(this,(function(s){switch(s.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===wo()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=s.sent(),s.label=3;case 3:for(t.dispose(),a={keypoints:[],score:0},r=0,o=0;o<17;++o)a.keypoints[o]={y:n[3*o],x:n[3*o+1],score:n[3*o+2]},a.keypoints[o].score>.2&&(++r,a.score+=a.keypoints[o].score);return r>0&&(a.score/=r),[2,a]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return yY(this,void 0,void 0,(function(){var t,n,a,r,o,s,i,c;return bY(this,(function(l){switch(l.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===wo()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=l.sent(),l.label=3;case 3:for(t.dispose(),a=[],r=n.length/56,o=0;o<r;++o)for(a[o]={keypoints:[]},s=56*o+51,a[o].box={yMin:n[s],xMin:n[s+1],yMax:n[s+2],xMax:n[s+3],width:n[s+3]-n[s+1],height:n[s+2]-n[s]},i=56*o+55,a[o].score=n[i],a[o].keypoints=[],c=0;c<17;++c)a[o].keypoints[c]={y:n[56*o+3*c],x:n[56*o+3*c+1],score:n[56*o+3*c+2]};return[2,a]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=HQ),yY(this,void 0,void 0,(function(){var a,r,o,s,i,c;return bY(this,(function(l){switch(l.label){case 0:return t=function(e){return null==e?HQ:gY({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?YY(e)&&(n=1e6*e.currentTime):n*=1e3,a=PY(e),r=zY(a),o=Ml(a,0),e instanceof Ar||a.dispose(),s=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(o,r,n)]);case 1:return s=l.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(o,r,n)];case 3:s=l.sent(),l.label=4;case 4:for(i=0;i<s.length;++i)for(c=0;c<s[i].keypoints.length;++c)s[i].keypoints[c].name=vY[c],s[i].keypoints[c].y*=r.height,s[i].keypoints[c].x*=r.width;return[2,s]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o,s,i=this;return bY(this,(function(c){switch(c.label){case 0:return this.cropRegion||(this.cropRegion=XQ(null==this.cropRegion,t)),a=bo((function(){var t=Fh([[i.cropRegion.yMin,i.cropRegion.xMin,i.cropRegion.yMax,i.cropRegion.xMax]]),n=gu([1],"int32"),a=[i.modelInputResolution.height,i.modelInputResolution.width];return Ts(fp.cropAndResize(e,t,n,a,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(a)];case 1:if(r=c.sent(),a.dispose(),r.score<this.minPoseScore)return this.reset(),[2,[]];for(o=0;o<r.keypoints.length;++o)r.keypoints[o].y=this.cropRegion.yMin+r.keypoints[o].y*this.cropRegion.height,r.keypoints[o].x=this.cropRegion.xMin+r.keypoints[o].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(r.keypoints=this.keypointFilter.apply(r.keypoints,n,1)),s=function(e,t,n,a){for(var r={},o=0,s=vY;o<s.length;o++){var i=s[o];r[i]=[t[n[i]].y*a.height,t[n[i]].x*a.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var c=(r.left_hip[0]+r.right_hip[0])/2,l=(r.left_hip[1]+r.right_hip[1])/2,u=function(e,t,n,a,r){for(var o=["left_shoulder","right_shoulder","left_hip","right_hip"],s=0,i=0,c=0;c<o.length;c++)(p=Math.abs(a-n[o[c]][0]))>s&&(s=p),(f=Math.abs(r-n[o[c]][1]))>i&&(i=f);for(var l=0,u=0,h=0,d=Object.keys(n);h<d.length;h++){var p,f,m=d[h];e[t[m]].score<.2||((p=Math.abs(a-n[m][0]))>l&&(l=p),(f=Math.abs(r-n[m][1]))>u&&(u=f))}return[s,i,l,u]}(t,n,r,c,l),h=u[0],d=u[1],p=u[2],f=u[3],m=Math.max(1.9*d,1.9*h,1.2*p,1.2*f),g=[c-(m=Math.min(m,Math.max(l,a.width-l,c,a.height-c))),l-m];if(m>Math.max(a.width,a.height)/2)return XQ(null==e,a);var y=2*m;return{yMin:g[0]/a.height,xMin:g[1]/a.width,yMax:(g[0]+y)/a.height,xMax:(g[1]+y)/a.width,height:(g[0]+y)/a.height-g[0]/a.height,width:(g[1]+y)/a.width-g[1]/a.width}}return XQ(null==e,a)}(this.cropRegion,r.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(s),[2,[r]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,h,d,p,f=this;return bY(this,(function(m){switch(m.label){case 0:return t.width>t.height?(r=this.multiPoseMaxDimension,o=Math.round(this.multiPoseMaxDimension*t.height/t.width),a=fp.resizeBilinear(e,[o,r]),i=r,c=32*Math.ceil(o/32),s=Ru(a,[[0,0],[0,c-o],[0,0],[0,0]])):(r=Math.round(this.multiPoseMaxDimension*t.width/t.height),o=this.multiPoseMaxDimension,a=fp.resizeBilinear(e,[o,r]),i=32*Math.ceil(r/32),c=o,s=Ru(a,[[0,0],[0,0],[0,i-r],[0,0]])),a.dispose(),e.dispose(),l=Ts(s,"int32"),s.dispose(),[4,this.runMultiPersonPoseModel(l)];case 1:for(u=m.sent(),l.dispose(),u=u.filter((function(e){return e.score>=f.minPoseScore})),d=0;d<u.length;++d)for(h=0;h<u[d].keypoints.length;++h)u[d].keypoints[h].y*=c/o,u[d].keypoints[h].x*=i/r;if(this.enableTracking&&(this.tracker.apply(u,n),this.enableSmoothing)){for(d=0;d<u.length;++d)this.keypointFilterMap.has(u[d].id)||this.keypointFilterMap.set(u[d].id,new uQ(jQ)),u[d].keypoints=this.keypointFilterMap.get(u[d].id).apply(u[d].keypoints,n,1);p=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){p.has(t)||f.keypointFilterMap.delete(t)}))}return[2,u]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),a=this.cropRegionFilterYMax.apply(e.yMax),r=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:a,xMax:r,height:a-t,width:r-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function ZQ(e){return void 0===e&&(e=GQ),yY(this,void 0,void 0,(function(){var t,n,a,r;return bY(this,(function(o){switch(o.label){case 0:return t=function(e){var t,n=null==e?GQ:gY({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(VQ.indexOf(n.modelType)<0)throw new Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat(VQ));if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=MQ.BoundingBox),n.trackerType===MQ.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=YQ(KQ,e);return t.keypointTrackerParams=gY({},KQ.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=KQ;else{if(n.trackerType!==MQ.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,YQ(qQ,t)):n.trackerConfig=qQ}return n}(e),a=!0,t.modelUrl?(a="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,oS(t.modelUrl,{fromTFHub:a})]):[3,2];case 1:return n=o.sent(),[3,4];case 2:return r=void 0,"SinglePose.Lightning"===t.modelType?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,oS(r,{fromTFHub:a})];case 3:n=o.sent(),o.label=4;case 4:return"webgl"===wo()&&ve().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new QQ(n,t)]}}))}))}var JQ={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},$Q=["MobileNetV1","ResNet50"],eZ={MobileNetV1:[8,16],ResNet50:[16]},tZ=[8,16,32],nZ={MobileNetV1:[.5,.75,1],ResNet50:[1]},aZ=[1,2,4],rZ={maxPoses:1,flipHorizontal:!1},oZ={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},sZ=[-123.15,-115.9,-103.06];function iZ(e){return Math.floor(e/2)}var cZ=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(iZ(e),e);)this.exchange(e,iZ(e)),e=iZ(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function lZ(e,t,n,a,r,o){for(var s=o.shape,i=s[0],c=s[1],l=!0,u=Math.max(n-r,0),h=Math.min(n+r+1,i),d=u;d<h;++d){for(var p=Math.max(a-r,0),f=Math.min(a+r+1,c),m=p;m<f;++m)if(o.get(d,m,e)>t){l=!1;break}if(!l)break}return l}function uZ(e){return yY(this,void 0,void 0,(function(){return bY(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function hZ(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+17)}}function dZ(e,t,n){var a=hZ(e.heatmapY,e.heatmapX,e.id,n),r=a.y,o=a.x;return{x:e.heatmapX*t+o,y:e.heatmapY*t+r}}function pZ(e,t,n,a){var r=n.x,o=n.y;return e.some((function(e){var n,s,i,c,l=e.keypoints;return n=o,s=r,(i=l[a].y-n)*i+(c=l[a].x-s)*c<=t}))}var fZ=vY.reduce((function(e,t,n){return e[t]=n,e}),{}),mZ=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[fZ[t],fZ[n]]})),gZ=mZ.map((function(e){return e[1]})),yZ=mZ.map((function(e){return e[0]}));function bZ(e,t,n){return e<t?t:e>n?n:e}function xZ(e,t,n,a){return{y:bZ(Math.round(e.y/t),0,n-1),x:bZ(Math.round(e.x/t),0,a-1)}}function vZ(e,t){return{x:e.x+t.x,y:e.y+t.y}}function wZ(e,t,n,a,r,o,s,i){void 0===i&&(i=2);for(var c=a.shape,l=c[0],u=c[1],h={y:t.y,x:t.x},d=vZ(h,function(e,t,n){var a=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,a+e)}}(e,xZ(h,o,l,u),s)),p=0;p<i;p++){var f=xZ(d,o,l,u),m=hZ(f.y,f.x,n,r);d=vZ({x:f.x*o,y:f.y*o},{x:m.x,y:m.y})}var g=xZ(d,o,l,u),y=a.get(g.y,g.x,n);return{y:d.y,x:d.x,name:vY[n],score:y}}function kZ(e,t,n,a,r,o){var s=t.shape[2],i=gZ.length,c=new Array(s),l=e.part,u=e.score,h=dZ(l,a,n);c[l.id]={score:u,name:vY[l.id],y:h.y,x:h.x};for(var d=i-1;d>=0;--d){var p=gZ[d],f=yZ[d];c[p]&&!c[f]&&(c[f]=wZ(d,c[p],f,t,n,a,o))}for(d=0;d<i;++d)p=yZ[d],f=gZ[d],c[p]&&!c[f]&&(c[f]=wZ(d,c[p],f,t,n,a,r));return c}function SZ(e,t,n){return n.reduce((function(n,a,r){var o=a.y,s=a.x,i=a.score;return pZ(e,t,{y:o,x:s},r)||(n+=i),n}),0)/n.length}function IZ(e,t,n,a,r,o,s,i){return void 0===s&&(s=.5),void 0===i&&(i=20),yY(this,void 0,void 0,(function(){var c,l,u,h,d,p,f,m,g,y,b,x;return bY(this,(function(v){switch(v.label){case 0:return[4,uZ([e,t,n,a])];case 1:for(c=v.sent(),l=c[0],u=c[1],h=c[2],d=c[3],p=[],f=function(e,t,n){for(var a=n.shape,r=a[0],o=a[1],s=a[2],i=new cZ(r*o*s,(function(e){return e.score})),c=0;c<r;++c)for(var l=0;l<o;++l)for(var u=0;u<s;++u){var h=n.get(c,l,u);h<e||lZ(u,h,c,l,1,n)&&i.enqueue({score:h,part:{heatmapY:c,heatmapX:l,id:u}})}return i}(s,0,l),m=i*i;p.length<o&&!f.empty();)g=f.dequeue(),y=dZ(g.part,r,u),pZ(p,m,y,g.part.id)||(b=kZ(g,l,u,r,h,d),x=SZ(p,m,b),p.push({keypoints:b,score:x}));return[2,p]}}))}))}function CZ(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];switch(t.length){case 0:e="fn main() ";break;case 1:e="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return e}var NZ=function(){function e(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=AW(this.outputShape),this.dispatch=TW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return e.prototype.getUserCode=function(){return"\n        ".concat(CZ("index")," {\n          if (index < uniforms.size) {\n            let y = B[index * 2];\n            let x = B[index * 2 + 1];\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\n            result[index] = A[outIndex];\n          }\n        }\n        ")},e}();var TZ=function(){function e(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,2!==e.length||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=AW(t),this.dispatch=TW(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return e.prototype.getUserCode=function(){return"\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\n      let outIndexX = outIndexY + uniforms.bShape.z;\n      let outY = i32(B[outIndexY]);\n      let outX = i32(B[outIndexX]);\n      return vec2<i32>(outY, outX);\n    }\n\n    ".concat(CZ("index")," {\n      if (index < uniforms.size) {\n        let indexY = index * ").concat(this.supportedLastDimension,";\n        let indexX = indexY + 1;\n        let heatmapY = A[indexY];\n        let heatmapX = A[indexX];\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\n        result[indexY] = f32(out[0]);\n        result[indexX] = f32(out[1]);\n      }\n    }\n    ")},e}();function EZ(e){var t=e.shape,n=t[0],a=t[1],r=t[2];return bo((function(){var t,o,s=Nc(e,[n*a,r]),i=rc(s,0),c=Ml(Fs(i,Ps(a,"int32")),1),l=Ml((t=i,o=a,bo((function(){var e=Fs(t,Ps(o,"int32"));return Ys(t,Os(e,Ps(o,"int32")))}))),1);return Rc([c,l],1)}))}function RZ(e,t,n){return bo((function(){var a=function(e,t){for(var n=[],a=0;a<vY.length;a++){var r=AZ(e.get(a,0).valueOf(),e.get(a,1).valueOf(),a,t),o=r.x,s=r.y;n.push(s),n.push(o)}return Fh(n,[vY.length,2])}(e,n);return As(Ts(Os(e.toTensor(),Ps(t,"int32")),"float32"),a)}))}function AZ(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+vY.length)}}function _Z(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,h,d;return bY(this,(function(p){switch(p.label){case 0:return a=0,r=EZ(e),[4,Promise.all([e.buffer(),t.buffer(),r.buffer()])];case 1:return o=p.sent(),s=o[0],i=o[1],c=o[2],[4,(l=RZ(c,n,i)).buffer()];case 2:return u=p.sent(),h=Array.from(function(e,t){for(var n=t.shape[0],a=new Float32Array(n),r=0;r<n;r++){var o=t.get(r,0),s=t.get(r,1);a[r]=e.get(o,s,r)}return a}(s,c)),d=h.map((function(e,t){return a+=e,{y:u.get(t,0),x:u.get(t,1),score:e,name:vY[t]}})),r.dispose(),l.dispose(),[2,{keypoints:d,score:a/d.length}]}}))}))}function FZ(e,t,n){return yY(this,void 0,void 0,(function(){var a,r,o;return bY(this,(function(s){return a=EZ(e),r=function(e,t,n){return bo((function(){var a=function(e,t){if(So()instanceof zW)return function(e,t){var n=So(),a=new TZ(e.shape),r=n.runWebGPUProgram(a,[e,t],"float32");return go().makeTensorFromTensorInfo(r)}(e,t);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}(e,n);return As(Ts(Os(e,Ps(t,"int32")),"float32"),a)}))}(a,n,t),o=function(e,t){if(So()instanceof zW)return function(e,t){var n=So(),a=new NZ(t.shape),r=n.runWebGPUProgram(a,[e,t],"float32");return go().makeTensorFromTensorInfo(r)}(e,t);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}(e,a),[2,[r,o]]}))}))}function OZ(e,t){return(e-1)%t==0}var DZ="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",MZ="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function zZ(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var LZ=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;P(-1===n[1]&&-1===n[2],(function(){return"Input shape [".concat(n[1],", ").concat(n[2],"] ")+"must both be equal to or -1"}));var a,r,o=(a=t.inputResolution,r=t.outputStride,{height:zZ(a.height,r),width:zZ(a.width,r)});!function(e){P(tZ.indexOf(e)>=0,(function(){return"outputStride of ".concat(e," is invalid. ")+"It must be either 8 or 16."}))}(t.outputStride),function(e,t){P(OZ(e.height,t),(function(){return"height of ".concat(e.height," is invalid for output stride ")+"".concat(t,".")})),P(OZ(e.width,t),(function(){return"width of ".concat(e.width," is invalid for output stride ")+"".concat(t,".")}))}(o,t.outputStride),this.inputResolution=o,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=rZ),yY(this,void 0,void 0,(function(){return bY(this,(function(n){return[2,this.estimatePosesGPU(e,t,!1)]}))}))},e.prototype.estimatePosesGPU=function(e,t,n){return void 0===t&&(t=rZ),void 0===n&&(n=!1),yY(this,void 0,void 0,(function(){var a,r,o,s,i,c,l,u,h,d,p,f,m,g,y,b,x,v;return bY(this,(function(w){switch(w.label){case 0:return a=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1){if((t=gY(gY({},oZ),t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(t.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(t.nmsRadius,"."))}return t}(t),null==e?[2,n?[[],[]]:[]]:(this.maxPoses=a.maxPoses,r=qY(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),o=r.imageTensor,s=r.padding,i="ResNet50"===this.architecture?As(o,sZ):KY(o,[-1,1]),c=this.posenetModel.predict(i),"ResNet50"===this.architecture?(l=Nh(c[2],[0]),u=Nh(c[3],[0]),h=Nh(c[0],[0]),d=Nh(c[1],[0])):(l=Nh(c[0],[0]),u=Nh(c[1],[0]),h=Nh(c[2],[0]),d=Nh(c[3],[0])),p=_c(u),1!==this.maxPoses?[3,5]:n?[4,FZ(p,l,this.outputStride)]:[3,2]);case 1:return m=w.sent(),y=m[0],g=m[1],f=[y,g],[3,4];case 2:return[4,_Z(p,l,this.outputStride)];case 3:y=w.sent(),f=[y],w.label=4;case 4:return[3,7];case 5:if(n)throw new Error("GPU renderer only supports single pose!");return[4,IZ(p,l,h,d,this.outputStride,this.maxPoses,a.scoreThreshold,a.nmsRadius)];case 6:f=w.sent(),w.label=7;case 7:if(n){if(!0===a.flipHorizontal)throw new Error("flipHorizontal is not supported!");b=this.getCanvasInfo(zY(e),this.inputResolution,s)}else v=zY(e),x=function(e,t,n,a){var r=t.height,o=t.width,s=r/(n.height*(1-a.top-a.bottom)),i=o/(n.width*(1-a.left-a.right)),c=-a.top*n.height,l=-a.left*n.width;if(1===i&&1===s&&0===c&&0===l)return e;for(var u=0,h=e;u<h.length;u++)for(var d=0,p=h[u].keypoints;d<p.length;d++){var f=p[d];f.x=(f.x+l)*i,f.y=(f.y+c)*s}return e}(f,v,this.inputResolution,s),a.flipHorizontal&&(x=function(e,t){for(var n=0,a=e;n<a.length;n++)for(var r=0,o=a[n].keypoints;r<o.length;r++){var s=o[r];s.x=t.width-1-s.x}return e}(x,v));return o.dispose(),i.dispose(),xo(c),l.dispose(),u.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,n?[f,b]:x]}}))}))},e.prototype.getCanvasInfo=function(e,t,n){var a=e.height,r=e.width,o=a/(t.height*(1-n.top-n.bottom)),s=r/(t.width*(1-n.left-n.right)),i=-n.top*t.height;return[-n.left*t.width,i,s,o,e.width,e.height]},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function PZ(e){return void 0===e&&(e=JQ),yY(this,void 0,void 0,(function(){var t,n,a,r,o;return bY(this,(function(s){switch(s.label){case 0:return"ResNet50"!==(t=function(e){var t=e||JQ;if(null==t.architecture&&(t.architecture="MobileNetV1"),$Q.indexOf(t.architecture)<0)throw new Error("Invalid architecture ".concat(t.architecture,". ")+"Should be one of ".concat($Q));if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),eZ[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride ".concat(t.outputStride,". ")+"Should be one of ".concat(eZ[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.multiplier&&(t.multiplier=1),nZ[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier ".concat(t.multiplier,". ")+"Should be one of ".concat(nZ[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.quantBytes&&(t.quantBytes=4),aZ.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(t.quantBytes,". ")+"Should be one of ".concat(aZ," ")+"for architecture ".concat(t.architecture,"."));if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(i=t.outputStride,c=t.quantBytes,l="model-stride".concat(i,".json"),n=4===c?MZ+"float/"+l:MZ+"quant".concat(c,"/")+l,[4,oS(t.modelUrl||n)]);case 1:return a=s.sent(),[2,new LZ(a,t)];case 2:return r=function(e,t,n){var a={1:"100",.75:"075",.5:"050"},r="model-stride".concat(e,".json");return 4===n?DZ+"float/".concat(a[t],"/")+r:DZ+"quant".concat(n,"/").concat(a[t],"/")+r}(t.outputStride,t.multiplier,t.quantBytes),[4,oS(t.modelUrl||r)];case 3:return o=s.sent(),[2,new LZ(o,t)]}var i,c,l}))}))}var BZ={SINGLEPOSE_LIGHTNING:"SinglePose.Lightning",SINGLEPOSE_THUNDER:"SinglePose.Thunder",MULTIPOSE_LIGHTNING:"MultiPose.Lightning"},WZ=n(29),UZ=n.n(WZ);const VZ="aqua",GZ=2;function HZ(e){let{y:t,x:n}=e;return[t,n]}function jZ(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;[[5,7],[7,9],[6,8],[8,10],[11,13],[13,15],[12,14],[14,16],[11,12],[5,6],[5,11],[6,12]].forEach((r=>{let[o,s]=r;const i=e[o],c=e[s];if(i&&c&&i.score>=t&&c.score>=t){const{x:e,y:t}=i,{x:r,y:o}=c;void 0!==e&&void 0!==t&&void 0!==r&&void 0!==o&&function(e,t,n,a,r){let[o,s]=e,[i,c]=t;r.beginPath(),r.moveTo(s*a,o*a),r.lineTo(c*a,i*a),r.lineWidth=GZ,r.strokeStyle=n,r.stroke()}(HZ({y:t,x:e}),HZ({y:o,x:r}),VZ,a,n)}}))}function KZ(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;e.forEach((e=>{if(e&&e.score>=t){const{x:t,y:r}=e;void 0!==t&&void 0!==r&&function(e,t,n,a,r){e.beginPath(),e.arc(n,t,a,0,2*Math.PI),e.fillStyle=r,e.fill()}(n,r*a,t*a,4,VZ)}}))}var qZ=n(579);const XZ=e=>{let{side:t,targetReps:n,isDetecting:a,setIsDetecting:r}=e;const o=(0,T.useRef)(null),s=(0,T.useRef)(null),[i,c]=(0,T.useState)(0),[l,u]=(0,T.useState)(0),[h,d]=(0,T.useState)(0),[p,f]=(0,T.useState)(0),[m,g]=(0,T.useState)(""),y=(0,T.useRef)(0),b=(0,T.useRef)(0),x=(0,T.useRef)(!1),v=(0,T.useRef)(l);return(0,T.useEffect)((()=>{console.log("ExerciseTracker initialized with",{side:t,targetReps:n});const e=()=>{(e=>{window.ReactNativeWebView&&window.ReactNativeWebView.postMessage(JSON.stringify(e))})({fps:i,repCount:l,armAngle:h,shoulderAngle:p})};let a=0,m=performance.now(),w=!0;const k=async t=>{const n=performance.now();if(a++,n-m>1e3){const t=Math.round(a/(n-m)*1e3);c(t),a=0,m=n,e()}if("undefined"!==typeof o.current&&null!==o.current&&4===o.current.video.readyState){const n=o.current.video,a=n.videoWidth,r=n.videoHeight;s.current.width=a,s.current.height=r,s.current.style.width="100%",s.current.style.height="auto";const i=s.current.getContext("2d");i.clearRect(0,0,a,r);const c=await t.estimatePoses(n);console.log("Poses estimated",c),I(c),S(c,a,r,i),e()}w&&requestAnimationFrame((()=>k(t)))},S=(e,t,n,a)=>{a.clearRect(0,0,t,n),e.length>0&&e[0].keypoints&&(KZ(e[0].keypoints,.3,a),jZ(e[0].keypoints,.3,a))},I=a=>{if(a.length>0&&a[0].keypoints){const o=a[0].keypoints,s=o.find((e=>e.name==="".concat(t,"_shoulder"))),i=o.find((e=>e.name==="".concat(t,"_elbow"))),c=o.find((e=>e.name==="".concat(t,"_wrist"))),l=o.find((e=>e.name==="".concat(t,"_hip")));if(s&&i&&c&&l){if([s,i,c,l].every((e=>e.score>.3))){const t=C(s,i,c),a=C(l,s,i);if(isNaN(t)||isNaN(a))g("Invalid angles detected");else{d(t),f(a);let o=y.current,s=b.current,i=x.current;if(a>0&&a<30&&(i||(i=!0,0===o?(o=1,g("Arm lowered 1"),console.log("Arm lowered 1 detected")):1===o&&1===s&&(o=2,g("Arm lowered 2"),console.log("Arm lowered 2 detected")))),a>=30&&a<=70&&(g("Intermediate range"),console.log("Intermediate Range Logic (30 to 70 degrees) newArmLoweredCount",o),console.log("Intermediate Range Logic (30 to 70 degrees) newArmLoweredFlag",i),console.log("Intermediate Range Logic (30 to 70 degrees) newArmUpCount",s)),a>70&&a<=90&&(1===o&&0===s&&(s=1,g("Arm up detected"),console.log("Arm up detected")),i=!1),1===s&&2===o&&a>0&&a<30&&(v.current<n&&(v.current++,u(v.current),g("Repetition completed"),console.log("Repetition completed")),o=0,s=0,i=!1,v.current>=n))return g("Target reps achieved!"),e(),void setTimeout((()=>{r(!1),g(""),u(0)}),5e3);y.current=o,b.current=s,x.current=i,console.log("armDown flag value",x.current),console.log("outside any if condition armUpCount value",b.current),console.log("outside any if condition armLoweredCount value",y.current),console.log("current repCount value",v.current)}}else g("Make sure all key points are visible")}else g("Move your ".concat(t," arm into the frame"))}else g("No person detected")},C=(e,t,n)=>{const a=e.x-t.x,r=e.y-t.y,o=n.x-t.x,s=n.y-t.y,i=a*o+r*s,c=Math.sqrt(a*a+r*r),l=Math.sqrt(o*o+s*s);if(0===c||0===l)return NaN;return Math.acos(i/(c*l))*(180/Math.PI)};return(async()=>{try{console.log("Initializing MoveNet"),await(e="webgl",Zr.setBackend(e)),await Zr.ready(),console.log("TensorFlow.js is ready");const t="localhost"===window.location.hostname?"/models/movenet/model.json":"".concat(".","/models/movenet/model.json"),n=await function(e,t){return yY(this,void 0,void 0,(function(){var n,a;return bY(this,(function(r){switch(e){case zQ.PoseNet:return[2,PZ(t)];case zQ.BlazePose:if(a=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,DQ(t)];if("mediapipe"===n.runtime)return[2,MY(t)];a=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(a));case zQ.MoveNet:return[2,ZQ(t)];default:throw new Error("".concat(e," is not a supported model name."))}}))}))}(zQ.MoveNet,{modelType:BZ.SINGLEPOSE_LIGHTNING,modelUrl:t});console.log("MoveNet model loaded successfully"),k(n)}catch(t){console.error("Error initializing MoveNet:",t)}var e})(),()=>{w=!1}}),[a,l,n,t,r,i,h,p]),(0,qZ.jsxs)("div",{children:[(0,qZ.jsx)(UZ(),{ref:o,playsInline:!0,controls:!1,style:{position:"absolute",top:0,left:0,zIndex:9,width:"100%",height:"auto",objectFit:"cover"},videoConstraints:{facingMode:"user"}}),(0,qZ.jsx)("canvas",{ref:s,style:{position:"absolute",top:0,left:0,zIndex:10,width:"100%",height:"auto"}}),(0,qZ.jsxs)("div",{style:{position:"absolute",top:10,left:10,display:"flex",flexDirection:"column",alignItems:"flex-start",gap:"5px",zIndex:10},children:[(0,qZ.jsxs)("div",{style:{color:"white",backgroundColor:"rgba(0, 0, 0, 0.6)",padding:"5px",borderRadius:"5px",textAlign:"left"},children:["FPS: ",i]}),(0,qZ.jsxs)("div",{style:{color:"white",backgroundColor:"rgba(0, 0, 0, 0.6)",padding:"5px",borderRadius:"5px",textAlign:"left"},children:["Reps: ",l]}),(0,qZ.jsx)("div",{style:{color:"white",backgroundColor:"rgba(0, 0, 0, 0.6)",padding:"10px",borderRadius:"5px",textAlign:"left"},children:m}),(0,qZ.jsxs)("div",{style:{color:"white",backgroundColor:"rgba(0, 0, 0, 0.6)",padding:"5px",borderRadius:"5px",textAlign:"left"},children:["Arm Angle: ",h.toFixed(2)]}),(0,qZ.jsxs)("div",{style:{color:"white",backgroundColor:"rgba(0, 0, 0, 0.6)",padding:"5px",borderRadius:"5px",textAlign:"left"},children:["Shoulder Angle: ",p.toFixed(2)]})]})]})};function YZ(){return YZ=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},YZ.apply(this,arguments)}var QZ;!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(QZ||(QZ={}));const ZZ="popstate";function JZ(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function $Z(e,t){return{usr:e.state,key:e.key,idx:t}}function eJ(e,t,n,a){return void 0===n&&(n=null),YZ({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?nJ(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function tJ(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function nJ(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function aJ(e,t,n,a){void 0===a&&(a={});let{window:r=document.defaultView,v5Compat:o=!1}=a,s=r.history,i=QZ.Pop,c=null,l=u();function u(){return(s.state||{idx:null}).idx}function h(){i=QZ.Pop;let e=u(),t=null==e?null:e-l;l=e,c&&c({action:i,location:p.location,delta:t})}function d(e){let t="null"!==r.location.origin?r.location.origin:r.location.href,n="string"===typeof e?e:tJ(e);return n=n.replace(/ $/,"%20"),JZ(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==l&&(l=0,s.replaceState(YZ({},s.state,{idx:l}),""));let p={get action(){return i},get location(){return e(r,s)},listen(e){if(c)throw new Error("A history only accepts one active listener");return r.addEventListener(ZZ,h),c=e,()=>{r.removeEventListener(ZZ,h),c=null}},createHref:e=>t(r,e),createURL:d,encodeLocation(e){let t=d(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){i=QZ.Push;let a=eJ(p.location,e,t);n&&n(a,e),l=u()+1;let h=$Z(a,l),d=p.createHref(a);try{s.pushState(h,"",d)}catch(f){if(f instanceof DOMException&&"DataCloneError"===f.name)throw f;r.location.assign(d)}o&&c&&c({action:i,location:p.location,delta:1})},replace:function(e,t){i=QZ.Replace;let a=eJ(p.location,e,t);n&&n(a,e),l=u();let r=$Z(a,l),h=p.createHref(a);s.replaceState(r,"",h),o&&c&&c({action:i,location:p.location,delta:0})},go:e=>s.go(e)};return p}var rJ;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(rJ||(rJ={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function oJ(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}Error;const sJ=["post","put","patch","delete"],iJ=(new Set(sJ),["get",...sJ]);new Set(iJ),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function cJ(){return cJ=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},cJ.apply(this,arguments)}const lJ=T.createContext(null);const uJ=T.createContext(null);function hJ(){return null!=T.useContext(uJ)}function dJ(){return hJ()||JZ(!1),T.useContext(uJ).location}T.Component;E.startTransition;function pJ(e){let{basename:t="/",children:n=null,location:a,navigationType:r=QZ.Pop,navigator:o,static:s=!1,future:i}=e;hJ()&&JZ(!1);let c=t.replace(/^\/*/,"/"),l=T.useMemo((()=>({basename:c,navigator:o,static:s,future:cJ({v7_relativeSplatPath:!1},i)})),[c,i,o,s]);"string"===typeof a&&(a=nJ(a));let{pathname:u="/",search:h="",hash:d="",state:p=null,key:f="default"}=a,m=T.useMemo((()=>{let e=oJ(u,c);return null==e?null:{location:{pathname:e,search:h,hash:d,state:p,key:f},navigationType:r}}),[c,u,h,d,p,f,r]);return null==m?null:T.createElement(lJ.Provider,{value:l},T.createElement(uJ.Provider,{children:n,value:m}))}new Promise((()=>{}));T.Component;const fJ=function(){const[e,t]=(0,T.useState)(!1),[n,a]=(0,T.useState)(0),[r,o]=(0,T.useState)("left"),s=new URLSearchParams(dJ().search);return(0,T.useEffect)((()=>{const e=s.get("reps"),n=s.get("side");e&&n&&(a(parseInt(e)),o(n),t(!0))}),[s]),(0,qZ.jsx)("div",{className:"App",children:(0,qZ.jsxs)("header",{className:"App-header",children:[!e&&(0,qZ.jsxs)("div",{style:{position:"absolute",bottom:10,left:10},children:[(0,qZ.jsx)("input",{type:"number",value:n,onChange:e=>a(parseInt(e.target.value)),placeholder:"Enter number of reps"}),(0,qZ.jsxs)("select",{value:r,onChange:e=>o(e.target.value),children:[(0,qZ.jsx)("option",{value:"left",children:"Left"}),(0,qZ.jsx)("option",{value:"right",children:"Right"})]}),(0,qZ.jsx)("button",{onClick:()=>{t(!0)},children:"Start Exercise"})]}),e&&(0,qZ.jsx)(XZ,{side:r,targetReps:n,isDetecting:e,setIsDetecting:t})]})})};var mJ=n(950),gJ=n.t(mJ,2);new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);try{window.__reactRouterVersion="6"}catch(kJ){}new Map;const yJ=E.startTransition;gJ.flushSync,E.useId;function bJ(e){let{basename:t,children:n,future:a,window:r}=e,o=T.useRef();var s;null==o.current&&(o.current=(void 0===(s={window:r,v5Compat:!0})&&(s={}),aJ((function(e,t){let{pathname:n,search:a,hash:r}=e.location;return eJ("",{pathname:n,search:a,hash:r},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:tJ(t)}),null,s)));let i=o.current,[c,l]=T.useState({action:i.action,location:i.location}),{v7_startTransition:u}=a||{},h=T.useCallback((e=>{u&&yJ?yJ((()=>l(e))):l(e)}),[l,u]);return T.useLayoutEffect((()=>i.listen(h)),[i,h]),T.createElement(pJ,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:i,future:a})}"undefined"!==typeof window&&"undefined"!==typeof window.document&&window.document.createElement;var xJ,vJ;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(xJ||(xJ={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(vJ||(vJ={}));R.createRoot(document.getElementById("root")).render((0,qZ.jsx)(T.StrictMode,{children:(0,qZ.jsx)(bJ,{children:(0,qZ.jsx)(fJ,{})})}))})()})();
//# sourceMappingURL=main.ec4c90c2.js.map